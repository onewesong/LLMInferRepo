{"question_title": "Transportation Expenses", "question_content": "There are N people participating in an event, and the transportation cost for the i-th person is A_i yen.\nTakahashi, the organizer of the event, decided to set a maximum limit x for the transportation subsidy. The subsidy for person i will be \\min(x, A_i) yen. Here, x must be a non-negative integer.\nGiven that Takahashi's budget is M yen, and he wants the total transportation subsidy for all N people to be at most M yen, what is the maximum possible value of the subsidy limit x?\nIf the subsidy limit can be made infinitely large, report that instead.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\ldots A_{N}\n\nOutput\n\nPrint the maximum value of the subsidy limit x that satisfies the budget condition, as an integer.\nIf the subsidy limit can be made infinitely large, print infinite instead.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq M \\leq 2 \\times 10^{14}\n- 1 \\leq A_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4 8\r\n1 3 2 4\n\nSample Output 1\n\n2\r\n\nIf the subsidy limit is set to 2 yen, the total transportation subsidy for all N people is \\min(2,1) + \\min(2,3) + \\min(2,2) + \\min(2,4) = 7 yen, which is within the budget of 8 yen.\nIf the subsidy limit is set to 3 yen, the total transportation subsidy for all N people is \\min(3,1) + \\min(3,3) + \\min(3,2) + \\min(3,4) = 9 yen, which exceeds the budget of 8 yen.\nTherefore, the maximum possible value of the subsidy limit is 2 yen.\n\nSample Input 2\n\n3 20\r\n5 3 2\n\nSample Output 2\n\ninfinite\r\n\nThe subsidy limit can be made infinitely large.\n\nSample Input 3\n\n10 23\r\n2 5 6 5 2 1 7 9 7 2\n\nSample Output 3\n\n2", "platform": "atcoder", "question_id": "abc365_c", "contest_id": "abc365", "contest_date": "2024-08-03T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"4 8\\n1 3 2 4\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 20\\n5 3 2\\n\", \"output\": \"infinite\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 23\\n2 5 6 5 2 1 7 9 7 2\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are N people participating in an event, and the transportation cost for the i-th person is A_i yen.\nTakahashi, the organizer of the event, decided to set a maximum limit x for the transportation subsidy. The subsidy for person i will be \\min(x, A_i) yen. Here, x must be a non-negative integer.\nGiven that Takahashi's budget is M yen, and he wants the total transportation subsidy for all N people to be at most M yen, what is the maximum possible value of the subsidy limit x?\nIf the subsidy limit can be made infinitely large, report that instead.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\ldots A_{N}\n\nOutput\n\nPrint the maximum value of the subsidy limit x that satisfies the budget condition, as an integer.\nIf the subsidy limit can be made infinitely large, print infinite instead.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq M \\leq 2 \\times 10^{14}\n- 1 \\leq A_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4 8\r\n1 3 2 4\n\nSample Output 1\n\n2\r\n\nIf the subsidy limit is set to 2 yen, the total transportation subsidy for all N people is \\min(2,1) + \\min(2,3) + \\min(2,2) + \\min(2,4) = 7 yen, which is within the budget of 8 yen.\nIf the subsidy limit is set to 3 yen, the total transportation subsidy for all N people is \\min(3,1) + \\min(3,3) + \\min(3,2) + \\min(3,4) = 9 yen, which exceeds the budget of 8 yen.\nTherefore, the maximum possible value of the subsidy limit is 2 yen.\n\nSample Input 2\n\n3 20\r\n5 3 2\n\nSample Output 2\n\ninfinite\r\n\nThe subsidy limit can be made infinitely large.\n\nSample Input 3\n\n10 23\r\n2 5 6 5 2 1 7 9 7 2\n\nSample Output 3\n\n2\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "minimum-average-of-smallest-and-largest-elements", "question_content": "You have an array of floating point numbers averages which is initially empty. You are given an array nums of n integers where n is even.\nYou repeat the following procedure n / 2 times:\n\nRemove the smallest element, minElement, and the largest element maxElement, from nums.\nAdd (minElement + maxElement) / 2 to averages.\n\nReturn the minimum element in averages.\n \nExample 1:\n\nInput: nums = [7,8,3,4,15,13,4,1]\nOutput: 5.5\nExplanation:\n\n\n\nstep\nnums\naverages\n\n\n0\n[7,8,3,4,15,13,4,1]\n[]\n\n\n1\n[7,8,3,4,13,4]\n[8]\n\n\n2\n[7,8,4,4]\n[8,8]\n\n\n3\n[7,4]\n[8,8,6]\n\n\n4\n[]\n[8,8,6,5.5]\n\n\n\nThe smallest element of averages, 5.5, is returned.\nExample 2:\n\nInput: nums = [1,9,8,3,10,5]\nOutput: 5.5\nExplanation:\n\n\n\nstep\nnums\naverages\n\n\n0\n[1,9,8,3,10,5]\n[]\n\n\n1\n[9,8,3,5]\n[5.5]\n\n\n2\n[8,5]\n[5.5,6]\n\n\n3\n[]\n[5.5,6,6.5]\n\n\n\n\nExample 3:\n\nInput: nums = [1,2,3,7,8,9]\nOutput: 5.0\nExplanation:\n\n\n\nstep\nnums\naverages\n\n\n0\n[1,2,3,7,8,9]\n[]\n\n\n1\n[2,3,7,8]\n[5]\n\n\n2\n[3,7]\n[5,5]\n\n\n3\n[]\n[5,5,5]\n\n\n\n\n \nConstraints:\n\n2 <= n == nums.length <= 50\nn is even.\n1 <= nums[i] <= 50", "platform": "leetcode", "question_id": "3471", "contest_id": "weekly-contest-403", "contest_date": "2024-06-22T00:00:00", "starter_code": "class Solution:\n    def minimumAverage(self, nums: List[int]) -> float:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"[7, 8, 3, 4, 15, 13, 4, 1]\", \"output\": \"5.5\", \"testtype\": \"functional\"}, {\"input\": \"[1, 9, 8, 3, 10, 5]\", \"output\": \"5.5\", \"testtype\": \"functional\"}, {\"input\": \"[1, 2, 3, 7, 8, 9]\", \"output\": \"5.0\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"minimumAverage\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou have an array of floating point numbers averages which is initially empty. You are given an array nums of n integers where n is even.\nYou repeat the following procedure n / 2 times:\n\nRemove the smallest element, minElement, and the largest element maxElement, from nums.\nAdd (minElement + maxElement) / 2 to averages.\n\nReturn the minimum element in averages.\n \nExample 1:\n\nInput: nums = [7,8,3,4,15,13,4,1]\nOutput: 5.5\nExplanation:\n\n\n\nstep\nnums\naverages\n\n\n0\n[7,8,3,4,15,13,4,1]\n[]\n\n\n1\n[7,8,3,4,13,4]\n[8]\n\n\n2\n[7,8,4,4]\n[8,8]\n\n\n3\n[7,4]\n[8,8,6]\n\n\n4\n[]\n[8,8,6,5.5]\n\n\n\nThe smallest element of averages, 5.5, is returned.\nExample 2:\n\nInput: nums = [1,9,8,3,10,5]\nOutput: 5.5\nExplanation:\n\n\n\nstep\nnums\naverages\n\n\n0\n[1,9,8,3,10,5]\n[]\n\n\n1\n[9,8,3,5]\n[5.5]\n\n\n2\n[8,5]\n[5.5,6]\n\n\n3\n[]\n[5.5,6,6.5]\n\n\n\n\nExample 3:\n\nInput: nums = [1,2,3,7,8,9]\nOutput: 5.0\nExplanation:\n\n\n\nstep\nnums\naverages\n\n\n0\n[1,2,3,7,8,9]\n[]\n\n\n1\n[2,3,7,8]\n[5]\n\n\n2\n[3,7]\n[5,5]\n\n\n3\n[]\n[5,5,5]\n\n\n\n\n \nConstraints:\n\n2 <= n == nums.length <= 50\nn is even.\n1 <= nums[i] <= 50\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def minimumAverage(self, nums: List[int]) -> float:\n        \n```\n\n"}
{"question_title": "Buy One Carton of Milk", "question_content": "A supermarket sells egg packs.\nA pack of 6 eggs costs S yen, a pack of 8 eggs costs M yen, and a pack of 12 eggs costs L yen.\nWhen you can buy any number of each pack, find the minimum amount of money required to purchase at least N eggs.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN S M L\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- 1 \\leq S,M,L \\leq 10^4\n- All input values are integers.\n\nSample Input 1\n\n16 120 150 200\n\nSample Output 1\n\n300\r\n\nIt is optimal to buy two 8-egg packs.\n\nSample Input 2\n\n10 100 50 10\n\nSample Output 2\n\n10\r\n\nIt is optimal to buy one 12-egg pack.\n\nSample Input 3\n\n99 600 800 1200\n\nSample Output 3\n\n10000\r\n\nIt is optimal to buy five 8-egg packs and five 12-egg packs.", "platform": "atcoder", "question_id": "abc331_b", "contest_id": "abc331", "contest_date": "2023-12-02T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"16 120 150 200\\n\", \"output\": \"300\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 100 50 10\\n\", \"output\": \"10\\n\", \"testtype\": \"stdin\"}, {\"input\": \"99 600 800 1200\\n\", \"output\": \"10000\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nA supermarket sells egg packs.\nA pack of 6 eggs costs S yen, a pack of 8 eggs costs M yen, and a pack of 12 eggs costs L yen.\nWhen you can buy any number of each pack, find the minimum amount of money required to purchase at least N eggs.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN S M L\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- 1 \\leq S,M,L \\leq 10^4\n- All input values are integers.\n\nSample Input 1\n\n16 120 150 200\n\nSample Output 1\n\n300\r\n\nIt is optimal to buy two 8-egg packs.\n\nSample Input 2\n\n10 100 50 10\n\nSample Output 2\n\n10\r\n\nIt is optimal to buy one 12-egg pack.\n\nSample Input 3\n\n99 600 800 1200\n\nSample Output 3\n\n10000\r\n\nIt is optimal to buy five 8-egg packs and five 12-egg packs.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Flip Row or Col", "question_content": "There is a H \\times W grid, and each cell contains 0 or 1. The cell at the i-th row from the top and the j-th column from the left contains an integer A_{i,j}.\nYou can perform the following two operations any number of times in any order:\n\n- Operation X: Choose an integer x (1 \\leq x \\leq H). For every integer 1 \\leq y \\leq W, replace A_{x,y} with 1 - A_{x,y}.\n- Operation Y: Choose an integer y (1 \\leq y \\leq W). For every integer 1 \\leq x \\leq H, replace A_{x,y} with 1 - A_{x,y}.\n\nFind the minimum possible value of \\displaystyle \\sum_{x=1}^H\\sum_{y=1}^W A_{x,y} after the process.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W\nA_{1,1}A_{1,2}\\ldots A_{1,W}\nA_{2,1}A_{2,2}\\ldots A_{2,W}\n\\vdots\nA_{H,1}A_{H,2}\\ldots A_{H,W}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq H \\leq 2\\times 10^5\n- 1 \\leq W \\leq 18\n- H and W are integers.\n- A_{i,1}A_{i,2}\\ldots A_{i,W} is a length-W string consisting of 0 and 1.\n\nSample Input 1\n\n3 3\n100\n010\n110\n\nSample Output 1\n\n2\n\nBy performing the following operations, the grid changes as shown below, and you get \\displaystyle \\sum_{x=1}^H\\sum_{y=1}^W A_{x,y} = 2.\n\n- Operation Y with y=1\n- Operation X with x=2\n\n\nIt is impossible to make \\displaystyle \\sum_{x=1}^H\\sum_{y=1}^W A_{x,y} \\leq 1, so the answer is 2.\n\nSample Input 2\n\n3 4\n1111\n1111\n1111\n\nSample Output 2\n\n0\n\nSample Input 3\n\n10 5\n10000\n00111\n11000\n01000\n10110\n01110\n10101\n00100\n00100\n10001\n\nSample Output 3\n\n13", "platform": "atcoder", "question_id": "abc396_g", "contest_id": "abc396", "contest_date": "2025-03-08T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3 3\\n100\\n010\\n110\", \"output\": \"2\", \"testtype\": \"stdin\"}, {\"input\": \"3 4\\n1111\\n1111\\n1111\", \"output\": \"0\", \"testtype\": \"stdin\"}, {\"input\": \"10 5\\n10000\\n00111\\n11000\\n01000\\n10110\\n01110\\n10101\\n00100\\n00100\\n10001\", \"output\": \"13\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a H \\times W grid, and each cell contains 0 or 1. The cell at the i-th row from the top and the j-th column from the left contains an integer A_{i,j}.\nYou can perform the following two operations any number of times in any order:\n\n- Operation X: Choose an integer x (1 \\leq x \\leq H). For every integer 1 \\leq y \\leq W, replace A_{x,y} with 1 - A_{x,y}.\n- Operation Y: Choose an integer y (1 \\leq y \\leq W). For every integer 1 \\leq x \\leq H, replace A_{x,y} with 1 - A_{x,y}.\n\nFind the minimum possible value of \\displaystyle \\sum_{x=1}^H\\sum_{y=1}^W A_{x,y} after the process.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W\nA_{1,1}A_{1,2}\\ldots A_{1,W}\nA_{2,1}A_{2,2}\\ldots A_{2,W}\n\\vdots\nA_{H,1}A_{H,2}\\ldots A_{H,W}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq H \\leq 2\\times 10^5\n- 1 \\leq W \\leq 18\n- H and W are integers.\n- A_{i,1}A_{i,2}\\ldots A_{i,W} is a length-W string consisting of 0 and 1.\n\nSample Input 1\n\n3 3\n100\n010\n110\n\nSample Output 1\n\n2\n\nBy performing the following operations, the grid changes as shown below, and you get \\displaystyle \\sum_{x=1}^H\\sum_{y=1}^W A_{x,y} = 2.\n\n- Operation Y with y=1\n- Operation X with x=2\n\n\nIt is impossible to make \\displaystyle \\sum_{x=1}^H\\sum_{y=1}^W A_{x,y} \\leq 1, so the answer is 2.\n\nSample Input 2\n\n3 4\n1111\n1111\n1111\n\nSample Output 2\n\n0\n\nSample Input 3\n\n10 5\n10000\n00111\n11000\n01000\n10110\n01110\n10101\n00100\n00100\n10001\n\nSample Output 3\n\n13\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Lucky Direction", "question_content": "You are given a string D representing one of the eight directions (north, east, west, south, northeast, northwest, southeast, southwest). The correspondence between the directions and their representing strings is as follows.\n\n- North: N\n- East: E\n- West: W\n- South: S\n- Northeast: NE\n- Northwest: NW\n- Southeast: SE\n- Southwest: SW\n\nPrint the string representing the direction opposite to the direction denoted by D.\n\nInput\n\nThe input is given from Standard Input in the following format:\nD\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- D is one of N, E, W, S, NE, NW, SE, SW.\n\nSample Input 1\n\nN\n\nSample Output 1\n\nS\r\n\nPrint S, which represents south, the direction opposite to north.\n\nSample Input 2\n\nSE\n\nSample Output 2\n\nNW\r\n\nPrint NW, which represents northwest, the direction opposite to southeast.", "platform": "atcoder", "question_id": "abc391_a", "contest_id": "abc391", "contest_date": "2025-02-01T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"N\", \"output\": \"S\", \"testtype\": \"stdin\"}, {\"input\": \"SE\", \"output\": \"NW\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string D representing one of the eight directions (north, east, west, south, northeast, northwest, southeast, southwest). The correspondence between the directions and their representing strings is as follows.\n\n- North: N\n- East: E\n- West: W\n- South: S\n- Northeast: NE\n- Northwest: NW\n- Southeast: SE\n- Southwest: SW\n\nPrint the string representing the direction opposite to the direction denoted by D.\n\nInput\n\nThe input is given from Standard Input in the following format:\nD\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- D is one of N, E, W, S, NE, NW, SE, SW.\n\nSample Input 1\n\nN\n\nSample Output 1\n\nS\r\n\nPrint S, which represents south, the direction opposite to north.\n\nSample Input 2\n\nSE\n\nSample Output 2\n\nNW\r\n\nPrint NW, which represents northwest, the direction opposite to southeast.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Cubes", "question_content": "You are given a positive integer N. Determine whether there exists a pair of positive integers (x,y) such that x^3 - y^3 = N. If such a pair exists, print one such pair (x,y).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nIf there is no pair of positive integers (x,y) satisfying x^3 - y^3 = N, print -1.\r\nIf there is such a pair, print x and y in this order separated by a space. If there are multiple solutions, printing any one of them is accepted as correct.\n\nConstraints\n\n\n- 1 \\leq N \\leq 10^{18}\n- All input values are integers.\n\nSample Input 1\n\n397\n\nSample Output 1\n\n12 11\r\n\nWe have 12^3 - 11^3 = 397, so (x,y) = (12,11) is a solution.\n\nSample Input 2\n\n1\n\nSample Output 2\n\n-1\r\n\nNo pair of positive integers (x,y) satisfies x^3 - y^3 = 1. Thus, print -1.\n\nSample Input 3\n\n39977273855577088\n\nSample Output 3\n\n342756 66212", "platform": "atcoder", "question_id": "abc397_d", "contest_id": "abc397", "contest_date": "2025-03-15T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"397\", \"output\": \"12 11\", \"testtype\": \"stdin\"}, {\"input\": \"1\", \"output\": \"-1\", \"testtype\": \"stdin\"}, {\"input\": \"39977273855577088\", \"output\": \"342756 66212\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a positive integer N. Determine whether there exists a pair of positive integers (x,y) such that x^3 - y^3 = N. If such a pair exists, print one such pair (x,y).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nIf there is no pair of positive integers (x,y) satisfying x^3 - y^3 = N, print -1.\r\nIf there is such a pair, print x and y in this order separated by a space. If there are multiple solutions, printing any one of them is accepted as correct.\n\nConstraints\n\n\n- 1 \\leq N \\leq 10^{18}\n- All input values are integers.\n\nSample Input 1\n\n397\n\nSample Output 1\n\n12 11\r\n\nWe have 12^3 - 11^3 = 397, so (x,y) = (12,11) is a solution.\n\nSample Input 2\n\n1\n\nSample Output 2\n\n-1\r\n\nNo pair of positive integers (x,y) satisfies x^3 - y^3 = 1. Thus, print -1.\n\nSample Input 3\n\n39977273855577088\n\nSample Output 3\n\n342756 66212\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "find-the-number-of-possible-ways-for-an-event", "question_content": "You are given three integers n, x, and y.\nAn event is being held for n performers. When a performer arrives, they are assigned to one of the x stages. All performers assigned to the same stage will perform together as a band, though some stages might remain empty.\nAfter all performances are completed, the jury will award each band a score in the range [1, y].\nReturn the total number of possible ways the event can take place.\nSince the answer may be very large, return it modulo 10^9 + 7.\nNote that two events are considered to have been held differently if either of the following conditions is satisfied:\n\nAny performer is assigned a different stage.\nAny band is awarded a different score.\n\n \nExample 1:\n\nInput: n = 1, x = 2, y = 3\nOutput: 6\nExplanation:\n\nThere are 2 ways to assign a stage to the performer.\nThe jury can award a score of either 1, 2, or 3 to the only band.\n\n\nExample 2:\n\nInput: n = 5, x = 2, y = 1\nOutput: 32\nExplanation:\n\nEach performer will be assigned either stage 1 or stage 2.\nAll bands will be awarded a score of 1.\n\n\nExample 3:\n\nInput: n = 3, x = 3, y = 4\nOutput: 684\n\n \nConstraints:\n\n1 <= n, x, y <= 1000", "platform": "leetcode", "question_id": "3604", "contest_id": "biweekly-contest-141", "contest_date": "2024-10-12T07:30:00", "starter_code": "class Solution:\n    def numberOfWays(self, n: int, x: int, y: int) -> int:\n        ", "difficulty": "hard", "public_test_cases": "[{\"input\": \"1\\n2\\n3\", \"output\": \"6\", \"testtype\": \"functional\"}, {\"input\": \"5\\n2\\n1\", \"output\": \"32\", \"testtype\": \"functional\"}, {\"input\": \"3\\n3\\n4\", \"output\": \"684\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"numberOfWays\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given three integers n, x, and y.\nAn event is being held for n performers. When a performer arrives, they are assigned to one of the x stages. All performers assigned to the same stage will perform together as a band, though some stages might remain empty.\nAfter all performances are completed, the jury will award each band a score in the range [1, y].\nReturn the total number of possible ways the event can take place.\nSince the answer may be very large, return it modulo 10^9 + 7.\nNote that two events are considered to have been held differently if either of the following conditions is satisfied:\n\nAny performer is assigned a different stage.\nAny band is awarded a different score.\n\n \nExample 1:\n\nInput: n = 1, x = 2, y = 3\nOutput: 6\nExplanation:\n\nThere are 2 ways to assign a stage to the performer.\nThe jury can award a score of either 1, 2, or 3 to the only band.\n\n\nExample 2:\n\nInput: n = 5, x = 2, y = 1\nOutput: 32\nExplanation:\n\nEach performer will be assigned either stage 1 or stage 2.\nAll bands will be awarded a score of 1.\n\n\nExample 3:\n\nInput: n = 3, x = 3, y = 4\nOutput: 684\n\n \nConstraints:\n\n1 <= n, x, y <= 1000\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def numberOfWays(self, n: int, x: int, y: int) -> int:\n        \n```\n\n"}
{"question_title": "reach-end-of-array-with-max-score", "question_content": "You are given an integer array nums of length n.\nYour goal is to start at index 0 and reach index n - 1. You can only jump to indices greater than your current index.\nThe score for a jump from index i to index j is calculated as (j - i) * nums[i].\nReturn the maximum possible total score by the time you reach the last index.\n \nExample 1:\n\nInput: nums = [1,3,1,5]\nOutput: 7\nExplanation:\nFirst, jump to index 1 and then jump to the last index. The final score is 1 * 1 + 2 * 3 = 7.\n\nExample 2:\n\nInput: nums = [4,3,1,3,2]\nOutput: 16\nExplanation:\nJump directly to the last index. The final score is 4 * 4 = 16.\n\n \nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^5", "platform": "leetcode", "question_id": "3528", "contest_id": "weekly-contest-414", "contest_date": "2024-09-07T19:30:00", "starter_code": "class Solution:\n    def findMaximumScore(self, nums: List[int]) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[1, 3, 1, 5]\", \"output\": \"7\", \"testtype\": \"functional\"}, {\"input\": \"[4, 3, 1, 3, 2]\", \"output\": \"16\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"findMaximumScore\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an integer array nums of length n.\nYour goal is to start at index 0 and reach index n - 1. You can only jump to indices greater than your current index.\nThe score for a jump from index i to index j is calculated as (j - i) * nums[i].\nReturn the maximum possible total score by the time you reach the last index.\n \nExample 1:\n\nInput: nums = [1,3,1,5]\nOutput: 7\nExplanation:\nFirst, jump to index 1 and then jump to the last index. The final score is 1 * 1 + 2 * 3 = 7.\n\nExample 2:\n\nInput: nums = [4,3,1,3,2]\nOutput: 16\nExplanation:\nJump directly to the last index. The final score is 4 * 4 = 16.\n\n \nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^5\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def findMaximumScore(self, nums: List[int]) -> int:\n        \n```\n\n"}
{"question_title": "Sum of Numbers Greater Than Me", "question_content": "You are given a sequence A=(A_1,\\ldots,A_N) of length N.\nFor each i=1,\\ldots,N, solve the following problem.\nProblem: Find the sum of all elements in A that are greater than A_i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 \\ldots A_N\n\nOutput\n\nFor each 1\\leq k\\leq N, let B_k be the answer to the problem when i=k. Print B_1,\\ldots,B_N in this order, separated by spaces.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2\\times 10^5\n- 1 \\leq A_i \\leq 10^6\n- All input values are integers.\n\nSample Input 1\n\n5\r\n1 4 1 4 2\n\nSample Output 1\n\n10 0 10 0 8\r\n\n\n- For i=1, the sum of elements greater than A_1=1 is 4+4+2=10.\n- For i=2, the sum of elements greater than A_2=4 is 0.\n- For i=3, the sum of elements greater than A_3=1 is 4+4+2=10.\n- For i=4, the sum of elements greater than A_4=4 is 0.\n- For i=5, the sum of elements greater than A_5=2 is 4+4=8.\n\nSample Input 2\n\n10\r\n31 42 59 26 53 58 97 93 23 54\n\nSample Output 2\n\n456 414 190 487 361 249 0 97 513 307\n\nSample Input 3\n\n50\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\nSample Output 3\n\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0", "platform": "atcoder", "question_id": "abc331_c", "contest_id": "abc331", "contest_date": "2023-12-02T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"5\\n1 4 1 4 2\\n\", \"output\": \"10 0 10 0 8\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10\\n31 42 59 26 53 58 97 93 23 54\\n\", \"output\": \"456 414 190 487 361 249 0 97 513 307\\n\", \"testtype\": \"stdin\"}, {\"input\": \"50\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"output\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a sequence A=(A_1,\\ldots,A_N) of length N.\nFor each i=1,\\ldots,N, solve the following problem.\nProblem: Find the sum of all elements in A that are greater than A_i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 \\ldots A_N\n\nOutput\n\nFor each 1\\leq k\\leq N, let B_k be the answer to the problem when i=k. Print B_1,\\ldots,B_N in this order, separated by spaces.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2\\times 10^5\n- 1 \\leq A_i \\leq 10^6\n- All input values are integers.\n\nSample Input 1\n\n5\r\n1 4 1 4 2\n\nSample Output 1\n\n10 0 10 0 8\r\n\n\n- For i=1, the sum of elements greater than A_1=1 is 4+4+2=10.\n- For i=2, the sum of elements greater than A_2=4 is 0.\n- For i=3, the sum of elements greater than A_3=1 is 4+4+2=10.\n- For i=4, the sum of elements greater than A_4=4 is 0.\n- For i=5, the sum of elements greater than A_5=2 is 4+4=8.\n\nSample Input 2\n\n10\r\n31 42 59 26 53 58 97 93 23 54\n\nSample Output 2\n\n456 414 190 487 361 249 0 97 513 307\n\nSample Input 3\n\n50\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\nSample Output 3\n\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Souvenirs", "question_content": "A souvenir shop at AtCoder Land sells N boxes.\nThe boxes are numbered 1 to N, and box i has a price of A_i yen and contains A_i pieces of candy.\nTakahashi wants to buy M out of the N boxes and give one box each to M people named 1, 2, \\ldots, M.\nHere, he wants to buy boxes that can satisfy the following condition:\n\n- For each i = 1, 2, \\ldots, M, person i is given a box containing at least B_i pieces of candy.\n\nNote that it is not allowed to give more than one box to a single person or to give the same box to multiple people.\nDetermine whether it is possible to buy M boxes that can satisfy the condition, and if it is possible, find the minimum total amount of money Takahashi needs to pay.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\ldots A_N\r\nB_1 B_2 \\ldots B_M\n\nOutput\n\nIf it is possible to buy M boxes that can satisfy the condition, print the minimum total amount of money Takahashi needs to pay. Otherwise, print -1.\n\nConstraints\n\n\n- 1 \\leq M \\leq N \\leq 2 \\times 10^5\n- 1 \\leq A_i, B_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4 2\r\n3 4 5 4\r\n1 4\n\nSample Output 1\n\n7\r\n\nTakahashi can buy boxes 1 and 4, and give box 1 to person 1 and box 4 to person 2 to satisfy the condition.\nIn this case, he needs to pay 7 yen in total, and it is impossible to satisfy the condition by paying less than 7 yen, so print 7.\n\nSample Input 2\n\n3 3\r\n1 1 1\r\n1000000000 1000000000 1000000000\n\nSample Output 2\n\n-1\n\nSample Input 3\n\n7 3\r\n2 6 8 9 5 1 11\r\n3 5 7\n\nSample Output 3\n\n19", "platform": "atcoder", "question_id": "abc358_d", "contest_id": "abc358", "contest_date": "2024-06-15T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"4 2\\n3 4 5 4\\n1 4\\n\", \"output\": \"7\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\n1 1 1\\n1000000000 1000000000 1000000000\\n\", \"output\": \"-1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"7 3\\n2 6 8 9 5 1 11\\n3 5 7\\n\", \"output\": \"19\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nA souvenir shop at AtCoder Land sells N boxes.\nThe boxes are numbered 1 to N, and box i has a price of A_i yen and contains A_i pieces of candy.\nTakahashi wants to buy M out of the N boxes and give one box each to M people named 1, 2, \\ldots, M.\nHere, he wants to buy boxes that can satisfy the following condition:\n\n- For each i = 1, 2, \\ldots, M, person i is given a box containing at least B_i pieces of candy.\n\nNote that it is not allowed to give more than one box to a single person or to give the same box to multiple people.\nDetermine whether it is possible to buy M boxes that can satisfy the condition, and if it is possible, find the minimum total amount of money Takahashi needs to pay.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\ldots A_N\r\nB_1 B_2 \\ldots B_M\n\nOutput\n\nIf it is possible to buy M boxes that can satisfy the condition, print the minimum total amount of money Takahashi needs to pay. Otherwise, print -1.\n\nConstraints\n\n\n- 1 \\leq M \\leq N \\leq 2 \\times 10^5\n- 1 \\leq A_i, B_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4 2\r\n3 4 5 4\r\n1 4\n\nSample Output 1\n\n7\r\n\nTakahashi can buy boxes 1 and 4, and give box 1 to person 1 and box 4 to person 2 to satisfy the condition.\nIn this case, he needs to pay 7 yen in total, and it is impossible to satisfy the condition by paying less than 7 yen, so print 7.\n\nSample Input 2\n\n3 3\r\n1 1 1\r\n1000000000 1000000000 1000000000\n\nSample Output 2\n\n-1\n\nSample Input 3\n\n7 3\r\n2 6 8 9 5 1 11\r\n3 5 7\n\nSample Output 3\n\n19\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Ball and Box", "question_content": "Mr. Ball and Mr. Box will play a game with balls and boxes.\nInitially, Mr. Ball has 10^{100} balls of each of M different types, and Mr. Box has 10^{100} yen.\nThere are N boxes, where the i-th box has capacity V_i and costs P_i yen. During the game, Mr. Box can buy any box at any time.\nIn this game, the following operations are repeated until the game ends:\n\n- Mr. Ball chooses one ball and gives it to Mr. Box.\n- Mr. Box either accepts the ball or ends the game without accepting it.\n- If Mr. Box accepts the ball, he chooses one of his purchased boxes and puts the ball in it.\n- If the box with the ball satisfies the following conditions, Mr. Box receives 1 yen. Otherwise, the game ends.\n- The number of balls in the box does not exceed its capacity.\n- All balls in the box are of the same type.\n\n\n\nMr. Ball will play optimally to minimize Mr. Box's final money, while Mr. Box will play optimally to maximize it.\nHow much will Mr. Box's money increase throughout the game?\nHere, both players have access to all information. In particular, Mr. Ball can see the capacity, price, and contents (type and number of balls) of each box.\nAlso, note that Mr. Box's initial money is large enough that he will never run out of money to buy boxes.\nSolve T test cases for each input file.\n\nInput\n\nThe input is given from Standard Input in the following format, where \\mathrm{case}_i represents the i-th test case:\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\nN M\nV_1 P_1\nV_2 P_2\n\\vdots\nV_N P_N\n\nOutput\n\nPrint the difference between Mr. Box's final and initial money when both players play optimally.\n\nConstraints\n\n\n- 1\\le T,N,M\\le 3\\times 10^5\n- 1\\le V_i,P_i \\le 10^9\n- The sum of N over the T test cases is at most 3\\times 10^5.\n- All input values are integers.\n\nSample Input 1\n\n3\n3 2\n1 1000000000\n3 1\n3 1\n1 300000\n1000000000 1\n10 4\n22 5\n26 45\n72 21\n47 39\n97 2\n75 35\n82 24\n17 46\n32 22\n28 67\n\nSample Output 1\n\n2\n0\n28\n\nIn the first test case, there are two types of balls and three boxes.\nLet us call the two types of balls white and black balls, and call the i-th box box i.\nHere is an example of how the game could proceed where the money increases by 2 yen.\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box accepts the ball, buys box 2 for 1 yen, and puts the white ball in it.\n- Box 2 contains 1 white ball. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box accepts the ball and puts it in box 2.\n- Box 2 contains 2 white balls. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a black ball.\n- Mr. Box accepts the ball, buys box 3 for 1 yen, and puts the black ball in it.\n- Box 3 contains 1 black ball. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box accepts the ball and puts it in box 2.\n- Box 2 contains 3 white balls. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box chooses to end the game without accepting it.\n\nFinally, box 2 contains 3 white balls and box 3 contains 1 black ball.\nMr. Box spent 2 yen and received 4 yen, so his money increased by 2 yen.\nIn the second test case, Mr. Ball can play in a way that prevents Mr. Box from earning any money.", "platform": "atcoder", "question_id": "arc186_c", "contest_id": "arc186", "contest_date": "2024-10-27T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3\\n3 2\\n1 1000000000\\n3 1\\n3 1\\n1 300000\\n1000000000 1\\n10 4\\n22 5\\n26 45\\n72 21\\n47 39\\n97 2\\n75 35\\n82 24\\n17 46\\n32 22\\n28 67\", \"output\": \"2\\n0\\n28\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nMr. Ball and Mr. Box will play a game with balls and boxes.\nInitially, Mr. Ball has 10^{100} balls of each of M different types, and Mr. Box has 10^{100} yen.\nThere are N boxes, where the i-th box has capacity V_i and costs P_i yen. During the game, Mr. Box can buy any box at any time.\nIn this game, the following operations are repeated until the game ends:\n\n- Mr. Ball chooses one ball and gives it to Mr. Box.\n- Mr. Box either accepts the ball or ends the game without accepting it.\n- If Mr. Box accepts the ball, he chooses one of his purchased boxes and puts the ball in it.\n- If the box with the ball satisfies the following conditions, Mr. Box receives 1 yen. Otherwise, the game ends.\n- The number of balls in the box does not exceed its capacity.\n- All balls in the box are of the same type.\n\n\n\nMr. Ball will play optimally to minimize Mr. Box's final money, while Mr. Box will play optimally to maximize it.\nHow much will Mr. Box's money increase throughout the game?\nHere, both players have access to all information. In particular, Mr. Ball can see the capacity, price, and contents (type and number of balls) of each box.\nAlso, note that Mr. Box's initial money is large enough that he will never run out of money to buy boxes.\nSolve T test cases for each input file.\n\nInput\n\nThe input is given from Standard Input in the following format, where \\mathrm{case}_i represents the i-th test case:\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\nN M\nV_1 P_1\nV_2 P_2\n\\vdots\nV_N P_N\n\nOutput\n\nPrint the difference between Mr. Box's final and initial money when both players play optimally.\n\nConstraints\n\n\n- 1\\le T,N,M\\le 3\\times 10^5\n- 1\\le V_i,P_i \\le 10^9\n- The sum of N over the T test cases is at most 3\\times 10^5.\n- All input values are integers.\n\nSample Input 1\n\n3\n3 2\n1 1000000000\n3 1\n3 1\n1 300000\n1000000000 1\n10 4\n22 5\n26 45\n72 21\n47 39\n97 2\n75 35\n82 24\n17 46\n32 22\n28 67\n\nSample Output 1\n\n2\n0\n28\n\nIn the first test case, there are two types of balls and three boxes.\nLet us call the two types of balls white and black balls, and call the i-th box box i.\nHere is an example of how the game could proceed where the money increases by 2 yen.\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box accepts the ball, buys box 2 for 1 yen, and puts the white ball in it.\n- Box 2 contains 1 white ball. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box accepts the ball and puts it in box 2.\n- Box 2 contains 2 white balls. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a black ball.\n- Mr. Box accepts the ball, buys box 3 for 1 yen, and puts the black ball in it.\n- Box 3 contains 1 black ball. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box accepts the ball and puts it in box 2.\n- Box 2 contains 3 white balls. This satisfies the conditions, so Mr. Box receives 1 yen.\n\n\n- Mr. Ball chooses and gives a white ball.\n- Mr. Box chooses to end the game without accepting it.\n\nFinally, box 2 contains 3 white balls and box 3 contains 1 black ball.\nMr. Box spent 2 yen and received 4 yen, so his money increased by 2 yen.\nIn the second test case, Mr. Ball can play in a way that prevents Mr. Box from earning any money.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Paint", "question_content": "There is a grid with H rows and W columns. Initially, all cells are painted with color 0.\nYou will perform the following operations in the order i = 1, 2, \\ldots, M.\n\n- \nIf T_i = 1, repaint all cells in the A_i-th row with color X_i.\n\n- \nIf T_i = 2, repaint all cells in the A_i-th column with color X_i.\n\n\nAfter all operations are completed, for each color i that exists on the grid, find the number of cells that are painted with color i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W M\nT_1 A_1 X_1\nT_2 A_2 X_2\n\\vdots\nT_M A_M X_M\n\nOutput\n\nLet K be the number of distinct integers i such that there are cells painted with color i. Print K + 1 lines.\nThe first line should contain the value of K.\nThe second and subsequent lines should contain, for each color i that exists on the grid, the color number i and the number of cells painted with that color.\nSpecifically, the (i + 1)-th line (1 \\leq i \\leq K) should contain the color number c_i and the number of cells x_i painted with color c_i, in this order, separated by a space.\nHere, print the color numbers in ascending order. That is, ensure that c_1 < c_2 < \\ldots < c_K. Note also that x_i > 0 is required.\n\nConstraints\n\n\n- 1 \\leq H, W, M \\leq 2 \\times 10^5\n- T_i \\in \\lbrace 1, 2 \\rbrace\n- 1 \\leq A_i \\leq H for each i such that T_i = 1,\n- 1 \\leq A_i \\leq W for each i such that T_i = 2.\n- 0 \\leq X_i \\leq 2 \\times 10^5\n- All input values are integers.\n\nSample Input 1\n\n3 4 4\n1 2 5\n2 4 0\n1 3 3\n1 3 2\n\nSample Output 1\n\n3\n0 5\n2 4\n5 3\n\nThe operations will change the colors of the cells in the grid as follows:\n0000   0000   0000   0000   0000\n0000 → 5555 → 5550 → 5550 → 5550 \n0000   0000   0000   3333   2222\n\nEventually, there are five cells painted with color 0, four with color 2, and three with color 5.\n\nSample Input 2\n\n1 1 5\n1 1 1\n1 1 10\n2 1 100\n1 1 1000\n2 1 10000\n\nSample Output 2\n\n1\n10000 1\n\nSample Input 3\n\n5 5 10\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n2 1 6\n2 2 7\n2 3 8\n2 4 9\n2 5 10\n\nSample Output 3\n\n5\n6 5\n7 5\n8 5\n9 5\n10 5", "platform": "atcoder", "question_id": "abc346_e", "contest_id": "abc346", "contest_date": "2024-03-23T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3 4 4\\n1 2 5\\n2 4 0\\n1 3 3\\n1 3 2\\n\", \"output\": \"3\\n0 5\\n2 4\\n5 3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1 1 5\\n1 1 1\\n1 1 10\\n2 1 100\\n1 1 1000\\n2 1 10000\\n\", \"output\": \"1\\n10000 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 5 10\\n1 1 1\\n1 2 2\\n1 3 3\\n1 4 4\\n1 5 5\\n2 1 6\\n2 2 7\\n2 3 8\\n2 4 9\\n2 5 10\\n\", \"output\": \"5\\n6 5\\n7 5\\n8 5\\n9 5\\n10 5\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a grid with H rows and W columns. Initially, all cells are painted with color 0.\nYou will perform the following operations in the order i = 1, 2, \\ldots, M.\n\n- \nIf T_i = 1, repaint all cells in the A_i-th row with color X_i.\n\n- \nIf T_i = 2, repaint all cells in the A_i-th column with color X_i.\n\n\nAfter all operations are completed, for each color i that exists on the grid, find the number of cells that are painted with color i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W M\nT_1 A_1 X_1\nT_2 A_2 X_2\n\\vdots\nT_M A_M X_M\n\nOutput\n\nLet K be the number of distinct integers i such that there are cells painted with color i. Print K + 1 lines.\nThe first line should contain the value of K.\nThe second and subsequent lines should contain, for each color i that exists on the grid, the color number i and the number of cells painted with that color.\nSpecifically, the (i + 1)-th line (1 \\leq i \\leq K) should contain the color number c_i and the number of cells x_i painted with color c_i, in this order, separated by a space.\nHere, print the color numbers in ascending order. That is, ensure that c_1 < c_2 < \\ldots < c_K. Note also that x_i > 0 is required.\n\nConstraints\n\n\n- 1 \\leq H, W, M \\leq 2 \\times 10^5\n- T_i \\in \\lbrace 1, 2 \\rbrace\n- 1 \\leq A_i \\leq H for each i such that T_i = 1,\n- 1 \\leq A_i \\leq W for each i such that T_i = 2.\n- 0 \\leq X_i \\leq 2 \\times 10^5\n- All input values are integers.\n\nSample Input 1\n\n3 4 4\n1 2 5\n2 4 0\n1 3 3\n1 3 2\n\nSample Output 1\n\n3\n0 5\n2 4\n5 3\n\nThe operations will change the colors of the cells in the grid as follows:\n0000   0000   0000   0000   0000\n0000 → 5555 → 5550 → 5550 → 5550 \n0000   0000   0000   3333   2222\n\nEventually, there are five cells painted with color 0, four with color 2, and three with color 5.\n\nSample Input 2\n\n1 1 5\n1 1 1\n1 1 10\n2 1 100\n1 1 1000\n2 1 10000\n\nSample Output 2\n\n1\n10000 1\n\nSample Input 3\n\n5 5 10\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n2 1 6\n2 2 7\n2 3 8\n2 4 9\n2 5 10\n\nSample Output 3\n\n5\n6 5\n7 5\n8 5\n9 5\n10 5\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Alphabet Tiles", "question_content": "AtCoder Land sells tiles with English letters written on them. Takahashi is thinking of making a nameplate by arranging these tiles in a row.\n\nFind the number, modulo 998244353, of strings consisting of uppercase English letters with a length between 1 and K, inclusive, that satisfy the following conditions:\n\n- For every integer i satisfying 1 \\leq i \\leq 26, the following holds:\n- Let a_i be the i-th uppercase English letter in lexicographical order. For example, a_1 =  A, a_5 =  E, a_{26} =  Z.\n- The number of occurrences of a_i in the string is between 0 and C_i, inclusive.\n\nInput\n\nThe input is given from Standard Input in the following format:\nK\r\nC_1 C_2 \\ldots C_{26}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq K \\leq 1000\n- 0 \\leq C_i \\leq 1000\n- All input values are integers.\n\nSample Input 1\n\n2\r\n2 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nSample Output 1\n\n10\r\n\nThe 10 strings that satisfy the conditions are A, B, C, AA, AB, AC, BA, BC, CA, CB.\n\nSample Input 2\n\n358\r\n1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nSample Output 2\n\n64\n\nSample Input 3\n\n1000\r\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n\nSample Output 3\n\n270274035", "platform": "atcoder", "question_id": "abc358_e", "contest_id": "abc358", "contest_date": "2024-06-15T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"2\\n2 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\", \"output\": \"10\\n\", \"testtype\": \"stdin\"}, {\"input\": \"358\\n1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\", \"output\": \"64\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1000\\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\\n\", \"output\": \"270274035\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nAtCoder Land sells tiles with English letters written on them. Takahashi is thinking of making a nameplate by arranging these tiles in a row.\n\nFind the number, modulo 998244353, of strings consisting of uppercase English letters with a length between 1 and K, inclusive, that satisfy the following conditions:\n\n- For every integer i satisfying 1 \\leq i \\leq 26, the following holds:\n- Let a_i be the i-th uppercase English letter in lexicographical order. For example, a_1 =  A, a_5 =  E, a_{26} =  Z.\n- The number of occurrences of a_i in the string is between 0 and C_i, inclusive.\n\nInput\n\nThe input is given from Standard Input in the following format:\nK\r\nC_1 C_2 \\ldots C_{26}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq K \\leq 1000\n- 0 \\leq C_i \\leq 1000\n- All input values are integers.\n\nSample Input 1\n\n2\r\n2 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nSample Output 1\n\n10\r\n\nThe 10 strings that satisfy the conditions are A, B, C, AA, AB, AC, BA, BC, CA, CB.\n\nSample Input 2\n\n358\r\n1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nSample Output 2\n\n64\n\nSample Input 3\n\n1000\r\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n\nSample Output 3\n\n270274035\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "maximum-value-sum-by-placing-three-rooks-i", "question_content": "You are given a m x n 2D array board representing a chessboard, where board[i][j] represents the value of the cell (i, j).\nRooks in the same row or column attack each other. You need to place three rooks on the chessboard such that the rooks do not attack each other.\nReturn the maximum sum of the cell values on which the rooks are placed.\n \nExample 1:\n\nInput: board = [[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\nOutput: 4\nExplanation:\n\nWe can place the rooks in the cells (0, 2), (1, 3), and (2, 1) for a sum of 1 + 1 + 2 = 4.\n\nExample 2:\n\nInput: board = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 15\nExplanation:\nWe can place the rooks in the cells (0, 0), (1, 1), and (2, 2) for a sum of 1 + 5 + 9 = 15.\n\nExample 3:\n\nInput: board = [[1,1,1],[1,1,1],[1,1,1]]\nOutput: 3\nExplanation:\nWe can place the rooks in the cells (0, 2), (1, 1), and (2, 0) for a sum of 1 + 1 + 1 = 3.\n\n \nConstraints:\n\n3 <= m == board.length <= 100\n3 <= n == board[i].length <= 100\n-10^9 <= board[i][j] <= 10^9", "platform": "leetcode", "question_id": "3550", "contest_id": "biweekly-contest-137", "contest_date": "2024-08-17T07:30:00", "starter_code": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        ", "difficulty": "hard", "public_test_cases": "[{\"input\": \"[[-3, 1, 1, 1], [-3, 1, -3, 1], [-3, 2, 1, 1]]\", \"output\": \"4\", \"testtype\": \"functional\"}, {\"input\": \"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\", \"output\": \"15\", \"testtype\": \"functional\"}, {\"input\": \"[[1, 1, 1], [1, 1, 1], [1, 1, 1]]\", \"output\": \"3\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"maximumValueSum\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a m x n 2D array board representing a chessboard, where board[i][j] represents the value of the cell (i, j).\nRooks in the same row or column attack each other. You need to place three rooks on the chessboard such that the rooks do not attack each other.\nReturn the maximum sum of the cell values on which the rooks are placed.\n \nExample 1:\n\nInput: board = [[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\nOutput: 4\nExplanation:\n\nWe can place the rooks in the cells (0, 2), (1, 3), and (2, 1) for a sum of 1 + 1 + 2 = 4.\n\nExample 2:\n\nInput: board = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 15\nExplanation:\nWe can place the rooks in the cells (0, 0), (1, 1), and (2, 2) for a sum of 1 + 5 + 9 = 15.\n\nExample 3:\n\nInput: board = [[1,1,1],[1,1,1],[1,1,1]]\nOutput: 3\nExplanation:\nWe can place the rooks in the cells (0, 2), (1, 1), and (2, 0) for a sum of 1 + 1 + 1 = 3.\n\n \nConstraints:\n\n3 <= m == board.length <= 100\n3 <= n == board[i].length <= 100\n-10^9 <= board[i][j] <= 10^9\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        \n```\n\n"}
{"question_title": "Count Grid 3", "question_content": "You are given a grid S with H rows and W columns consisting of 1, 2, 3, and ?. The character at the i-th row and j-th column is S_{i,j}.\nBy replacing each ? in S with 1, 2, or 3, we can obtain 3^q different grids, where q is the number of ?. Among these grids, how many satisfy the following condition? Print the count modulo 998244353.\n\n- Any two adjacent (edge-sharing) cells contain different digits.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W\r\nS_{1,1}S_{1,2}\\ldots S_{1,W}\r\nS_{2,1}S_{2,2}\\ldots S_{2,W}\r\n\\vdots\r\nS_{H,1}S_{H,2}\\ldots S_{H,W}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq H, W\n- H \\times W \\leq 200\n- H and W are integers.\n- S is a grid with H rows and W columns consisting of 1, 2, 3, and ?.\n\nSample Input 1\n\n2 2\r\n1?\r\n??\n\nSample Output 1\n\n6\r\n\nAmong the grids obtained by replacing each ? in S with 1, 2, or 3, the following six grids satisfy the condition.\n12  12  12  13  13  13\r\n21  23  31  21  31  32\n\nSample Input 2\n\n2 3\r\n123\r\n3?1\n\nSample Output 2\n\n0\r\n\nNone of the grids obtained by replacing ? satisfies the condition.\n\nSample Input 3\n\n8 8\r\n3?1?????\r\n???1????\r\n??????2?\r\n????????\r\n????????\r\n????13??\r\n??13?1??\r\n????????\n\nSample Output 3\n\n779135038", "platform": "atcoder", "question_id": "abc379_g", "contest_id": "abc379", "contest_date": "2024-11-09T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"2 2\\n1?\\n??\", \"output\": \"6\", \"testtype\": \"stdin\"}, {\"input\": \"2 3\\n123\\n3?1\", \"output\": \"0\", \"testtype\": \"stdin\"}, {\"input\": \"8 8\\n3?1?????\\n???1????\\n??????2?\\n????????\\n????????\\n????13??\\n??13?1??\\n????????\", \"output\": \"779135038\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a grid S with H rows and W columns consisting of 1, 2, 3, and ?. The character at the i-th row and j-th column is S_{i,j}.\nBy replacing each ? in S with 1, 2, or 3, we can obtain 3^q different grids, where q is the number of ?. Among these grids, how many satisfy the following condition? Print the count modulo 998244353.\n\n- Any two adjacent (edge-sharing) cells contain different digits.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W\r\nS_{1,1}S_{1,2}\\ldots S_{1,W}\r\nS_{2,1}S_{2,2}\\ldots S_{2,W}\r\n\\vdots\r\nS_{H,1}S_{H,2}\\ldots S_{H,W}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq H, W\n- H \\times W \\leq 200\n- H and W are integers.\n- S is a grid with H rows and W columns consisting of 1, 2, 3, and ?.\n\nSample Input 1\n\n2 2\r\n1?\r\n??\n\nSample Output 1\n\n6\r\n\nAmong the grids obtained by replacing each ? in S with 1, 2, or 3, the following six grids satisfy the condition.\n12  12  12  13  13  13\r\n21  23  31  21  31  32\n\nSample Input 2\n\n2 3\r\n123\r\n3?1\n\nSample Output 2\n\n0\r\n\nNone of the grids obtained by replacing ? satisfies the condition.\n\nSample Input 3\n\n8 8\r\n3?1?????\r\n???1????\r\n??????2?\r\n????????\r\n????????\r\n????13??\r\n??13?1??\r\n????????\n\nSample Output 3\n\n779135038\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Nine", "question_content": "We have the following 3 \\times 3 board with integers from 1 through 9 written on it.\n\nYou are given two integers A and B between 1 and 9, where A < B.\nDetermine if the two squares with A and B written on them are adjacent horizontally.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA B\n\nOutput\n\nPrint Yes if the two squares with A and B written on them are adjacent horizontally, and No otherwise.\n\nConstraints\n\n\n- 1 \\le A < B \\le 9\n- A and B are integers.\n\nSample Input 1\n\n7 8\n\nSample Output 1\n\nYes\r\n\nThe two squares with 7 and 8 written on them are adjacent horizontally, so print Yes.\n\nSample Input 2\n\n1 9\n\nSample Output 2\n\nNo\n\nSample Input 3\n\n3 4\n\nSample Output 3\n\nNo", "platform": "atcoder", "question_id": "abc309_a", "contest_id": "abc309", "contest_date": "2023-07-08T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"7 8\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1 9\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 4\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nWe have the following 3 \\times 3 board with integers from 1 through 9 written on it.\n\nYou are given two integers A and B between 1 and 9, where A < B.\nDetermine if the two squares with A and B written on them are adjacent horizontally.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA B\n\nOutput\n\nPrint Yes if the two squares with A and B written on them are adjacent horizontally, and No otherwise.\n\nConstraints\n\n\n- 1 \\le A < B \\le 9\n- A and B are integers.\n\nSample Input 1\n\n7 8\n\nSample Output 1\n\nYes\r\n\nThe two squares with 7 and 8 written on them are adjacent horizontally, so print Yes.\n\nSample Input 2\n\n1 9\n\nSample Output 2\n\nNo\n\nSample Input 3\n\n3 4\n\nSample Output 3\n\nNo\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "count-beautiful-splits-in-an-array", "question_content": "You are given an array nums.\nA split of an array nums is beautiful if:\n\nThe array nums is split into three subarrays: nums1, nums2, and nums3, such that nums can be formed by concatenating nums1, nums2, and nums3 in that order.\nThe subarray nums1 is a prefix of nums2 OR nums2 is a prefix of nums3.\n\nReturn the number of ways you can make this split.\n \nExample 1:\n\nInput: nums = [1,1,2,1]\nOutput: 2\nExplanation:\nThe beautiful splits are:\n\nA split with nums1 = [1], nums2 = [1,2], nums3 = [1].\nA split with nums1 = [1], nums2 = [1], nums3 = [2,1].\n\n\nExample 2:\n\nInput: nums = [1,2,3,4]\nOutput: 0\nExplanation:\nThere are 0 beautiful splits.\n\n \nConstraints:\n\n1 <= nums.length <= 5000\n0 <= nums[i] <= 50", "platform": "leetcode", "question_id": "3686", "contest_id": "weekly-contest-428", "contest_date": "2024-12-14T18:30:00", "starter_code": "class Solution:\n    def beautifulSplits(self, nums: List[int]) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[1, 1, 2, 1]\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"[1, 2, 3, 4]\", \"output\": \"0\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"beautifulSplits\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an array nums.\nA split of an array nums is beautiful if:\n\nThe array nums is split into three subarrays: nums1, nums2, and nums3, such that nums can be formed by concatenating nums1, nums2, and nums3 in that order.\nThe subarray nums1 is a prefix of nums2 OR nums2 is a prefix of nums3.\n\nReturn the number of ways you can make this split.\n \nExample 1:\n\nInput: nums = [1,1,2,1]\nOutput: 2\nExplanation:\nThe beautiful splits are:\n\nA split with nums1 = [1], nums2 = [1,2], nums3 = [1].\nA split with nums1 = [1], nums2 = [1], nums3 = [2,1].\n\n\nExample 2:\n\nInput: nums = [1,2,3,4]\nOutput: 0\nExplanation:\nThere are 0 beautiful splits.\n\n \nConstraints:\n\n1 <= nums.length <= 5000\n0 <= nums[i] <= 50\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def beautifulSplits(self, nums: List[int]) -> int:\n        \n```\n\n"}
{"question_title": "Scoreboard", "question_content": "Team Takahashi and Team Aoki played N matches.\r\nIn the i-th match (1\\leq i\\leq N), Team Takahashi scored X _ i points, and Team Aoki scored Y _ i points.\nThe team with the higher total score from the N matches wins.\nPrint the winner.\r\nIf the two teams have the same total score, it is a draw.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nX _ 1 Y _ 1\r\nX _ 2 Y _ 2\r\n\\vdots\r\nX _ N Y _ N\n\nOutput\n\nIf Team Takahashi wins, print Takahashi; if Team Aoki wins, print Aoki; if it is a draw, print Draw.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- 0\\leq X _ i\\leq 100\\ (1\\leq i\\leq N)\n- 0\\leq Y _ i\\leq 100\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n4\r\n10 2\r\n10 1\r\n10 2\r\n3 2\n\nSample Output 1\n\nTakahashi\r\n\nIn four matches, Team Takahashi scored 33 points, and Team Aoki scored 7 points.\r\nTeam Takahashi wins, so print Takahashi.\n\nSample Input 2\n\n6\r\n5 4\r\n4 5\r\n2 4\r\n1 6\r\n7 1\r\n3 2\n\nSample Output 2\n\nDraw\r\n\nBoth teams scored 22 points.\r\nIt is a draw, so print Draw.\n\nSample Input 3\n\n4\r\n0 0\r\n10 10\r\n50 50\r\n0 100\n\nSample Output 3\n\nAoki\r\n\nOne or both teams may score no points in a match.", "platform": "atcoder", "question_id": "abc337_a", "contest_id": "abc337", "contest_date": "2024-01-20T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"4\\n10 2\\n10 1\\n10 2\\n3 2\\n\", \"output\": \"Takahashi\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6\\n5 4\\n4 5\\n2 4\\n1 6\\n7 1\\n3 2\\n\", \"output\": \"Draw\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n0 0\\n10 10\\n50 50\\n0 100\\n\", \"output\": \"Aoki\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTeam Takahashi and Team Aoki played N matches.\r\nIn the i-th match (1\\leq i\\leq N), Team Takahashi scored X _ i points, and Team Aoki scored Y _ i points.\nThe team with the higher total score from the N matches wins.\nPrint the winner.\r\nIf the two teams have the same total score, it is a draw.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nX _ 1 Y _ 1\r\nX _ 2 Y _ 2\r\n\\vdots\r\nX _ N Y _ N\n\nOutput\n\nIf Team Takahashi wins, print Takahashi; if Team Aoki wins, print Aoki; if it is a draw, print Draw.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- 0\\leq X _ i\\leq 100\\ (1\\leq i\\leq N)\n- 0\\leq Y _ i\\leq 100\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n4\r\n10 2\r\n10 1\r\n10 2\r\n3 2\n\nSample Output 1\n\nTakahashi\r\n\nIn four matches, Team Takahashi scored 33 points, and Team Aoki scored 7 points.\r\nTeam Takahashi wins, so print Takahashi.\n\nSample Input 2\n\n6\r\n5 4\r\n4 5\r\n2 4\r\n1 6\r\n7 1\r\n3 2\n\nSample Output 2\n\nDraw\r\n\nBoth teams scored 22 points.\r\nIt is a draw, so print Draw.\n\nSample Input 3\n\n4\r\n0 0\r\n10 10\r\n50 50\r\n0 100\n\nSample Output 3\n\nAoki\r\n\nOne or both teams may score no points in a match.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "maximum-sum-with-at-most-k-elements", "question_content": "You are given a 2D integer matrix grid of size n x m, an integer array limits of length n, and an integer k. The task is to find the maximum sum of at most k elements from the matrix grid such that:\n\n\nThe number of elements taken from the i^th row of grid does not exceed limits[i].\n\n\nReturn the maximum sum.\n \nExample 1:\n\nInput: grid = [[1,2],[3,4]], limits = [1,2], k = 2\nOutput: 7\nExplanation:\n\nFrom the second row, we can take at most 2 elements. The elements taken are 4 and 3.\nThe maximum possible sum of at most 2 selected elements is 4 + 3 = 7.\n\n\nExample 2:\n\nInput: grid = [[5,3,7],[8,2,6]], limits = [2,2], k = 3\nOutput: 21\nExplanation:\n\nFrom the first row, we can take at most 2 elements. The element taken is 7.\nFrom the second row, we can take at most 2 elements. The elements taken are 8 and 6.\nThe maximum possible sum of at most 3 selected elements is 7 + 8 + 6 = 21.\n\n\n \nConstraints:\n\nn == grid.length == limits.length\nm == grid[i].length\n1 <= n, m <= 500\n0 <= grid[i][j] <= 10^5\n0 <= limits[i] <= m\n0 <= k <= min(n * m, sum(limits))", "platform": "leetcode", "question_id": "3764", "contest_id": "weekly-contest-438", "contest_date": "2025-02-22T18:30:00", "starter_code": "class Solution:\n    def maxSum(self, grid: List[List[int]], limits: List[int], k: int) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[[1, 2], [3, 4]]\\n[1, 2]\\n2\", \"output\": \"7\", \"testtype\": \"functional\"}, {\"input\": \"[[5, 3, 7], [8, 2, 6]]\\n[2, 2]\\n3\", \"output\": \"21\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"maxSum\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a 2D integer matrix grid of size n x m, an integer array limits of length n, and an integer k. The task is to find the maximum sum of at most k elements from the matrix grid such that:\n\n\nThe number of elements taken from the i^th row of grid does not exceed limits[i].\n\n\nReturn the maximum sum.\n \nExample 1:\n\nInput: grid = [[1,2],[3,4]], limits = [1,2], k = 2\nOutput: 7\nExplanation:\n\nFrom the second row, we can take at most 2 elements. The elements taken are 4 and 3.\nThe maximum possible sum of at most 2 selected elements is 4 + 3 = 7.\n\n\nExample 2:\n\nInput: grid = [[5,3,7],[8,2,6]], limits = [2,2], k = 3\nOutput: 21\nExplanation:\n\nFrom the first row, we can take at most 2 elements. The element taken is 7.\nFrom the second row, we can take at most 2 elements. The elements taken are 8 and 6.\nThe maximum possible sum of at most 3 selected elements is 7 + 8 + 6 = 21.\n\n\n \nConstraints:\n\nn == grid.length == limits.length\nm == grid[i].length\n1 <= n, m <= 500\n0 <= grid[i][j] <= 10^5\n0 <= limits[i] <= m\n0 <= k <= min(n * m, sum(limits))\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def maxSum(self, grid: List[List[int]], limits: List[int], k: int) -> int:\n        \n```\n\n"}
{"question_title": "Roulettes", "question_content": "There are N roulette wheels.\nThe i-th (1\\leq i\\leq N) wheel has P _ i integers S _ {i,1},S _ {i,2},\\ldots,S _ {i,P _ i} written on it, and you can play it once by paying C _ i yen.\nWhen you play the i-th wheel once, an integer j between 1 and P _ i, inclusive, is chosen uniformly at random, and you earn S _ {i,j} points.\nThe points you earn from the wheels are determined independently of past results.\nTakahashi wants to earn at least M points.\nTakahashi will act to minimize the amount of money he pays before he earns at least M points.\nAfter each play, he can choose which wheel to play next based on the previous results.\nFind the expected amount of money Takahashi will pay before he earns at least M points.\nMore formal definition\nHere is a more formal statement.\nFor a strategy that Takahashi can adopt in choosing which wheel to play, the expected amount of money E that he pays before he earns at least M points with that strategy is defined as follows.\n\n- For a natural number X, let f(X) be the expected amount of money Takahashi pays before he earns at least M points or plays the wheels X times in total according to that strategy. Let E=\\displaystyle\\lim _ {X\\to+\\infty}f(X).\n\nUnder the conditions of this problem, it can be proved that \\displaystyle\\lim _ {X\\to+\\infty}f(X) is finite no matter what strategy Takahashi adopts.\nFind the value of E when he adopts a strategy that minimizes E.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\nC _ 1 P _ 1 S _ {1,1} S _ {1,2} \\ldots S _ {1,P _ 1}\nC _ 2 P _ 2 S _ {2,1} S _ {2,2} \\ldots S _ {2,P _ 2}\n\\vdots\nC _ N P _ N S _ {N,1} S _ {N,2} \\ldots S _ {N,P _ N}\n\nOutput\n\nPrint the expected amount of money Takahashi will pay until he earns at least M points in a single line.\nYour output will be considered correct when the relative or absolute error from the true value is at most 10 ^ {-5}.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- 1\\leq M\\leq 100\n- 1\\leq C _ i\\leq 10 ^ 4\\ (1\\leq i\\leq N)\n- 1\\leq P _ i\\leq 100\\ (1\\leq i\\leq N)\n- 0\\leq S _ {i,j}\\leq M\\ (1\\leq i\\leq N,1\\leq j\\leq P _ i)\n- \\displaystyle\\sum _ {j=1}^{P _ i}S _ {i,j}\\gt0\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3 14\n100 2 5 9\n50 4 1 2 4 8\n70 5 2 4 2 8 8\n\nSample Output 1\n\n215.913355350494384765625\n\nFor instance, Takahashi can play the wheels as follows.\n\n- Pay 50 yen to play roulette 2 and earn S _ {2,4}=8 points.\n- Pay 50 yen to play roulette 2 and earn S _ {2,1}=1 point.\n- Pay 100 yen to play roulette 1 and earn S _ {1,1}=5 points. He has earned a total of 8+1+5\\geq14 points, so he quits playing.\n\nIn this case, he pays 200 yen before earning 14 points.\nYour output will be considered correct when the relative or absolute error from the true value is at most 10 ^ {-5}, so outputs such as 215.9112 and 215.9155 would also be considered correct.\n\nSample Input 2\n\n2 100\n1 2 1 2\n10 6 0 0 0 0 0 100\n\nSample Output 2\n\n60\n\nIt is optimal to keep spinning roulette 2 until you get 100 points.\n\nSample Input 3\n\n20 90\n3252 9 0 4 2 7 3 2 3 2 4\n2147 1 1\n4033 8 0 4 1 7 5 2 5 0\n3795 6 6 6 2 3 2 2\n3941 7 2 4 4 7 2 0 5\n2815 6 2 1 0 5 2 2\n3020 2 3 6\n3858 9 4 2 7 3 0 4 4 6 5\n4533 10 3 6 4 0 6 4 4 2 7 7\n4198 8 6 7 0 6 3 6 5 6\n3739 8 2 7 1 5 1 4 4 7\n2465 4 1 4 0 1\n4418 9 7 6 2 4 6 1 5 0 7\n5450 12 0 4 4 7 7 4 4 5 4 5 3 7\n4196 9 1 6 5 5 7 2 3 6 3\n4776 9 2 2 7 3 6 6 1 6 6\n2286 3 3 5 6\n3152 3 4 1 5\n3509 7 0 6 7 0 1 0 3\n2913 6 0 1 5 0 5 6\n\nSample Output 3\n\n45037.072314895291126319493887599716", "platform": "atcoder", "question_id": "abc314_e", "contest_id": "abc314", "contest_date": "2023-08-12T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"output\": \"215.913355350494384765625\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2 100\\n1 2 1 2\\n10 6 0 0 0 0 0 100\\n\", \"output\": \"60\\n\", \"testtype\": \"stdin\"}, {\"input\": \"20 90\\n3252 9 0 4 2 7 3 2 3 2 4\\n2147 1 1\\n4033 8 0 4 1 7 5 2 5 0\\n3795 6 6 6 2 3 2 2\\n3941 7 2 4 4 7 2 0 5\\n2815 6 2 1 0 5 2 2\\n3020 2 3 6\\n3858 9 4 2 7 3 0 4 4 6 5\\n4533 10 3 6 4 0 6 4 4 2 7 7\\n4198 8 6 7 0 6 3 6 5 6\\n3739 8 2 7 1 5 1 4 4 7\\n2465 4 1 4 0 1\\n4418 9 7 6 2 4 6 1 5 0 7\\n5450 12 0 4 4 7 7 4 4 5 4 5 3 7\\n4196 9 1 6 5 5 7 2 3 6 3\\n4776 9 2 2 7 3 6 6 1 6 6\\n2286 3 3 5 6\\n3152 3 4 1 5\\n3509 7 0 6 7 0 1 0 3\\n2913 6 0 1 5 0 5 6\\n\", \"output\": \"45037.072314895291126319493887599716\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are N roulette wheels.\nThe i-th (1\\leq i\\leq N) wheel has P _ i integers S _ {i,1},S _ {i,2},\\ldots,S _ {i,P _ i} written on it, and you can play it once by paying C _ i yen.\nWhen you play the i-th wheel once, an integer j between 1 and P _ i, inclusive, is chosen uniformly at random, and you earn S _ {i,j} points.\nThe points you earn from the wheels are determined independently of past results.\nTakahashi wants to earn at least M points.\nTakahashi will act to minimize the amount of money he pays before he earns at least M points.\nAfter each play, he can choose which wheel to play next based on the previous results.\nFind the expected amount of money Takahashi will pay before he earns at least M points.\nMore formal definition\nHere is a more formal statement.\nFor a strategy that Takahashi can adopt in choosing which wheel to play, the expected amount of money E that he pays before he earns at least M points with that strategy is defined as follows.\n\n- For a natural number X, let f(X) be the expected amount of money Takahashi pays before he earns at least M points or plays the wheels X times in total according to that strategy. Let E=\\displaystyle\\lim _ {X\\to+\\infty}f(X).\n\nUnder the conditions of this problem, it can be proved that \\displaystyle\\lim _ {X\\to+\\infty}f(X) is finite no matter what strategy Takahashi adopts.\nFind the value of E when he adopts a strategy that minimizes E.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\nC _ 1 P _ 1 S _ {1,1} S _ {1,2} \\ldots S _ {1,P _ 1}\nC _ 2 P _ 2 S _ {2,1} S _ {2,2} \\ldots S _ {2,P _ 2}\n\\vdots\nC _ N P _ N S _ {N,1} S _ {N,2} \\ldots S _ {N,P _ N}\n\nOutput\n\nPrint the expected amount of money Takahashi will pay until he earns at least M points in a single line.\nYour output will be considered correct when the relative or absolute error from the true value is at most 10 ^ {-5}.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- 1\\leq M\\leq 100\n- 1\\leq C _ i\\leq 10 ^ 4\\ (1\\leq i\\leq N)\n- 1\\leq P _ i\\leq 100\\ (1\\leq i\\leq N)\n- 0\\leq S _ {i,j}\\leq M\\ (1\\leq i\\leq N,1\\leq j\\leq P _ i)\n- \\displaystyle\\sum _ {j=1}^{P _ i}S _ {i,j}\\gt0\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3 14\n100 2 5 9\n50 4 1 2 4 8\n70 5 2 4 2 8 8\n\nSample Output 1\n\n215.913355350494384765625\n\nFor instance, Takahashi can play the wheels as follows.\n\n- Pay 50 yen to play roulette 2 and earn S _ {2,4}=8 points.\n- Pay 50 yen to play roulette 2 and earn S _ {2,1}=1 point.\n- Pay 100 yen to play roulette 1 and earn S _ {1,1}=5 points. He has earned a total of 8+1+5\\geq14 points, so he quits playing.\n\nIn this case, he pays 200 yen before earning 14 points.\nYour output will be considered correct when the relative or absolute error from the true value is at most 10 ^ {-5}, so outputs such as 215.9112 and 215.9155 would also be considered correct.\n\nSample Input 2\n\n2 100\n1 2 1 2\n10 6 0 0 0 0 0 100\n\nSample Output 2\n\n60\n\nIt is optimal to keep spinning roulette 2 until you get 100 points.\n\nSample Input 3\n\n20 90\n3252 9 0 4 2 7 3 2 3 2 4\n2147 1 1\n4033 8 0 4 1 7 5 2 5 0\n3795 6 6 6 2 3 2 2\n3941 7 2 4 4 7 2 0 5\n2815 6 2 1 0 5 2 2\n3020 2 3 6\n3858 9 4 2 7 3 0 4 4 6 5\n4533 10 3 6 4 0 6 4 4 2 7 7\n4198 8 6 7 0 6 3 6 5 6\n3739 8 2 7 1 5 1 4 4 7\n2465 4 1 4 0 1\n4418 9 7 6 2 4 6 1 5 0 7\n5450 12 0 4 4 7 7 4 4 5 4 5 3 7\n4196 9 1 6 5 5 7 2 3 6 3\n4776 9 2 2 7 3 6 6 1 6 6\n2286 3 3 5 6\n3152 3 4 1 5\n3509 7 0 6 7 0 1 0 3\n2913 6 0 1 5 0 5 6\n\nSample Output 3\n\n45037.072314895291126319493887599716\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Move Segment", "question_content": "You are given a string S of length N consisting of 0 and 1.\r\nMove the K-th 1-block from the beginning in S to immediately after the (K-1)-th 1-block, and print the resulting string.\nIt is guaranteed that S contains at least K 1-blocks.\nHere is a more precise description.\n\n- Let S_{l\\ldots r} denote the substring of S from the l-th character through the r-th character.\n- We define a substring S_{l\\ldots r} of S to be a 1-block if it satisfies all of the following conditions:\n- S_l = S_{l+1} = \\cdots = S_r =  1\n- l = 1 or S_{l-1} =  0\n- r = N or S_{r+1} =  0\n\n\n- \r\nSuppose that all 1-blocks in S are S_{l_1\\ldots r_1}, \\ldots, S_{l_m\\ldots r_m}, where l_1 < l_2 < \\cdots < l_m.\nThen, we define the length N string T, obtained by moving the K-th 1-block to immediately after the (K-1)-th 1-block, as follows:\n\n- T_i = S_i for 1 \\leq i \\leq r_{K-1}\n- T_i =  1 for r_{K-1} + 1 \\leq i \\leq r_{K-1} + (r_K - l_K) + 1\n- T_i =  0 for r_{K-1} + (r_K - l_K) + 2 \\leq i \\leq r_K\n- T_i = S_i for r_K + 1 \\leq i \\leq N\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\r\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 5 \\times 10^5\n- S is a string of length N consisting of 0 and 1.\n- 2 \\leq K\n- S contains at least K 1-blocks.\n\nSample Input 1\n\n15 3\r\n010011100011001\n\nSample Output 1\n\n010011111000001\r\n\nS has four 1-blocks: from the 2nd to the 2nd character, from the 5th to the 7th character, from the 11th to the 12th character, and from the 15th to the 15th character.\n\nSample Input 2\n\n10 2\r\n1011111111\n\nSample Output 2\n\n1111111110", "platform": "atcoder", "question_id": "abc380_c", "contest_id": "abc380", "contest_date": "2024-11-16T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"15 3\\n010011100011001\", \"output\": \"010011111000001\", \"testtype\": \"stdin\"}, {\"input\": \"10 2\\n1011111111\", \"output\": \"1111111110\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string S of length N consisting of 0 and 1.\r\nMove the K-th 1-block from the beginning in S to immediately after the (K-1)-th 1-block, and print the resulting string.\nIt is guaranteed that S contains at least K 1-blocks.\nHere is a more precise description.\n\n- Let S_{l\\ldots r} denote the substring of S from the l-th character through the r-th character.\n- We define a substring S_{l\\ldots r} of S to be a 1-block if it satisfies all of the following conditions:\n- S_l = S_{l+1} = \\cdots = S_r =  1\n- l = 1 or S_{l-1} =  0\n- r = N or S_{r+1} =  0\n\n\n- \r\nSuppose that all 1-blocks in S are S_{l_1\\ldots r_1}, \\ldots, S_{l_m\\ldots r_m}, where l_1 < l_2 < \\cdots < l_m.\nThen, we define the length N string T, obtained by moving the K-th 1-block to immediately after the (K-1)-th 1-block, as follows:\n\n- T_i = S_i for 1 \\leq i \\leq r_{K-1}\n- T_i =  1 for r_{K-1} + 1 \\leq i \\leq r_{K-1} + (r_K - l_K) + 1\n- T_i =  0 for r_{K-1} + (r_K - l_K) + 2 \\leq i \\leq r_K\n- T_i = S_i for r_K + 1 \\leq i \\leq N\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\r\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 5 \\times 10^5\n- S is a string of length N consisting of 0 and 1.\n- 2 \\leq K\n- S contains at least K 1-blocks.\n\nSample Input 1\n\n15 3\r\n010011100011001\n\nSample Output 1\n\n010011111000001\r\n\nS has four 1-blocks: from the 2nd to the 2nd character, from the 5th to the 7th character, from the 11th to the 12th character, and from the 15th to the 15th character.\n\nSample Input 2\n\n10 2\r\n1011111111\n\nSample Output 2\n\n1111111110\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "apply-operations-to-make-all-array-elements-equal-to-zero", "question_content": "You are given a 0-indexed integer array nums and a positive integer k.\nYou can apply the following operation on the array any number of times:\n\nChoose any subarray of size k from the array and decrease all its elements by 1.\n\nReturn true if you can make all the array elements equal to 0, or false otherwise.\nA subarray is a contiguous non-empty part of an array.\n \nExample 1:\n\nInput: nums = [2,2,3,1,1,0], k = 3\nOutput: true\nExplanation: We can do the following operations:\n- Choose the subarray [2,2,3]. The resulting array will be nums = [1,1,2,1,1,0].\n- Choose the subarray [2,1,1]. The resulting array will be nums = [1,1,1,0,0,0].\n- Choose the subarray [1,1,1]. The resulting array will be nums = [0,0,0,0,0,0].\n\nExample 2:\n\nInput: nums = [1,3,1,1], k = 2\nOutput: false\nExplanation: It is not possible to make all the array elements equal to 0.\n\n \nConstraints:\n\n1 <= k <= nums.length <= 10^5\n0 <= nums[i] <= 10^6", "platform": "leetcode", "question_id": "2878", "contest_id": "weekly-contest-353", "contest_date": "2023-07-09T00:00:00", "starter_code": "class Solution:\n    def checkArray(self, nums: List[int], k: int) -> bool:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[2, 2, 3, 1, 1, 0]\\n3\", \"output\": \"true\", \"testtype\": \"functional\"}, {\"input\": \"[1, 3, 1, 1]\\n2\", \"output\": \"false\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"checkArray\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a 0-indexed integer array nums and a positive integer k.\nYou can apply the following operation on the array any number of times:\n\nChoose any subarray of size k from the array and decrease all its elements by 1.\n\nReturn true if you can make all the array elements equal to 0, or false otherwise.\nA subarray is a contiguous non-empty part of an array.\n \nExample 1:\n\nInput: nums = [2,2,3,1,1,0], k = 3\nOutput: true\nExplanation: We can do the following operations:\n- Choose the subarray [2,2,3]. The resulting array will be nums = [1,1,2,1,1,0].\n- Choose the subarray [2,1,1]. The resulting array will be nums = [1,1,1,0,0,0].\n- Choose the subarray [1,1,1]. The resulting array will be nums = [0,0,0,0,0,0].\n\nExample 2:\n\nInput: nums = [1,3,1,1], k = 2\nOutput: false\nExplanation: It is not possible to make all the array elements equal to 0.\n\n \nConstraints:\n\n1 <= k <= nums.length <= 10^5\n0 <= nums[i] <= 10^6\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def checkArray(self, nums: List[int], k: int) -> bool:\n        \n```\n\n"}
{"question_title": "Square Price", "question_content": "There are N types of products, each having 10^{100} units in stock.\nYou can buy any non-negative number of units of each product. To buy k units of the i-th product, it costs k^2 P_i yen.\nIf your total purchase cost is at most M yen, what is the maximum number of units you can buy in total?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nP_1 \\ldots P_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^{5}\n- 1 \\leq M \\leq 10^{18}\n- 1 \\leq P_i \\leq 2 \\times 10^{9}\n- All input values are integers.\n\nSample Input 1\n\n3 9\r\n4 1 9\n\nSample Output 1\n\n3\r\n\nIf you buy one unit of the 1st product and two units of the 2nd product, the total purchase cost is 1^2 \\times 4 + 2^2 \\times 1 = 8. It is impossible to buy four or more units in total with a total cost of at most 9 yen, so the answer is 3.\n\nSample Input 2\n\n10 1000\r\n2 15 6 5 12 1 7 9 17 2\n\nSample Output 2\n\n53", "platform": "atcoder", "question_id": "abc389_e", "contest_id": "abc389", "contest_date": "2025-01-18T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3 9\\n4 1 9\", \"output\": \"3\", \"testtype\": \"stdin\"}, {\"input\": \"10 1000\\n2 15 6 5 12 1 7 9 17 2\", \"output\": \"53\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are N types of products, each having 10^{100} units in stock.\nYou can buy any non-negative number of units of each product. To buy k units of the i-th product, it costs k^2 P_i yen.\nIf your total purchase cost is at most M yen, what is the maximum number of units you can buy in total?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nP_1 \\ldots P_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^{5}\n- 1 \\leq M \\leq 10^{18}\n- 1 \\leq P_i \\leq 2 \\times 10^{9}\n- All input values are integers.\n\nSample Input 1\n\n3 9\r\n4 1 9\n\nSample Output 1\n\n3\r\n\nIf you buy one unit of the 1st product and two units of the 2nd product, the total purchase cost is 1^2 \\times 4 + 2^2 \\times 1 = 8. It is impossible to buy four or more units in total with a total cost of at most 9 yen, so the answer is 3.\n\nSample Input 2\n\n10 1000\r\n2 15 6 5 12 1 7 9 17 2\n\nSample Output 2\n\n53\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Minimum Cost Sort", "question_content": "You are given a permutation P = (P_1, P_2, \\ldots, P_N) of (1, 2, \\ldots, N). Takahashi can repeatedly perform the following operation on P (possibly zero times):\n\n- Choose an integer i satisfying 1 \\leq i \\leq N-1. Pay a cost of i, and swap P_i and P_{i+1}.\n\nFind the minimum total cost required to sort P in ascending order.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nP_1 P_2 \\ldots P_N\n\nOutput\n\nPrint the minimum total cost required to sort P in ascending order.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- (P_1, P_2, \\ldots, P_N) is a permutation of (1, 2, \\ldots, N).\n- All input values are integers.\n\nSample Input 1\n\n3\n3 2 1\n\nSample Output 1\n\n4\n\nTakahashi can sort P in ascending order as follows:\n\n- Pay a cost of 1 and swap P_1 = 3 and P_2 = 2. Now, P = (2, 3, 1).\n- Pay a cost of 2 and swap P_2 = 3 and P_3 = 1. Now, P = (2, 1, 3).\n- Pay a cost of 1 and swap P_1 = 2 and P_2 = 1. Now, P = (1, 2, 3).\n\nThe total cost for these operations is 4, which is the minimum possible.\n\nSample Input 2\n\n5\n2 4 1 3 5\n\nSample Output 2\n\n6\n\nSample Input 3\n\n2\n1 2\n\nSample Output 3\n\n0", "platform": "atcoder", "question_id": "arc194_b", "contest_id": "arc194", "contest_date": "2025-03-09T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3\\n3 2 1\", \"output\": \"4\", \"testtype\": \"stdin\"}, {\"input\": \"5\\n2 4 1 3 5\", \"output\": \"6\", \"testtype\": \"stdin\"}, {\"input\": \"2\\n1 2\", \"output\": \"0\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a permutation P = (P_1, P_2, \\ldots, P_N) of (1, 2, \\ldots, N). Takahashi can repeatedly perform the following operation on P (possibly zero times):\n\n- Choose an integer i satisfying 1 \\leq i \\leq N-1. Pay a cost of i, and swap P_i and P_{i+1}.\n\nFind the minimum total cost required to sort P in ascending order.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nP_1 P_2 \\ldots P_N\n\nOutput\n\nPrint the minimum total cost required to sort P in ascending order.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- (P_1, P_2, \\ldots, P_N) is a permutation of (1, 2, \\ldots, N).\n- All input values are integers.\n\nSample Input 1\n\n3\n3 2 1\n\nSample Output 1\n\n4\n\nTakahashi can sort P in ascending order as follows:\n\n- Pay a cost of 1 and swap P_1 = 3 and P_2 = 2. Now, P = (2, 3, 1).\n- Pay a cost of 2 and swap P_2 = 3 and P_3 = 1. Now, P = (2, 1, 3).\n- Pay a cost of 1 and swap P_1 = 2 and P_2 = 1. Now, P = (1, 2, 3).\n\nThe total cost for these operations is 4, which is the minimum possible.\n\nSample Input 2\n\n5\n2 4 1 3 5\n\nSample Output 2\n\n6\n\nSample Input 3\n\n2\n1 2\n\nSample Output 3\n\n0\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Same", "question_content": "You are given N integers A _ 1,A _ 2,\\ldots,A _ N.\nIf their values are all equal, print Yes; otherwise, print No.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA _ 1 A _ 2 \\ldots A _ N\n\nOutput\n\nPrint a single line containing Yes if the values of the given A _ 1,A _ 2,\\ldots,A _ N are all equal, and No otherwise.\n\nConstraints\n\n\n- 2\\leq N\\leq100\n- 1\\leq A _ i\\leq100\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3\r\n3 2 4\n\nSample Output 1\n\nNo\r\n\nWe have A _ 1\\neq A _ 2, so you should print No.\n\nSample Input 2\n\n4\r\n3 3 3 3\n\nSample Output 2\n\nYes\r\n\nWe have A _ 1=A _ 2=A _ 3=A _ 4, so you should print Yes.\n\nSample Input 3\n\n10\r\n73 8 55 26 97 48 37 47 35 55\n\nSample Output 3\n\nNo", "platform": "atcoder", "question_id": "abc324_a", "contest_id": "abc324", "contest_date": "2023-10-14T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"3\\n3 2 4\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n3 3 3 3\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10\\n73 8 55 26 97 48 37 47 35 55\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given N integers A _ 1,A _ 2,\\ldots,A _ N.\nIf their values are all equal, print Yes; otherwise, print No.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA _ 1 A _ 2 \\ldots A _ N\n\nOutput\n\nPrint a single line containing Yes if the values of the given A _ 1,A _ 2,\\ldots,A _ N are all equal, and No otherwise.\n\nConstraints\n\n\n- 2\\leq N\\leq100\n- 1\\leq A _ i\\leq100\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3\r\n3 2 4\n\nSample Output 1\n\nNo\r\n\nWe have A _ 1\\neq A _ 2, so you should print No.\n\nSample Input 2\n\n4\r\n3 3 3 3\n\nSample Output 2\n\nYes\r\n\nWe have A _ 1=A _ 2=A _ 3=A _ 4, so you should print Yes.\n\nSample Input 3\n\n10\r\n73 8 55 26 97 48 37 47 35 55\n\nSample Output 3\n\nNo\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "3.14", "question_content": "The number pi to the 100-th decimal place is\n3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679.\nYou are given an integer N between 1 and 100, inclusive.\nPrint the value of pi to the N-th decimal place.\nMore precisely, truncate the value of pi to N decimal places and print the result without removing the trailing 0s.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint the value of pi to the N-th decimal place in a single line.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- N is an integer.\n\nSample Input 1\n\n2\n\nSample Output 1\n\n3.14\n\nTruncating the value of pi to 2 decimal places results in 3.14. Thus, you should print 3.14.\n\nSample Input 2\n\n32\n\nSample Output 2\n\n3.14159265358979323846264338327950\n\nDo not remove the trailing 0s.\n\nSample Input 3\n\n100\n\nSample Output 3\n\n3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679", "platform": "atcoder", "question_id": "abc314_a", "contest_id": "abc314", "contest_date": "2023-08-12T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"2\\n\", \"output\": \"3.14\\n\", \"testtype\": \"stdin\"}, {\"input\": \"32\\n\", \"output\": \"3.14159265358979323846264338327950\\n\", \"testtype\": \"stdin\"}, {\"input\": \"100\\n\", \"output\": \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThe number pi to the 100-th decimal place is\n3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679.\nYou are given an integer N between 1 and 100, inclusive.\nPrint the value of pi to the N-th decimal place.\nMore precisely, truncate the value of pi to N decimal places and print the result without removing the trailing 0s.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint the value of pi to the N-th decimal place in a single line.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- N is an integer.\n\nSample Input 1\n\n2\n\nSample Output 1\n\n3.14\n\nTruncating the value of pi to 2 decimal places results in 3.14. Thus, you should print 3.14.\n\nSample Input 2\n\n32\n\nSample Output 2\n\n3.14159265358979323846264338327950\n\nDo not remove the trailing 0s.\n\nSample Input 3\n\n100\n\nSample Output 3\n\n3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "find-the-first-player-to-win-k-games-in-a-row", "question_content": "A competition consists of n players numbered from 0 to n - 1.\nYou are given an integer array skills of size n and a positive integer k, where skills[i] is the skill level of player i. All integers in skills are unique.\nAll players are standing in a queue in order from player 0 to player n - 1.\nThe competition process is as follows:\n\nThe first two players in the queue play a game, and the player with the higher skill level wins.\nAfter the game, the winner stays at the beginning of the queue, and the loser goes to the end of it.\n\nThe winner of the competition is the first player who wins k games in a row.\nReturn the initial index of the winning player.\n \nExample 1:\n\nInput: skills = [4,2,6,3,9], k = 2\nOutput: 2\nExplanation:\nInitially, the queue of players is [0,1,2,3,4]. The following process happens:\n\nPlayers 0 and 1 play a game, since the skill of player 0 is higher than that of player 1, player 0 wins. The resulting queue is [0,2,3,4,1].\nPlayers 0 and 2 play a game, since the skill of player 2 is higher than that of player 0, player 2 wins. The resulting queue is [2,3,4,1,0].\nPlayers 2 and 3 play a game, since the skill of player 2 is higher than that of player 3, player 2 wins. The resulting queue is [2,4,1,0,3].\n\nPlayer 2 won k = 2 games in a row, so the winner is player 2.\n\nExample 2:\n\nInput: skills = [2,5,4], k = 3\nOutput: 1\nExplanation:\nInitially, the queue of players is [0,1,2]. The following process happens:\n\nPlayers 0 and 1 play a game, since the skill of player 1 is higher than that of player 0, player 1 wins. The resulting queue is [1,2,0].\nPlayers 1 and 2 play a game, since the skill of player 1 is higher than that of player 2, player 1 wins. The resulting queue is [1,0,2].\nPlayers 1 and 0 play a game, since the skill of player 1 is higher than that of player 0, player 1 wins. The resulting queue is [1,2,0].\n\nPlayer 1 won k = 3 games in a row, so the winner is player 1.\n\n \nConstraints:\n\nn == skills.length\n2 <= n <= 10^5\n1 <= k <= 10^9\n1 <= skills[i] <= 10^6\nAll integers in skills are unique.", "platform": "leetcode", "question_id": "3413", "contest_id": "biweekly-contest-132", "contest_date": "2024-06-08T00:00:00", "starter_code": "class Solution:\n    def findWinningPlayer(self, skills: List[int], k: int) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[4, 2, 6, 3, 9]\\n2\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"[2, 5, 4]\\n3\", \"output\": \"1\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"findWinningPlayer\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nA competition consists of n players numbered from 0 to n - 1.\nYou are given an integer array skills of size n and a positive integer k, where skills[i] is the skill level of player i. All integers in skills are unique.\nAll players are standing in a queue in order from player 0 to player n - 1.\nThe competition process is as follows:\n\nThe first two players in the queue play a game, and the player with the higher skill level wins.\nAfter the game, the winner stays at the beginning of the queue, and the loser goes to the end of it.\n\nThe winner of the competition is the first player who wins k games in a row.\nReturn the initial index of the winning player.\n \nExample 1:\n\nInput: skills = [4,2,6,3,9], k = 2\nOutput: 2\nExplanation:\nInitially, the queue of players is [0,1,2,3,4]. The following process happens:\n\nPlayers 0 and 1 play a game, since the skill of player 0 is higher than that of player 1, player 0 wins. The resulting queue is [0,2,3,4,1].\nPlayers 0 and 2 play a game, since the skill of player 2 is higher than that of player 0, player 2 wins. The resulting queue is [2,3,4,1,0].\nPlayers 2 and 3 play a game, since the skill of player 2 is higher than that of player 3, player 2 wins. The resulting queue is [2,4,1,0,3].\n\nPlayer 2 won k = 2 games in a row, so the winner is player 2.\n\nExample 2:\n\nInput: skills = [2,5,4], k = 3\nOutput: 1\nExplanation:\nInitially, the queue of players is [0,1,2]. The following process happens:\n\nPlayers 0 and 1 play a game, since the skill of player 1 is higher than that of player 0, player 1 wins. The resulting queue is [1,2,0].\nPlayers 1 and 2 play a game, since the skill of player 1 is higher than that of player 2, player 1 wins. The resulting queue is [1,0,2].\nPlayers 1 and 0 play a game, since the skill of player 1 is higher than that of player 0, player 1 wins. The resulting queue is [1,2,0].\n\nPlayer 1 won k = 3 games in a row, so the winner is player 1.\n\n \nConstraints:\n\nn == skills.length\n2 <= n <= 10^5\n1 <= k <= 10^9\n1 <= skills[i] <= 10^6\nAll integers in skills are unique.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def findWinningPlayer(self, skills: List[int], k: int) -> int:\n        \n```\n\n"}
{"question_title": "B. Good Kid", "question_content": "Slavic is preparing a present for a friend's birthday. He has an array $a$ of $n$ digits and the present will be the product of all these digits. Because Slavic is a good kid who wants to make the biggest product possible, he wants to add $1$ to exactly one of his digits. \n\nWhat is the maximum product Slavic can make?\n\nInput\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) — the number of test cases.\n\nThe first line of each test case contains a single integer $n$ ($1 \\leq n \\leq 9$) — the number of digits.\n\nThe second line of each test case contains $n$ space-separated integers $a_i$ ($0 \\leq a_i \\leq 9$) — the digits in the array.\n\nOutput\n\nFor each test case, output a single integer — the maximum product Slavic can make, by adding $1$ to exactly one of his digits.Sample Input 1:\n4\n\n4\n\n2 2 1 2\n\n3\n\n0 1 2\n\n5\n\n4 3 2 3 4\n\n9\n\n9 9 9 9 9 9 9 9 9\n\n\n\nSample Output 1:\n\n16\n2\n432\n430467210\n", "platform": "codeforces", "question_id": "1873_B", "contest_id": "1873", "contest_date": "2023-08-21T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"output\": \"16\\n2\\n432\\n430467210\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nSlavic is preparing a present for a friend's birthday. He has an array $a$ of $n$ digits and the present will be the product of all these digits. Because Slavic is a good kid who wants to make the biggest product possible, he wants to add $1$ to exactly one of his digits. \n\nWhat is the maximum product Slavic can make?\n\nInput\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) — the number of test cases.\n\nThe first line of each test case contains a single integer $n$ ($1 \\leq n \\leq 9$) — the number of digits.\n\nThe second line of each test case contains $n$ space-separated integers $a_i$ ($0 \\leq a_i \\leq 9$) — the digits in the array.\n\nOutput\n\nFor each test case, output a single integer — the maximum product Slavic can make, by adding $1$ to exactly one of his digits.Sample Input 1:\n4\n\n4\n\n2 2 1 2\n\n3\n\n0 1 2\n\n5\n\n4 3 2 3 4\n\n9\n\n9 9 9 9 9 9 9 9 9\n\n\n\nSample Output 1:\n\n16\n2\n432\n430467210\n\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Cross Explosion", "question_content": "There is a grid with H rows and W columns. Let (i, j) denote the cell at the i-th row from the top and j-th column from the left.\nInitially, there is one wall in each cell.\nAfter processing Q queries explained below in the order they are given, find the number of remaining walls.\nIn the q-th query, you are given two integers R_q and C_q.\nYou place a bomb at (R_q, C_q) to destroy walls. As a result, the following process occurs.\n\n- If there is a wall at (R_q, C_q), destroy that wall and end the process.\n- If there is no wall at (R_q, C_q), destroy the first walls that appear when looking up, down, left, and right from (R_q, C_q). More precisely, the following four processes occur simultaneously:\n- If there exists an i \\lt R_q such that a wall exists at (i, C_q) and no wall exists at (k, C_q) for all i \\lt k \\lt R_q, destroy the wall at (i, C_q).\n- If there exists an i \\gt R_q such that a wall exists at (i, C_q) and no wall exists at (k, C_q) for all R_q \\lt k \\lt i, destroy the wall at (i, C_q).\n- If there exists a j \\lt C_q such that a wall exists at (R_q, j) and no wall exists at (R_q, k) for all j \\lt k \\lt C_q, destroy the wall at (R_q, j).\n- If there exists a j \\gt C_q such that a wall exists at (R_q, j) and no wall exists at (R_q, k) for all C_q \\lt k \\lt j, destroy the wall at (R_q, j).\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W Q\nR_1 C_1\nR_2 C_2\n\\vdots\nR_Q C_Q\n\nOutput\n\nPrint the number of remaining walls after processing all queries.\n\nConstraints\n\n\n- 1 \\leq H, W\n- H \\times W \\leq 4 \\times 10^5\n- 1 \\leq Q \\leq 2 \\times 10^5\n- 1 \\leq R_q \\leq H\n- 1 \\leq C_q \\leq W\n- All input values are integers.\n\nSample Input 1\n\n2 4 3\n1 2\n1 2\n1 3\n\nSample Output 1\n\n2\n\nThe process of handling the queries can be explained as follows:\n\n- In the 1st query, (R_1, C_1) = (1, 2). There is a wall at (1, 2), so the wall at (1, 2) is destroyed.\n- In the 2nd query, (R_2, C_2) = (1, 2). There is no wall at (1, 2), so the walls at (2,2),(1,1),(1,3), which are the first walls that appear when looking up, down, left, and right from (1, 2), are destroyed.\n- In the 3rd query, (R_3, C_3) = (1, 3). There is no wall at (1, 3), so the walls at (2,3),(1,4), which are the first walls that appear when looking up, down, left, and right from (1, 3), are destroyed.\n\nAfter processing all queries, there are two remaining walls, at (2, 1) and (2, 4).\n\nSample Input 2\n\n5 5 5\n3 3\n3 3\n3 2\n2 2\n1 2\n\nSample Output 2\n\n10\n\nSample Input 3\n\n4 3 10\n2 2\n4 1\n1 1\n4 2\n2 1\n3 1\n1 3\n1 2\n4 3\n4 2\n\nSample Output 3\n\n2", "platform": "atcoder", "question_id": "abc370_d", "contest_id": "abc370", "contest_date": "2024-09-07T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"2 4 3\\n1 2\\n1 2\\n1 3\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 5 5\\n3 3\\n3 3\\n3 2\\n2 2\\n1 2\\n\", \"output\": \"10\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4 3 10\\n2 2\\n4 1\\n1 1\\n4 2\\n2 1\\n3 1\\n1 3\\n1 2\\n4 3\\n4 2\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a grid with H rows and W columns. Let (i, j) denote the cell at the i-th row from the top and j-th column from the left.\nInitially, there is one wall in each cell.\nAfter processing Q queries explained below in the order they are given, find the number of remaining walls.\nIn the q-th query, you are given two integers R_q and C_q.\nYou place a bomb at (R_q, C_q) to destroy walls. As a result, the following process occurs.\n\n- If there is a wall at (R_q, C_q), destroy that wall and end the process.\n- If there is no wall at (R_q, C_q), destroy the first walls that appear when looking up, down, left, and right from (R_q, C_q). More precisely, the following four processes occur simultaneously:\n- If there exists an i \\lt R_q such that a wall exists at (i, C_q) and no wall exists at (k, C_q) for all i \\lt k \\lt R_q, destroy the wall at (i, C_q).\n- If there exists an i \\gt R_q such that a wall exists at (i, C_q) and no wall exists at (k, C_q) for all R_q \\lt k \\lt i, destroy the wall at (i, C_q).\n- If there exists a j \\lt C_q such that a wall exists at (R_q, j) and no wall exists at (R_q, k) for all j \\lt k \\lt C_q, destroy the wall at (R_q, j).\n- If there exists a j \\gt C_q such that a wall exists at (R_q, j) and no wall exists at (R_q, k) for all C_q \\lt k \\lt j, destroy the wall at (R_q, j).\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W Q\nR_1 C_1\nR_2 C_2\n\\vdots\nR_Q C_Q\n\nOutput\n\nPrint the number of remaining walls after processing all queries.\n\nConstraints\n\n\n- 1 \\leq H, W\n- H \\times W \\leq 4 \\times 10^5\n- 1 \\leq Q \\leq 2 \\times 10^5\n- 1 \\leq R_q \\leq H\n- 1 \\leq C_q \\leq W\n- All input values are integers.\n\nSample Input 1\n\n2 4 3\n1 2\n1 2\n1 3\n\nSample Output 1\n\n2\n\nThe process of handling the queries can be explained as follows:\n\n- In the 1st query, (R_1, C_1) = (1, 2). There is a wall at (1, 2), so the wall at (1, 2) is destroyed.\n- In the 2nd query, (R_2, C_2) = (1, 2). There is no wall at (1, 2), so the walls at (2,2),(1,1),(1,3), which are the first walls that appear when looking up, down, left, and right from (1, 2), are destroyed.\n- In the 3rd query, (R_3, C_3) = (1, 3). There is no wall at (1, 3), so the walls at (2,3),(1,4), which are the first walls that appear when looking up, down, left, and right from (1, 3), are destroyed.\n\nAfter processing all queries, there are two remaining walls, at (2, 1) and (2, 4).\n\nSample Input 2\n\n5 5 5\n3 3\n3 3\n3 2\n2 2\n1 2\n\nSample Output 2\n\n10\n\nSample Input 3\n\n4 3 10\n2 2\n4 1\n1 1\n4 2\n2 1\n3 1\n1 3\n1 2\n4 3\n4 2\n\nSample Output 3\n\n2\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Polish Mania", "question_content": "Whether a non-empty sequence of non-negative integers (V_1, V_2, \\dots, V_M) is Polish or not is recursively defined as follows:\n\n- We say (V_1, V_2, \\dots, V_M) is Polish if there exist V_1 Polish sequences W_1, W_2, \\dots, W_{V_1} such that the concatenation of sequences (V_1), W_1, W_2, \\dots, W_{V_1} in this order equals (V_1, V_2, \\dots, V_M).\n\nIn particular, the sequence (0) is Polish.\nGiven a sequence of non-negative integers (A_1, A_2, \\dots, A_N) of length N, find the number of Polish sequences of length N that are lexicographically not greater than (A_1, A_2, \\dots, A_N), modulo 998244353.\n What is lexicographical order on sequences?\nWe say that sequence S = (S_1,S_2,\\ldots,S_{|S|}) is lexicographically less than sequence T = (T_1,T_2,\\ldots,T_{|T|}) if either condition 1. or 2. below holds.\nHere, |S|, |T| represent the lengths of S, T respectively.\n\n-  |S| \\lt |T| and (S_1,S_2,\\ldots,S_{|S|}) = (T_1,T_2,\\ldots,T_{|S|}). \n-  There exists an integer 1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace such that both of the following hold:\n\n-  (S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1})\n-  S_i is (numerically) less than T_i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\dots A_N\n\nOutput\n\nPrint the number of sequences satisfying the conditions, modulo 998244353.\n\nConstraints\n\n\n- 1\\leq N \\leq 3\\times 10^5\n- 0\\leq A_i \\lt N\n- All input values are integers.\n\nSample Input 1\n\n6\n1 1 1 2 0 0\n\nSample Output 1\n\n2\n\n(1, 1, 1, 1, 1, 0) and (1, 1, 1, 2, 0, 0) satisfy the conditions.\nWe can verify that (1, 1, 1, 2, 0, 0) is Polish as follows.\n\n- As stated in the problem statement, (0) is Polish.\n- (2, 0, 0) is Polish because it equals the concatenation of (2) and two Polish sequences (0) and (0) in this order.\n- (1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (2, 0, 0) in this order.\n- (1, 1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (1, 2, 0, 0) in this order.\n- (1, 1, 1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (1, 1, 2, 0, 0) in this order.\n\nSample Input 2\n\n11\n3 3 4 4 5 5 6 6 7 7 8\n\nSample Output 2\n\n13002\n\nSample Input 3\n\n19\n18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18\n\nSample Output 3\n\n477638700\n\nSample Input 4\n\n4\n1 1 0 0\n\nSample Output 4\n\n0", "platform": "atcoder", "question_id": "arc186_d", "contest_id": "arc186", "contest_date": "2024-10-27T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"6\\n1 1 1 2 0 0\", \"output\": \"2\", \"testtype\": \"stdin\"}, {\"input\": \"11\\n3 3 4 4 5 5 6 6 7 7 8\", \"output\": \"13002\", \"testtype\": \"stdin\"}, {\"input\": \"19\\n18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18\", \"output\": \"477638700\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n1 1 0 0\", \"output\": \"0\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nWhether a non-empty sequence of non-negative integers (V_1, V_2, \\dots, V_M) is Polish or not is recursively defined as follows:\n\n- We say (V_1, V_2, \\dots, V_M) is Polish if there exist V_1 Polish sequences W_1, W_2, \\dots, W_{V_1} such that the concatenation of sequences (V_1), W_1, W_2, \\dots, W_{V_1} in this order equals (V_1, V_2, \\dots, V_M).\n\nIn particular, the sequence (0) is Polish.\nGiven a sequence of non-negative integers (A_1, A_2, \\dots, A_N) of length N, find the number of Polish sequences of length N that are lexicographically not greater than (A_1, A_2, \\dots, A_N), modulo 998244353.\n What is lexicographical order on sequences?\nWe say that sequence S = (S_1,S_2,\\ldots,S_{|S|}) is lexicographically less than sequence T = (T_1,T_2,\\ldots,T_{|T|}) if either condition 1. or 2. below holds.\nHere, |S|, |T| represent the lengths of S, T respectively.\n\n-  |S| \\lt |T| and (S_1,S_2,\\ldots,S_{|S|}) = (T_1,T_2,\\ldots,T_{|S|}). \n-  There exists an integer 1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace such that both of the following hold:\n\n-  (S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1})\n-  S_i is (numerically) less than T_i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\dots A_N\n\nOutput\n\nPrint the number of sequences satisfying the conditions, modulo 998244353.\n\nConstraints\n\n\n- 1\\leq N \\leq 3\\times 10^5\n- 0\\leq A_i \\lt N\n- All input values are integers.\n\nSample Input 1\n\n6\n1 1 1 2 0 0\n\nSample Output 1\n\n2\n\n(1, 1, 1, 1, 1, 0) and (1, 1, 1, 2, 0, 0) satisfy the conditions.\nWe can verify that (1, 1, 1, 2, 0, 0) is Polish as follows.\n\n- As stated in the problem statement, (0) is Polish.\n- (2, 0, 0) is Polish because it equals the concatenation of (2) and two Polish sequences (0) and (0) in this order.\n- (1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (2, 0, 0) in this order.\n- (1, 1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (1, 2, 0, 0) in this order.\n- (1, 1, 1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (1, 1, 2, 0, 0) in this order.\n\nSample Input 2\n\n11\n3 3 4 4 5 5 6 6 7 7 8\n\nSample Output 2\n\n13002\n\nSample Input 3\n\n19\n18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18\n\nSample Output 3\n\n477638700\n\nSample Input 4\n\n4\n1 1 0 0\n\nSample Output 4\n\n0\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "find-occurrences-of-an-element-in-an-array", "question_content": "You are given an integer array nums, an integer array queries, and an integer x.\nFor each queries[i], you need to find the index of the queries[i]^th occurrence of x in the nums array. If there are fewer than queries[i] occurrences of x, the answer should be -1 for that query.\nReturn an integer array answer containing the answers to all queries.\n \nExample 1:\n\nInput: nums = [1,3,1,7], queries = [1,3,2,4], x = 1\nOutput: [0,-1,2,-1]\nExplanation:\n\nFor the 1^st query, the first occurrence of 1 is at index 0.\nFor the 2^nd query, there are only two occurrences of 1 in nums, so the answer is -1.\nFor the 3^rd query, the second occurrence of 1 is at index 2.\nFor the 4^th query, there are only two occurrences of 1 in nums, so the answer is -1.\n\n\nExample 2:\n\nInput: nums = [1,2,3], queries = [10], x = 5\nOutput: [-1]\nExplanation:\n\nFor the 1^st query, 5 doesn't exist in nums, so the answer is -1.\n\n\n \nConstraints:\n\n1 <= nums.length, queries.length <= 10^5\n1 <= queries[i] <= 10^5\n1 <= nums[i], x <= 10^4", "platform": "leetcode", "question_id": "3420", "contest_id": "biweekly-contest-131", "contest_date": "2024-05-25T00:00:00", "starter_code": "class Solution:\n    def occurrencesOfElement(self, nums: List[int], queries: List[int], x: int) -> List[int]:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"output\": \"[0, -1, 2, -1]\", \"testtype\": \"functional\"}, {\"input\": \"[1, 2, 3]\\n[10]\\n5\", \"output\": \"[-1]\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"occurrencesOfElement\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an integer array nums, an integer array queries, and an integer x.\nFor each queries[i], you need to find the index of the queries[i]^th occurrence of x in the nums array. If there are fewer than queries[i] occurrences of x, the answer should be -1 for that query.\nReturn an integer array answer containing the answers to all queries.\n \nExample 1:\n\nInput: nums = [1,3,1,7], queries = [1,3,2,4], x = 1\nOutput: [0,-1,2,-1]\nExplanation:\n\nFor the 1^st query, the first occurrence of 1 is at index 0.\nFor the 2^nd query, there are only two occurrences of 1 in nums, so the answer is -1.\nFor the 3^rd query, the second occurrence of 1 is at index 2.\nFor the 4^th query, there are only two occurrences of 1 in nums, so the answer is -1.\n\n\nExample 2:\n\nInput: nums = [1,2,3], queries = [10], x = 5\nOutput: [-1]\nExplanation:\n\nFor the 1^st query, 5 doesn't exist in nums, so the answer is -1.\n\n\n \nConstraints:\n\n1 <= nums.length, queries.length <= 10^5\n1 <= queries[i] <= 10^5\n1 <= nums[i], x <= 10^4\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def occurrencesOfElement(self, nums: List[int], queries: List[int], x: int) -> List[int]:\n        \n```\n\n"}
{"question_title": "Sum of All Substrings", "question_content": "You are given a string S of length N consisting of digits from 1 through 9.\nFor each pair of integers (i,j) \\ (1\\leq i\\leq j\\leq N), define f(i, j) as the value obtained by interpreting the substring of S from the i-th through the j-th character as a decimal integer. Find \\displaystyle \\sum_{i=1}^N \\sum_{j=i}^N f(i, j).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- N is an integer.\n- S is a string of length N consisting of digits from 1 through 9.\n\nSample Input 1\n\n3\r\n379\n\nSample Output 1\n\n514\r\n\nThe answer is f(1,1) + f(1,2) + f(1,3) + f(2,2) + f(2,3) + f(3,3) = 3 + 37 + 379 + 7 + 79 + 9 = 514.\n\nSample Input 2\n\n30\r\n314159265358979323846264338327\n\nSample Output 2\n\n369673254065355789035427227741", "platform": "atcoder", "question_id": "abc379_e", "contest_id": "abc379", "contest_date": "2024-11-09T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3\\n379\", \"output\": \"514\", \"testtype\": \"stdin\"}, {\"input\": \"30\\n314159265358979323846264338327\", \"output\": \"369673254065355789035427227741\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string S of length N consisting of digits from 1 through 9.\nFor each pair of integers (i,j) \\ (1\\leq i\\leq j\\leq N), define f(i, j) as the value obtained by interpreting the substring of S from the i-th through the j-th character as a decimal integer. Find \\displaystyle \\sum_{i=1}^N \\sum_{j=i}^N f(i, j).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- N is an integer.\n- S is a string of length N consisting of digits from 1 through 9.\n\nSample Input 1\n\n3\r\n379\n\nSample Output 1\n\n514\r\n\nThe answer is f(1,1) + f(1,2) + f(1,3) + f(2,2) + f(2,3) + f(3,3) = 3 + 37 + 379 + 7 + 79 + 9 = 514.\n\nSample Input 2\n\n30\r\n314159265358979323846264338327\n\nSample Output 2\n\n369673254065355789035427227741\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Penalty Kick", "question_content": "Takahashi will have N penalty kicks in a soccer match.\nFor the i-th penalty kick, he will fail if i is a multiple of 3, and succeed otherwise.\nPrint the results of his penalty kicks.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint a string of length N representing the results of Takahashi's penalty kicks. The i-th character (1 \\leq i \\leq N) should be o if Takahashi succeeds in the i-th penalty kick, and x if he fails.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- All inputs are integers.\n\nSample Input 1\n\n7\n\nSample Output 1\n\nooxooxo\r\n\nTakahashi fails the third and sixth penalty kicks, so the third and sixth characters will be x.\n\nSample Input 2\n\n9\n\nSample Output 2\n\nooxooxoox", "platform": "atcoder", "question_id": "abc348_a", "contest_id": "abc348", "contest_date": "2024-04-06T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"7\\n\", \"output\": \"ooxooxo\\n\", \"testtype\": \"stdin\"}, {\"input\": \"9\\n\", \"output\": \"ooxooxoox\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTakahashi will have N penalty kicks in a soccer match.\nFor the i-th penalty kick, he will fail if i is a multiple of 3, and succeed otherwise.\nPrint the results of his penalty kicks.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint a string of length N representing the results of Takahashi's penalty kicks. The i-th character (1 \\leq i \\leq N) should be o if Takahashi succeeds in the i-th penalty kick, and x if he fails.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- All inputs are integers.\n\nSample Input 1\n\n7\n\nSample Output 1\n\nooxooxo\r\n\nTakahashi fails the third and sixth penalty kicks, so the third and sixth characters will be x.\n\nSample Input 2\n\n9\n\nSample Output 2\n\nooxooxoox\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "maximum-containers-on-a-ship", "question_content": "You are given a positive integer n representing an n x n cargo deck on a ship. Each cell on the deck can hold one container with a weight of exactly w.\nHowever, the total weight of all containers, if loaded onto the deck, must not exceed the ship's maximum weight capacity, maxWeight.\nReturn the maximum number of containers that can be loaded onto the ship.\n \nExample 1:\n\nInput: n = 2, w = 3, maxWeight = 15\nOutput: 4\nExplanation: \nThe deck has 4 cells, and each container weighs 3. The total weight of loading all containers is 12, which does not exceed maxWeight.\n\nExample 2:\n\nInput: n = 3, w = 5, maxWeight = 20\nOutput: 4\nExplanation: \nThe deck has 9 cells, and each container weighs 5. The maximum number of containers that can be loaded without exceeding maxWeight is 4.\n\n \nConstraints:\n\n1 <= n <= 1000\n1 <= w <= 1000\n1 <= maxWeight <= 10^9", "platform": "leetcode", "question_id": "3817", "contest_id": "weekly-contest-442", "contest_date": "2025-03-22T19:30:00", "starter_code": "class Solution:\n    def maxContainers(self, n: int, w: int, maxWeight: int) -> int:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"2\\n3\\n15\", \"output\": \"4\", \"testtype\": \"functional\"}, {\"input\": \"3\\n5\\n20\", \"output\": \"4\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"maxContainers\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a positive integer n representing an n x n cargo deck on a ship. Each cell on the deck can hold one container with a weight of exactly w.\nHowever, the total weight of all containers, if loaded onto the deck, must not exceed the ship's maximum weight capacity, maxWeight.\nReturn the maximum number of containers that can be loaded onto the ship.\n \nExample 1:\n\nInput: n = 2, w = 3, maxWeight = 15\nOutput: 4\nExplanation: \nThe deck has 4 cells, and each container weighs 3. The total weight of loading all containers is 12, which does not exceed maxWeight.\n\nExample 2:\n\nInput: n = 3, w = 5, maxWeight = 20\nOutput: 4\nExplanation: \nThe deck has 9 cells, and each container weighs 5. The maximum number of containers that can be loaded without exceeding maxWeight is 4.\n\n \nConstraints:\n\n1 <= n <= 1000\n1 <= w <= 1000\n1 <= maxWeight <= 10^9\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def maxContainers(self, n: int, w: int, maxWeight: int) -> int:\n        \n```\n\n"}
{"question_title": "maximize-value-of-function-in-a-ball-passing-game", "question_content": "You are given a 0-indexed integer array receiver of length n and an integer k.\nThere are n players having a unique id in the range [0, n - 1] who will play a ball passing game, and receiver[i] is the id of the player who receives passes from the player with id i. Players can pass to themselves, i.e. receiver[i] may be equal to i.\nYou must choose one of the n players as the starting player for the game, and the ball will be passed exactly k times starting from the chosen player.\nFor a chosen starting player having id x, we define a function f(x) that denotes the sum of x and the ids of all players who receive the ball during the k passes, including repetitions. In other words, f(x) = x + receiver[x] + receiver[receiver[x]] + ... + receiver^(k)[x].\nYour task is to choose a starting player having id x that maximizes the value of f(x).\nReturn an integer denoting the maximum value of the function.\nNote: receiver may contain duplicates.\n \nExample 1:\n\n\n\nPass Number\nSender ID\nReceiver ID\nx + Receiver IDs\n\n\n \n \n \n2\n\n\n1\n2\n1\n3\n\n\n2\n1\n0\n3\n\n\n3\n0\n2\n5\n\n\n4\n2\n1\n6\n\n\n\n\nInput: receiver = [2,0,1], k = 4\nOutput: 6\nExplanation: The table above shows a simulation of the game starting with the player having id x = 2. \nFrom the table, f(2) is equal to 6. \nIt can be shown that 6 is the maximum achievable value of the function. \nHence, the output is 6. \n\nExample 2:\n\n\n\nPass Number\nSender ID\nReceiver ID\nx + Receiver IDs\n\n\n \n \n \n4\n\n\n1\n4\n3\n7\n\n\n2\n3\n2\n9\n\n\n3\n2\n1\n10\n\n\n\n\nInput: receiver = [1,1,1,2,3], k = 3\nOutput: 10\nExplanation: The table above shows a simulation of the game starting with the player having id x = 4. \nFrom the table, f(4) is equal to 10. \nIt can be shown that 10 is the maximum achievable value of the function. \nHence, the output is 10. \n\n \nConstraints:\n\n1 <= receiver.length == n <= 10^5\n0 <= receiver[i] <= n - 1\n1 <= k <= 10^10", "platform": "leetcode", "question_id": "3032", "contest_id": "weekly-contest-360", "contest_date": "2023-08-27T00:00:00", "starter_code": "class Solution:\n    def getMaxFunctionValue(self, receiver: List[int], k: int) -> int:\n        ", "difficulty": "hard", "public_test_cases": "[{\"input\": \"[2, 0, 1]\\n4\", \"output\": \"6\", \"testtype\": \"functional\"}, {\"input\": \"[1, 1, 1, 2, 3]\\n3\", \"output\": \"10\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"getMaxFunctionValue\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a 0-indexed integer array receiver of length n and an integer k.\nThere are n players having a unique id in the range [0, n - 1] who will play a ball passing game, and receiver[i] is the id of the player who receives passes from the player with id i. Players can pass to themselves, i.e. receiver[i] may be equal to i.\nYou must choose one of the n players as the starting player for the game, and the ball will be passed exactly k times starting from the chosen player.\nFor a chosen starting player having id x, we define a function f(x) that denotes the sum of x and the ids of all players who receive the ball during the k passes, including repetitions. In other words, f(x) = x + receiver[x] + receiver[receiver[x]] + ... + receiver^(k)[x].\nYour task is to choose a starting player having id x that maximizes the value of f(x).\nReturn an integer denoting the maximum value of the function.\nNote: receiver may contain duplicates.\n \nExample 1:\n\n\n\nPass Number\nSender ID\nReceiver ID\nx + Receiver IDs\n\n\n \n \n \n2\n\n\n1\n2\n1\n3\n\n\n2\n1\n0\n3\n\n\n3\n0\n2\n5\n\n\n4\n2\n1\n6\n\n\n\n\nInput: receiver = [2,0,1], k = 4\nOutput: 6\nExplanation: The table above shows a simulation of the game starting with the player having id x = 2. \nFrom the table, f(2) is equal to 6. \nIt can be shown that 6 is the maximum achievable value of the function. \nHence, the output is 6. \n\nExample 2:\n\n\n\nPass Number\nSender ID\nReceiver ID\nx + Receiver IDs\n\n\n \n \n \n4\n\n\n1\n4\n3\n7\n\n\n2\n3\n2\n9\n\n\n3\n2\n1\n10\n\n\n\n\nInput: receiver = [1,1,1,2,3], k = 3\nOutput: 10\nExplanation: The table above shows a simulation of the game starting with the player having id x = 4. \nFrom the table, f(4) is equal to 10. \nIt can be shown that 10 is the maximum achievable value of the function. \nHence, the output is 10. \n\n \nConstraints:\n\n1 <= receiver.length == n <= 10^5\n0 <= receiver[i] <= n - 1\n1 <= k <= 10^10\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def getMaxFunctionValue(self, receiver: List[int], k: int) -> int:\n        \n```\n\n"}
{"question_title": "Sigma Problem", "question_content": "For positive integers x and y, define f(x, y) as the remainder of (x + y) divided by 10^8.\nYou are given a sequence of positive integers A = (A_1, \\ldots, A_N) of length N. Find the value of the following expression:\n\\displaystyle \\sum_{i=1}^{N-1}\\sum_{j=i+1}^N f(A_i,A_j).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN \r\nA_1 \\ldots A_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 3\\times 10^5\n- 1 \\leq A_i < 10^8\n- All input values are integers.\n\nSample Input 1\n\n3\r\n3 50000001 50000002\n\nSample Output 1\n\n100000012\r\n\n\n- f(A_1,A_2)=50000004 \n- f(A_1,A_3)=50000005 \n- f(A_2,A_3)=3 \n\nThus, the answer is f(A_1,A_2) + f(A_1,A_3) + f(A_2,A_3) = 100000012.\nNote that you are not asked to compute the remainder of the sum divided by 10^8.\n\nSample Input 2\n\n5\r\n1 3 99999999 99999994 1000000\n\nSample Output 2\n\n303999988", "platform": "atcoder", "question_id": "abc353_c", "contest_id": "abc353", "contest_date": "2024-05-11T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"3\\n3 50000001 50000002\\n\", \"output\": \"100000012\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5\\n1 3 99999999 99999994 1000000\\n\", \"output\": \"303999988\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nFor positive integers x and y, define f(x, y) as the remainder of (x + y) divided by 10^8.\nYou are given a sequence of positive integers A = (A_1, \\ldots, A_N) of length N. Find the value of the following expression:\n\\displaystyle \\sum_{i=1}^{N-1}\\sum_{j=i+1}^N f(A_i,A_j).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN \r\nA_1 \\ldots A_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 3\\times 10^5\n- 1 \\leq A_i < 10^8\n- All input values are integers.\n\nSample Input 1\n\n3\r\n3 50000001 50000002\n\nSample Output 1\n\n100000012\r\n\n\n- f(A_1,A_2)=50000004 \n- f(A_1,A_3)=50000005 \n- f(A_2,A_3)=3 \n\nThus, the answer is f(A_1,A_2) + f(A_1,A_3) + f(A_2,A_3) = 100000012.\nNote that you are not asked to compute the remainder of the sum divided by 10^8.\n\nSample Input 2\n\n5\r\n1 3 99999999 99999994 1000000\n\nSample Output 2\n\n303999988\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Find it!", "question_content": "There is a directed graph with N vertices and N edges.\r\nThe i-th edge goes from vertex i to vertex A_i. (The constraints guarantee that i \\neq A_i.)\r\nFind a directed cycle without the same vertex appearing multiple times.\r\nIt can be shown that a solution exists under the constraints of this problem.\nNotes\nThe sequence of vertices B = (B_1, B_2, \\dots, B_M) is called a directed cycle when all of the following conditions are satisfied:\n\n- M \\geq 2\n- The edge from vertex B_i to vertex B_{i+1} exists. (1 \\leq i \\leq M-1)\n- The edge from vertex B_M to vertex B_1 exists.\n- If i \\neq j, then B_i \\neq B_j.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 A_2 \\dots A_N\n\nOutput\n\nPrint a solution in the following format:\nM\r\nB_1 B_2 \\dots B_M\r\n\nM is the number of vertices, and B_i is the i-th vertex in the directed cycle.\r\nThe following conditions must be satisfied:\n\n- 2 \\le M\n- B_{i+1} = A_{B_i} ( 1 \\le i \\le M-1 )\n- B_{1} = A_{B_M}\n- B_i \\neq B_j ( i \\neq j )\n\nIf multiple solutions exist, any of them will be accepted.\n\nConstraints\n\n\n- All input values are integers.\n- 2 \\le N \\le 2 \\times 10^5\n- 1 \\le A_i \\le N\n- A_i \\neq i\n\nSample Input 1\n\n7\r\n6 7 2 1 3 4 5\n\nSample Output 1\n\n4\r\n7 5 3 2\r\n\n7 \\rightarrow 5 \\rightarrow 3 \\rightarrow 2 \\rightarrow 7 is indeed a directed cycle.\nHere is the graph corresponding to this input:\n\nHere are other acceptable outputs:\n4\r\n2 7 5 3\r\n\n3\r\n4 1 6\r\n\nNote that the graph may not be connected.\n\nSample Input 2\n\n2\r\n2 1\n\nSample Output 2\n\n2\r\n1 2\r\n\nThis case contains both of the edges 1 \\rightarrow 2 and 2 \\rightarrow 1.\r\nIn this case, 1 \\rightarrow 2 \\rightarrow 1 is indeed a directed cycle.\nHere is the graph corresponding to this input, where 1 \\leftrightarrow 2 represents the existence of both 1 \\rightarrow 2 and 2 \\rightarrow 1:\n\nSample Input 3\n\n8\r\n3 7 4 7 3 3 8 2\n\nSample Output 3\n\n3\r\n2 7 8\r\n\nHere is the graph corresponding to this input:", "platform": "atcoder", "question_id": "abc311_c", "contest_id": "abc311", "contest_date": "2023-07-22T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"7\\n6 7 2 1 3 4 5\\n\", \"output\": \"4\\n7 5 3 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2\\n2 1\\n\", \"output\": \"2\\n1 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"8\\n3 7 4 7 3 3 8 2\\n\", \"output\": \"3\\n2 7 8\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a directed graph with N vertices and N edges.\r\nThe i-th edge goes from vertex i to vertex A_i. (The constraints guarantee that i \\neq A_i.)\r\nFind a directed cycle without the same vertex appearing multiple times.\r\nIt can be shown that a solution exists under the constraints of this problem.\nNotes\nThe sequence of vertices B = (B_1, B_2, \\dots, B_M) is called a directed cycle when all of the following conditions are satisfied:\n\n- M \\geq 2\n- The edge from vertex B_i to vertex B_{i+1} exists. (1 \\leq i \\leq M-1)\n- The edge from vertex B_M to vertex B_1 exists.\n- If i \\neq j, then B_i \\neq B_j.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 A_2 \\dots A_N\n\nOutput\n\nPrint a solution in the following format:\nM\r\nB_1 B_2 \\dots B_M\r\n\nM is the number of vertices, and B_i is the i-th vertex in the directed cycle.\r\nThe following conditions must be satisfied:\n\n- 2 \\le M\n- B_{i+1} = A_{B_i} ( 1 \\le i \\le M-1 )\n- B_{1} = A_{B_M}\n- B_i \\neq B_j ( i \\neq j )\n\nIf multiple solutions exist, any of them will be accepted.\n\nConstraints\n\n\n- All input values are integers.\n- 2 \\le N \\le 2 \\times 10^5\n- 1 \\le A_i \\le N\n- A_i \\neq i\n\nSample Input 1\n\n7\r\n6 7 2 1 3 4 5\n\nSample Output 1\n\n4\r\n7 5 3 2\r\n\n7 \\rightarrow 5 \\rightarrow 3 \\rightarrow 2 \\rightarrow 7 is indeed a directed cycle.\nHere is the graph corresponding to this input:\n\nHere are other acceptable outputs:\n4\r\n2 7 5 3\r\n\n3\r\n4 1 6\r\n\nNote that the graph may not be connected.\n\nSample Input 2\n\n2\r\n2 1\n\nSample Output 2\n\n2\r\n1 2\r\n\nThis case contains both of the edges 1 \\rightarrow 2 and 2 \\rightarrow 1.\r\nIn this case, 1 \\rightarrow 2 \\rightarrow 1 is indeed a directed cycle.\nHere is the graph corresponding to this input, where 1 \\leftrightarrow 2 represents the existence of both 1 \\rightarrow 2 and 2 \\rightarrow 1:\n\nSample Input 3\n\n8\r\n3 7 4 7 3 3 8 2\n\nSample Output 3\n\n3\r\n2 7 8\r\n\nHere is the graph corresponding to this input:\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "maximum-xor-product", "question_content": "Given three integers a, b, and n, return the maximum value of (a XOR x) * (b XOR x) where 0 <= x < 2^n.\nSince the answer may be too large, return it modulo 10^9 + 7.\nNote that XOR is the bitwise XOR operation.\n \nExample 1:\n\nInput: a = 12, b = 5, n = 4\nOutput: 98\nExplanation: For x = 2, (a XOR x) = 14 and (b XOR x) = 7. Hence, (a XOR x) * (b XOR x) = 98. \nIt can be shown that 98 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2^n.\n\nExample 2:\n\nInput: a = 6, b = 7 , n = 5\nOutput: 930\nExplanation: For x = 25, (a XOR x) = 31 and (b XOR x) = 30. Hence, (a XOR x) * (b XOR x) = 930.\nIt can be shown that 930 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2^n.\nExample 3:\n\nInput: a = 1, b = 6, n = 3\nOutput: 12\nExplanation: For x = 5, (a XOR x) = 4 and (b XOR x) = 3. Hence, (a XOR x) * (b XOR x) = 12.\nIt can be shown that 12 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2^n.\n\n \nConstraints:\n\n0 <= a, b < 2^50\n0 <= n <= 50", "platform": "leetcode", "question_id": "3192", "contest_id": "weekly-contest-372", "contest_date": "2023-11-18T00:00:00", "starter_code": "class Solution:\n    def maximumXorProduct(self, a: int, b: int, n: int) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"12\\n5\\n4\", \"output\": \"98\", \"testtype\": \"functional\"}, {\"input\": \"6\\n7\\n5\", \"output\": \"930\", \"testtype\": \"functional\"}, {\"input\": \"1\\n6\\n3\", \"output\": \"12\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"maximumXorProduct\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nGiven three integers a, b, and n, return the maximum value of (a XOR x) * (b XOR x) where 0 <= x < 2^n.\nSince the answer may be too large, return it modulo 10^9 + 7.\nNote that XOR is the bitwise XOR operation.\n \nExample 1:\n\nInput: a = 12, b = 5, n = 4\nOutput: 98\nExplanation: For x = 2, (a XOR x) = 14 and (b XOR x) = 7. Hence, (a XOR x) * (b XOR x) = 98. \nIt can be shown that 98 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2^n.\n\nExample 2:\n\nInput: a = 6, b = 7 , n = 5\nOutput: 930\nExplanation: For x = 25, (a XOR x) = 31 and (b XOR x) = 30. Hence, (a XOR x) * (b XOR x) = 930.\nIt can be shown that 930 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2^n.\nExample 3:\n\nInput: a = 1, b = 6, n = 3\nOutput: 12\nExplanation: For x = 5, (a XOR x) = 4 and (b XOR x) = 3. Hence, (a XOR x) * (b XOR x) = 12.\nIt can be shown that 12 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2^n.\n\n \nConstraints:\n\n0 <= a, b < 2^50\n0 <= n <= 50\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def maximumXorProduct(self, a: int, b: int, n: int) -> int:\n        \n```\n\n"}
{"question_title": "Sightseeing Tour", "question_content": "There are N islands and M bidirectional bridges connecting two islands. The islands and bridges are numbered 1, 2, \\ldots, N and 1, 2, \\ldots, M, respectively.\r\nBridge i connects islands U_i and V_i, and the time it takes to cross it in either direction is T_i.\r\nNo bridge connects an island to itself, but it is possible for two islands to be directly connected by more than one bridge.\r\nOne can travel between any two islands using some bridges.\nYou are given Q queries, so answer each of them. The i-th query is as follows:\n\nYou are given K_i distinct bridges: bridges B_{i,1}, B_{i,2}, \\ldots, B_{i,K_i}.\r\nFind the minimum time required to travel from island 1 to island N using each of these bridges at least once.\r\nOnly consider the time spent crossing bridges.\r\nYou can cross the given bridges in any order and in any direction.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nU_1 V_1 T_1\r\nU_2 V_2 T_2\r\n\\vdots\r\nU_M V_M T_M\r\nQ\r\nK_1\r\nB_{1,1} B_{1,2} \\cdots B_{1,{K_1}}\r\nK_2\r\nB_{2,1} B_{2,2} \\cdots B_{2,{K_2}}\r\n\\vdots\r\nK_Q\r\nB_{Q,1} B_{Q,2} \\cdots B_{Q,{K_Q}}\n\nOutput\n\nPrint Q lines. The i-th line (1 \\leq i \\leq Q) should contain the answer to the i-th query as an integer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 400\n- N-1 \\leq M \\leq 2 \\times 10^5\n- 1 \\leq U_i < V_i \\leq N\n- 1 \\leq T_i \\leq 10^9\n- 1 \\leq Q \\leq 3000\n- 1 \\leq K_i \\leq 5\n- 1 \\leq B_{i,1} < B_{i,2} < \\cdots < B_{i,K_i} \\leq M\n- All input values are integers.\n- It is possible to travel between any two islands using some bridges.\n\nSample Input 1\n\n3 5\r\n1 2 10\r\n1 3 20\r\n1 3 30\r\n2 3 15\r\n2 3 25\r\n2\r\n1\r\n1\r\n2\r\n3 5\n\nSample Output 1\n\n25\r\n70\r\n\nFor the first query, we need to find the minimum time to travel from island 1 to island 3 while using bridge 1.\r\nThe minimum time is achieved by using bridge 1 to move from island 1 to island 2, then using bridge 4 to move from island 2 to island 3. The time taken is 10 + 15 = 25.\r\nHence, print 25 on the first line.\nFor the second query, we need to find the minimum time to travel from island 1 to island 3 while using both bridges 3 and 5.\r\nThe minimum time is achieved by using bridge 3 to move from island 1 to island 3, then using bridge 5 to move to island 2, and finally using bridge 4 to return to island 3. The time taken is 30 + 25 + 15 = 70.\r\nHence, print 70 on the second line.\n\nSample Input 2\n\n6 6\r\n1 5 1\r\n2 5 1\r\n2 4 1\r\n3 4 1\r\n3 6 1\r\n1 6 1\r\n2\r\n5\r\n1 2 3 4 5\r\n1\r\n5\n\nSample Output 2\n\n5\r\n3\r\n\nFor each query, you can cross the specified bridges in either direction.\n\nSample Input 3\n\n5 5\r\n1 2 1000000000\r\n2 3 1000000000\r\n3 4 1000000000\r\n4 5 1000000000\r\n1 5 1000000000\r\n1\r\n1\r\n3\n\nSample Output 3\n\n4000000000\r\n\nBeware that the answer may not fit in a 32-bit integer.", "platform": "atcoder", "question_id": "abc369_e", "contest_id": "abc369", "contest_date": "2024-08-31T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3 5\\n1 2 10\\n1 3 20\\n1 3 30\\n2 3 15\\n2 3 25\\n2\\n1\\n1\\n2\\n3 5\\n\", \"output\": \"25\\n70\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 6\\n1 5 1\\n2 5 1\\n2 4 1\\n3 4 1\\n3 6 1\\n1 6 1\\n2\\n5\\n1 2 3 4 5\\n1\\n5\\n\", \"output\": \"5\\n3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 5\\n1 2 1000000000\\n2 3 1000000000\\n3 4 1000000000\\n4 5 1000000000\\n1 5 1000000000\\n1\\n1\\n3\\n\", \"output\": \"4000000000\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are N islands and M bidirectional bridges connecting two islands. The islands and bridges are numbered 1, 2, \\ldots, N and 1, 2, \\ldots, M, respectively.\r\nBridge i connects islands U_i and V_i, and the time it takes to cross it in either direction is T_i.\r\nNo bridge connects an island to itself, but it is possible for two islands to be directly connected by more than one bridge.\r\nOne can travel between any two islands using some bridges.\nYou are given Q queries, so answer each of them. The i-th query is as follows:\n\nYou are given K_i distinct bridges: bridges B_{i,1}, B_{i,2}, \\ldots, B_{i,K_i}.\r\nFind the minimum time required to travel from island 1 to island N using each of these bridges at least once.\r\nOnly consider the time spent crossing bridges.\r\nYou can cross the given bridges in any order and in any direction.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nU_1 V_1 T_1\r\nU_2 V_2 T_2\r\n\\vdots\r\nU_M V_M T_M\r\nQ\r\nK_1\r\nB_{1,1} B_{1,2} \\cdots B_{1,{K_1}}\r\nK_2\r\nB_{2,1} B_{2,2} \\cdots B_{2,{K_2}}\r\n\\vdots\r\nK_Q\r\nB_{Q,1} B_{Q,2} \\cdots B_{Q,{K_Q}}\n\nOutput\n\nPrint Q lines. The i-th line (1 \\leq i \\leq Q) should contain the answer to the i-th query as an integer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 400\n- N-1 \\leq M \\leq 2 \\times 10^5\n- 1 \\leq U_i < V_i \\leq N\n- 1 \\leq T_i \\leq 10^9\n- 1 \\leq Q \\leq 3000\n- 1 \\leq K_i \\leq 5\n- 1 \\leq B_{i,1} < B_{i,2} < \\cdots < B_{i,K_i} \\leq M\n- All input values are integers.\n- It is possible to travel between any two islands using some bridges.\n\nSample Input 1\n\n3 5\r\n1 2 10\r\n1 3 20\r\n1 3 30\r\n2 3 15\r\n2 3 25\r\n2\r\n1\r\n1\r\n2\r\n3 5\n\nSample Output 1\n\n25\r\n70\r\n\nFor the first query, we need to find the minimum time to travel from island 1 to island 3 while using bridge 1.\r\nThe minimum time is achieved by using bridge 1 to move from island 1 to island 2, then using bridge 4 to move from island 2 to island 3. The time taken is 10 + 15 = 25.\r\nHence, print 25 on the first line.\nFor the second query, we need to find the minimum time to travel from island 1 to island 3 while using both bridges 3 and 5.\r\nThe minimum time is achieved by using bridge 3 to move from island 1 to island 3, then using bridge 5 to move to island 2, and finally using bridge 4 to return to island 3. The time taken is 30 + 25 + 15 = 70.\r\nHence, print 70 on the second line.\n\nSample Input 2\n\n6 6\r\n1 5 1\r\n2 5 1\r\n2 4 1\r\n3 4 1\r\n3 6 1\r\n1 6 1\r\n2\r\n5\r\n1 2 3 4 5\r\n1\r\n5\n\nSample Output 2\n\n5\r\n3\r\n\nFor each query, you can cross the specified bridges in either direction.\n\nSample Input 3\n\n5 5\r\n1 2 1000000000\r\n2 3 1000000000\r\n3 4 1000000000\r\n4 5 1000000000\r\n1 5 1000000000\r\n1\r\n1\r\n3\n\nSample Output 3\n\n4000000000\r\n\nBeware that the answer may not fit in a 32-bit integer.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "permutations-iv", "question_content": "Given two integers, n and k, an alternating permutation is a permutation of the first n positive integers such that no two adjacent elements are both odd or both even.\nReturn the k-th alternating permutation sorted in lexicographical order. If there are fewer than k valid alternating permutations, return an empty list.\n \nExample 1:\n\nInput: n = 4, k = 6\nOutput: [3,4,1,2]\nExplanation:\nThe lexicographically-sorted alternating permutations of [1, 2, 3, 4] are:\n\n[1, 2, 3, 4]\n[1, 4, 3, 2]\n[2, 1, 4, 3]\n[2, 3, 4, 1]\n[3, 2, 1, 4]\n[3, 4, 1, 2] ← 6th permutation\n[4, 1, 2, 3]\n[4, 3, 2, 1]\n\nSince k = 6, we return [3, 4, 1, 2].\n\nExample 2:\n\nInput: n = 3, k = 2\nOutput: [3,2,1]\nExplanation:\nThe lexicographically-sorted alternating permutations of [1, 2, 3] are:\n\n[1, 2, 3]\n[3, 2, 1] ← 2nd permutation\n\nSince k = 2, we return [3, 2, 1].\n\nExample 3:\n\nInput: n = 2, k = 3\nOutput: []\nExplanation:\nThe lexicographically-sorted alternating permutations of [1, 2] are:\n\n[1, 2]\n[2, 1]\n\nThere are only 2 alternating permutations, but k = 3, which is out of range. Thus, we return an empty list [].\n\n \nConstraints:\n\n1 <= n <= 100\n1 <= k <= 10^15", "platform": "leetcode", "question_id": "3783", "contest_id": "biweekly-contest-151", "contest_date": "2025-03-01T06:30:00", "starter_code": "class Solution:\n    def permute(self, n: int, k: int) -> List[int]:\n        ", "difficulty": "hard", "public_test_cases": "[{\"input\": \"4\\n6\", \"output\": \"[3, 4, 1, 2]\", \"testtype\": \"functional\"}, {\"input\": \"3\\n2\", \"output\": \"[3, 2, 1]\", \"testtype\": \"functional\"}, {\"input\": \"2\\n3\", \"output\": \"[]\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"permute\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nGiven two integers, n and k, an alternating permutation is a permutation of the first n positive integers such that no two adjacent elements are both odd or both even.\nReturn the k-th alternating permutation sorted in lexicographical order. If there are fewer than k valid alternating permutations, return an empty list.\n \nExample 1:\n\nInput: n = 4, k = 6\nOutput: [3,4,1,2]\nExplanation:\nThe lexicographically-sorted alternating permutations of [1, 2, 3, 4] are:\n\n[1, 2, 3, 4]\n[1, 4, 3, 2]\n[2, 1, 4, 3]\n[2, 3, 4, 1]\n[3, 2, 1, 4]\n[3, 4, 1, 2] ← 6th permutation\n[4, 1, 2, 3]\n[4, 3, 2, 1]\n\nSince k = 6, we return [3, 4, 1, 2].\n\nExample 2:\n\nInput: n = 3, k = 2\nOutput: [3,2,1]\nExplanation:\nThe lexicographically-sorted alternating permutations of [1, 2, 3] are:\n\n[1, 2, 3]\n[3, 2, 1] ← 2nd permutation\n\nSince k = 2, we return [3, 2, 1].\n\nExample 3:\n\nInput: n = 2, k = 3\nOutput: []\nExplanation:\nThe lexicographically-sorted alternating permutations of [1, 2] are:\n\n[1, 2]\n[2, 1]\n\nThere are only 2 alternating permutations, but k = 3, which is out of range. Thus, we return an empty list [].\n\n \nConstraints:\n\n1 <= n <= 100\n1 <= k <= 10^15\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def permute(self, n: int, k: int) -> List[int]:\n        \n```\n\n"}
{"question_title": "Manhattan Multifocal Ellipse", "question_content": "You are given N points (x_1, y_1), (x_2, y_2), \\dots, (x_N, y_N) on a two-dimensional plane, and a non-negative integer D.\nFind the number of integer pairs (x, y) such that \\displaystyle \\sum_{i=1}^N (|x-x_i|+|y-y_i|) \\leq D.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN D\r\nx_1 y_1\r\nx_2 y_2\r\n\\vdots\r\nx_N y_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- 0 \\leq D \\leq 10^6\n- -10^6 \\leq x_i, y_i \\leq 10^6\n- (x_i, y_i) \\neq (x_j, y_j) for i \\neq j.\n- All input values are integers.\n\nSample Input 1\n\n2 3\r\n0 0\r\n1 0\n\nSample Output 1\n\n8\r\n\nThe following figure visualizes the input and the answer for Sample 1. The blue points represent the input. The blue and red points, eight in total, satisfy the condition in the statement.\n\nSample Input 2\n\n2 0\r\n0 0\r\n2 0\n\nSample Output 2\n\n0\n\nSample Input 3\n\n6 100\r\n9 -6\r\n10 -1\r\n2 10\r\n-1 7\r\n-7 5\r\n-1 -4\n\nSample Output 3\n\n419", "platform": "atcoder", "question_id": "abc366_e", "contest_id": "abc366", "contest_date": "2024-08-10T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"2 3\\n0 0\\n1 0\\n\", \"output\": \"8\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2 0\\n0 0\\n2 0\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 100\\n9 -6\\n10 -1\\n2 10\\n-1 7\\n-7 5\\n-1 -4\\n\", \"output\": \"419\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given N points (x_1, y_1), (x_2, y_2), \\dots, (x_N, y_N) on a two-dimensional plane, and a non-negative integer D.\nFind the number of integer pairs (x, y) such that \\displaystyle \\sum_{i=1}^N (|x-x_i|+|y-y_i|) \\leq D.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN D\r\nx_1 y_1\r\nx_2 y_2\r\n\\vdots\r\nx_N y_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- 0 \\leq D \\leq 10^6\n- -10^6 \\leq x_i, y_i \\leq 10^6\n- (x_i, y_i) \\neq (x_j, y_j) for i \\neq j.\n- All input values are integers.\n\nSample Input 1\n\n2 3\r\n0 0\r\n1 0\n\nSample Output 1\n\n8\r\n\nThe following figure visualizes the input and the answer for Sample 1. The blue points represent the input. The blue and red points, eight in total, satisfy the condition in the statement.\n\nSample Input 2\n\n2 0\r\n0 0\r\n2 0\n\nSample Output 2\n\n0\n\nSample Input 3\n\n6 100\r\n9 -6\r\n10 -1\r\n2 10\r\n-1 7\r\n-7 5\r\n-1 -4\n\nSample Output 3\n\n419\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Vacation Together", "question_content": "There are N people numbered 1 to N.\r\nYou are given their schedule for the following D days. The schedule for person i is represented by a string S_i of length D. If the j-th character of S_i is o, person i is free on the j-th day; if it is x, they are occupied that day.\nFrom these D days, consider choosing some consecutive days when all the people are free.\r\nHow many days can be chosen at most? If no day can be chosen, report 0.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN D\r\nS_1\r\nS_2\r\n\\vdots\r\nS_N\n\nOutput\n\nPrint the maximum number of days that can be chosen, or 0 if no day can be chosen.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- 1 \\leq D \\leq 100\n- N and D are integers.\n- S_i is a string of length D consisting of o and x.\n\nSample Input 1\n\n3 5\r\nxooox\r\noooxx\r\noooxo\n\nSample Output 1\n\n2\r\n\nAll the people are free on the second and third days, so we can choose them.\r\nChoosing these two days will maximize the number of days among all possible choices.\n\nSample Input 2\n\n3 3\r\noxo\r\noxo\r\noxo\n\nSample Output 2\n\n1\r\n\nNote that the chosen days must be consecutive. (All the people are free on the first and third days, so we can choose either of them, but not both.)\n\nSample Input 3\n\n3 3\r\noox\r\noxo\r\nxoo\n\nSample Output 3\n\n0\r\n\nPrint 0 if no day can be chosen.\n\nSample Input 4\n\n1 7\r\nooooooo\n\nSample Output 4\n\n7\n\nSample Input 5\n\n5 15\r\noxooooooooooooo\r\noxooxooooooooox\r\noxoooooooooooox\r\noxxxooooooxooox\r\noxooooooooxooox\n\nSample Output 5\n\n5", "platform": "atcoder", "question_id": "abc311_b", "contest_id": "abc311", "contest_date": "2023-07-22T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\noxo\\noxo\\noxo\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\noox\\noxo\\nxoo\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1 7\\nooooooo\\n\", \"output\": \"7\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 15\\noxooooooooooooo\\noxooxooooooooox\\noxoooooooooooox\\noxxxooooooxooox\\noxooooooooxooox\\n\", \"output\": \"5\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are N people numbered 1 to N.\r\nYou are given their schedule for the following D days. The schedule for person i is represented by a string S_i of length D. If the j-th character of S_i is o, person i is free on the j-th day; if it is x, they are occupied that day.\nFrom these D days, consider choosing some consecutive days when all the people are free.\r\nHow many days can be chosen at most? If no day can be chosen, report 0.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN D\r\nS_1\r\nS_2\r\n\\vdots\r\nS_N\n\nOutput\n\nPrint the maximum number of days that can be chosen, or 0 if no day can be chosen.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- 1 \\leq D \\leq 100\n- N and D are integers.\n- S_i is a string of length D consisting of o and x.\n\nSample Input 1\n\n3 5\r\nxooox\r\noooxx\r\noooxo\n\nSample Output 1\n\n2\r\n\nAll the people are free on the second and third days, so we can choose them.\r\nChoosing these two days will maximize the number of days among all possible choices.\n\nSample Input 2\n\n3 3\r\noxo\r\noxo\r\noxo\n\nSample Output 2\n\n1\r\n\nNote that the chosen days must be consecutive. (All the people are free on the first and third days, so we can choose either of them, but not both.)\n\nSample Input 3\n\n3 3\r\noox\r\noxo\r\nxoo\n\nSample Output 3\n\n0\r\n\nPrint 0 if no day can be chosen.\n\nSample Input 4\n\n1 7\r\nooooooo\n\nSample Output 4\n\n7\n\nSample Input 5\n\n5 15\r\noxooooooooooooo\r\noxooxooooooooox\r\noxoooooooooooox\r\noxxxooooooxooox\r\noxooooooooxooox\n\nSample Output 5\n\n5\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "maximum-beauty-of-an-array-after-applying-operation", "question_content": "You are given a 0-indexed array nums and a non-negative integer k.\nIn one operation, you can do the following:\n\nChoose an index i that hasn't been chosen before from the range [0, nums.length - 1].\nReplace nums[i] with any integer from the range [nums[i] - k, nums[i] + k].\n\nThe beauty of the array is the length of the longest subsequence consisting of equal elements.\nReturn the maximum possible beauty of the array nums after applying the operation any number of times.\nNote that you can apply the operation to each index only once.\nA subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the order of the remaining elements.\n \nExample 1:\n\nInput: nums = [4,6,1,2], k = 2\nOutput: 3\nExplanation: In this example, we apply the following operations:\n- Choose index 1, replace it with 4 (from range [4,8]), nums = [4,4,1,2].\n- Choose index 3, replace it with 4 (from range [0,4]), nums = [4,4,1,4].\nAfter the applied operations, the beauty of the array nums is 3 (subsequence consisting of indices 0, 1, and 3).\nIt can be proven that 3 is the maximum possible length we can achieve.\n\nExample 2:\n\nInput: nums = [1,1,1,1], k = 10\nOutput: 4\nExplanation: In this example we don't have to apply any operations.\nThe beauty of the array nums is 4 (whole array).\n\n \nConstraints:\n\n1 <= nums.length <= 10^5\n0 <= nums[i], k <= 10^5", "platform": "leetcode", "question_id": "2891", "contest_id": "weekly-contest-354", "contest_date": "2023-07-16T00:00:00", "starter_code": "class Solution:\n    def maximumBeauty(self, nums: List[int], k: int) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[4, 6, 1, 2]\\n2\", \"output\": \"3\", \"testtype\": \"functional\"}, {\"input\": \"[1, 1, 1, 1]\\n10\", \"output\": \"4\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"maximumBeauty\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a 0-indexed array nums and a non-negative integer k.\nIn one operation, you can do the following:\n\nChoose an index i that hasn't been chosen before from the range [0, nums.length - 1].\nReplace nums[i] with any integer from the range [nums[i] - k, nums[i] + k].\n\nThe beauty of the array is the length of the longest subsequence consisting of equal elements.\nReturn the maximum possible beauty of the array nums after applying the operation any number of times.\nNote that you can apply the operation to each index only once.\nA subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the order of the remaining elements.\n \nExample 1:\n\nInput: nums = [4,6,1,2], k = 2\nOutput: 3\nExplanation: In this example, we apply the following operations:\n- Choose index 1, replace it with 4 (from range [4,8]), nums = [4,4,1,2].\n- Choose index 3, replace it with 4 (from range [0,4]), nums = [4,4,1,4].\nAfter the applied operations, the beauty of the array nums is 3 (subsequence consisting of indices 0, 1, and 3).\nIt can be proven that 3 is the maximum possible length we can achieve.\n\nExample 2:\n\nInput: nums = [1,1,1,1], k = 10\nOutput: 4\nExplanation: In this example we don't have to apply any operations.\nThe beauty of the array nums is 4 (whole array).\n\n \nConstraints:\n\n1 <= nums.length <= 10^5\n0 <= nums[i], k <= 10^5\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def maximumBeauty(self, nums: List[int], k: int) -> int:\n        \n```\n\n"}
{"question_title": "minimum-length-of-anagram-concatenation", "question_content": "You are given a string s, which is known to be a concatenation of anagrams of some string t.\nReturn the minimum possible length of the string t.\nAn anagram is formed by rearranging the letters of a string. For example, \"aab\", \"aba\", and, \"baa\" are anagrams of \"aab\".\n \nExample 1:\n\nInput: s = \"abba\"\nOutput: 2\nExplanation:\nOne possible string t could be \"ba\".\n\nExample 2:\n\nInput: s = \"cdef\"\nOutput: 4\nExplanation:\nOne possible string t could be \"cdef\", notice that t can be equal to s.\n\n \nConstraints:\n\n1 <= s.length <= 10^5\ns consist only of lowercase English letters.", "platform": "leetcode", "question_id": "3395", "contest_id": "weekly-contest-396", "contest_date": "2024-05-04T00:00:00", "starter_code": "class Solution:\n    def minAnagramLength(self, s: str) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"\\\"abba\\\"\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"\\\"cdef\\\"\", \"output\": \"4\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"minAnagramLength\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string s, which is known to be a concatenation of anagrams of some string t.\nReturn the minimum possible length of the string t.\nAn anagram is formed by rearranging the letters of a string. For example, \"aab\", \"aba\", and, \"baa\" are anagrams of \"aab\".\n \nExample 1:\n\nInput: s = \"abba\"\nOutput: 2\nExplanation:\nOne possible string t could be \"ba\".\n\nExample 2:\n\nInput: s = \"cdef\"\nOutput: 4\nExplanation:\nOne possible string t could be \"cdef\", notice that t can be equal to s.\n\n \nConstraints:\n\n1 <= s.length <= 10^5\ns consist only of lowercase English letters.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def minAnagramLength(self, s: str) -> int:\n        \n```\n\n"}
{"question_title": "find-maximum-removals-from-source-string", "question_content": "You are given a string source of size n, a string pattern that is a subsequence of source, and a sorted integer array targetIndices that contains distinct numbers in the range [0, n - 1].\nWe define an operation as removing a character at an index idx from source such that:\n\nidx is an element of targetIndices.\npattern remains a subsequence of source after removing the character.\n\nPerforming an operation does not change the indices of the other characters in source. For example, if you remove 'c' from \"acb\", the character at index 2 would still be 'b'.\nReturn the maximum number of operations that can be performed.\n \nExample 1:\n\nInput: source = \"abbaa\", pattern = \"aba\", targetIndices = [0,1,2]\nOutput: 1\nExplanation:\nWe can't remove source[0] but we can do either of these two operations:\n\nRemove source[1], so that source becomes \"a_baa\".\nRemove source[2], so that source becomes \"ab_aa\".\n\n\nExample 2:\n\nInput: source = \"bcda\", pattern = \"d\", targetIndices = [0,3]\nOutput: 2\nExplanation:\nWe can remove source[0] and source[3] in two operations.\n\nExample 3:\n\nInput: source = \"dda\", pattern = \"dda\", targetIndices = [0,1,2]\nOutput: 0\nExplanation:\nWe can't remove any character from source.\n\nExample 4:\n\nInput: source = \"yeyeykyded\", pattern = \"yeyyd\", targetIndices = [0,2,3,4]\nOutput: 2\nExplanation:\nWe can remove source[2] and source[3] in two operations.\n\n \nConstraints:\n\n1 <= n == source.length <= 3 * 10^3\n1 <= pattern.length <= n\n1 <= targetIndices.length <= n\ntargetIndices is sorted in ascending order.\nThe input is generated such that targetIndices contains distinct elements in the range [0, n - 1].\nsource and pattern consist only of lowercase English letters.\nThe input is generated such that pattern appears as a subsequence in source.", "platform": "leetcode", "question_id": "3487", "contest_id": "biweekly-contest-141", "contest_date": "2024-10-12T07:30:00", "starter_code": "class Solution:\n    def maxRemovals(self, source: str, pattern: str, targetIndices: List[int]) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"\\\"abbaa\\\"\\n\\\"aba\\\"\\n[0, 1, 2]\", \"output\": \"1\", \"testtype\": \"functional\"}, {\"input\": \"\\\"bcda\\\"\\n\\\"d\\\"\\n[0, 3]\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"\\\"dda\\\"\\n\\\"dda\\\"\\n[0, 1, 2]\", \"output\": \"0\", \"testtype\": \"functional\"}, {\"input\": \"\\\"yeyeykyded\\\"\\n\\\"yeyyd\\\"\\n[0, 2, 3, 4]\", \"output\": \"2\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"maxRemovals\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string source of size n, a string pattern that is a subsequence of source, and a sorted integer array targetIndices that contains distinct numbers in the range [0, n - 1].\nWe define an operation as removing a character at an index idx from source such that:\n\nidx is an element of targetIndices.\npattern remains a subsequence of source after removing the character.\n\nPerforming an operation does not change the indices of the other characters in source. For example, if you remove 'c' from \"acb\", the character at index 2 would still be 'b'.\nReturn the maximum number of operations that can be performed.\n \nExample 1:\n\nInput: source = \"abbaa\", pattern = \"aba\", targetIndices = [0,1,2]\nOutput: 1\nExplanation:\nWe can't remove source[0] but we can do either of these two operations:\n\nRemove source[1], so that source becomes \"a_baa\".\nRemove source[2], so that source becomes \"ab_aa\".\n\n\nExample 2:\n\nInput: source = \"bcda\", pattern = \"d\", targetIndices = [0,3]\nOutput: 2\nExplanation:\nWe can remove source[0] and source[3] in two operations.\n\nExample 3:\n\nInput: source = \"dda\", pattern = \"dda\", targetIndices = [0,1,2]\nOutput: 0\nExplanation:\nWe can't remove any character from source.\n\nExample 4:\n\nInput: source = \"yeyeykyded\", pattern = \"yeyyd\", targetIndices = [0,2,3,4]\nOutput: 2\nExplanation:\nWe can remove source[2] and source[3] in two operations.\n\n \nConstraints:\n\n1 <= n == source.length <= 3 * 10^3\n1 <= pattern.length <= n\n1 <= targetIndices.length <= n\ntargetIndices is sorted in ascending order.\nThe input is generated such that targetIndices contains distinct elements in the range [0, n - 1].\nsource and pattern consist only of lowercase English letters.\nThe input is generated such that pattern appears as a subsequence in source.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def maxRemovals(self, source: str, pattern: str, targetIndices: List[int]) -> int:\n        \n```\n\n"}
{"question_title": "Full Moon", "question_content": "Takahashi likes full moons.\nLet today be day 1. The first day on or after today on which he can see a full moon is day M. After that, he can see a full moon every P days, that is, on day M+P, day M+2P, and so on.\nFind the number of days between day 1 and day N, inclusive, on which he can see a full moon.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M P\n\nOutput\n\nPrint the answer as an integer.\n\nConstraints\n\n\n- 1\\leq N\\leq 2\\times 10^5\n- 1\\leq M \\leq P \\leq 2\\times 10^5\n- All input values are integers.\n\nSample Input 1\n\n13 3 5\n\nSample Output 1\n\n3\n\nHe can see a full moon on day 3, 8, 13, 18, and so on.\nFrom day 1 to 13, he can see a full moon on three days: day 3, 8, and 13.\n\nSample Input 2\n\n5 6 6\n\nSample Output 2\n\n0\n\nThere may be no days he can see a full moon.\n\nSample Input 3\n\n200000 314 318\n\nSample Output 3\n\n628", "platform": "atcoder", "question_id": "abc318_a", "contest_id": "abc318", "contest_date": "2023-09-02T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"13 3 5\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 6 6\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"200000 314 318\\n\", \"output\": \"628\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTakahashi likes full moons.\nLet today be day 1. The first day on or after today on which he can see a full moon is day M. After that, he can see a full moon every P days, that is, on day M+P, day M+2P, and so on.\nFind the number of days between day 1 and day N, inclusive, on which he can see a full moon.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M P\n\nOutput\n\nPrint the answer as an integer.\n\nConstraints\n\n\n- 1\\leq N\\leq 2\\times 10^5\n- 1\\leq M \\leq P \\leq 2\\times 10^5\n- All input values are integers.\n\nSample Input 1\n\n13 3 5\n\nSample Output 1\n\n3\n\nHe can see a full moon on day 3, 8, 13, 18, and so on.\nFrom day 1 to 13, he can see a full moon on three days: day 3, 8, and 13.\n\nSample Input 2\n\n5 6 6\n\nSample Output 2\n\n0\n\nThere may be no days he can see a full moon.\n\nSample Input 3\n\n200000 314 318\n\nSample Output 3\n\n628\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "The Middle Day", "question_content": "In the calendar of AtCoderLand, a year consists of M months: month 1, month 2, \\dots, month M. The i-th month consists of D_i days: day 1, day 2, \\dots, day D_i.\r\nFurthermore, the number of days in a year is odd, that is, D_1+D_2+\\dots+D_M is odd.\r\nFind what day of what month is the middle day of the year.\r\nIn other words, let day 1 of month 1 be the first day, and find a and b such that the ((D_1+D_2+\\dots+D_M+1)/2)-th day is day b of month a.\n\nInput\n\nThe input is given from Standard Input in the following format:\nM\r\nD_1 D_2 \\dots D_M\n\nOutput\n\nLet the answer be day b of month a, and print it in the following format:\na b\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le M \\le 100\n- 1 \\le D_i \\le 100\n- D_1 + D_2 + \\dots + D_M is odd.\n\nSample Input 1\n\n12\r\n31 28 31 30 31 30 31 31 30 31 30 31\n\nSample Output 1\n\n7 2\r\n\nIn this input, a year consists of 31+28+31+30+31+30+31+31+30+31+30+31=365 days.\r\nLet us find the middle day, which is the ((365+1)/2 = 183)-th day.\n\n- Months 1,2,3,4,5,6 contain a total of 181 days.\n- Day 1 of month 7 is the 182-th day.\n- Day 2 of month 7 is the 183-th day.\n\nThus, the answer is day 2 of month 7.\n\nSample Input 2\n\n1\r\n1\n\nSample Output 2\n\n1 1\n\nSample Input 3\n\n6\r\n3 1 4 1 5 9\n\nSample Output 3\n\n5 3", "platform": "atcoder", "question_id": "abc315_b", "contest_id": "abc315", "contest_date": "2023-08-19T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"output\": \"7 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1\\n1\\n\", \"output\": \"1 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6\\n3 1 4 1 5 9\\n\", \"output\": \"5 3\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nIn the calendar of AtCoderLand, a year consists of M months: month 1, month 2, \\dots, month M. The i-th month consists of D_i days: day 1, day 2, \\dots, day D_i.\r\nFurthermore, the number of days in a year is odd, that is, D_1+D_2+\\dots+D_M is odd.\r\nFind what day of what month is the middle day of the year.\r\nIn other words, let day 1 of month 1 be the first day, and find a and b such that the ((D_1+D_2+\\dots+D_M+1)/2)-th day is day b of month a.\n\nInput\n\nThe input is given from Standard Input in the following format:\nM\r\nD_1 D_2 \\dots D_M\n\nOutput\n\nLet the answer be day b of month a, and print it in the following format:\na b\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le M \\le 100\n- 1 \\le D_i \\le 100\n- D_1 + D_2 + \\dots + D_M is odd.\n\nSample Input 1\n\n12\r\n31 28 31 30 31 30 31 31 30 31 30 31\n\nSample Output 1\n\n7 2\r\n\nIn this input, a year consists of 31+28+31+30+31+30+31+31+30+31+30+31=365 days.\r\nLet us find the middle day, which is the ((365+1)/2 = 183)-th day.\n\n- Months 1,2,3,4,5,6 contain a total of 181 days.\n- Day 1 of month 7 is the 182-th day.\n- Day 2 of month 7 is the 183-th day.\n\nThus, the answer is day 2 of month 7.\n\nSample Input 2\n\n1\r\n1\n\nSample Output 2\n\n1 1\n\nSample Input 3\n\n6\r\n3 1 4 1 5 9\n\nSample Output 3\n\n5 3\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Snuke's Kyoto Trip", "question_content": "You are given integers W,H,L,R,D,U.\nA town of Kyoto is on the two-dimensional plane.\nIn the town, there is exactly one block at each lattice point (x,y) that satisfies all of the following conditions. There are no blocks at any other points.\n\n- 0\\leq x\\leq W\n- 0\\leq y\\leq H\n- x<L or R<x or y<D or U<y\n\nSnuke traveled through the town as follows.\n\n- First, he chooses one block and stands there.\n- Then, he performs the following operation any number of times (possibly zero):\n- Move one unit in the positive direction of the x-axis or the positive direction of the y-axis. However, the point after moving must also have a block.\n\n\n\nPrint the number, modulo 998244353, of possible paths that Snuke could have taken.\n\nInput\n\nThe input is given from Standard Input in the following format:\nW H L R D U\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 0\\leq L\\leq R\\leq W\\leq 10^6\n- 0\\leq D\\leq U\\leq H\\leq 10^6\n- There is at least one block.\n- All input values are integers.\n\nSample Input 1\n\n4 3 1 2 2 3\n\nSample Output 1\n\n192\r\n\nThe following are examples of possible paths. Here, a path is represented by listing the lattice points visited in order.\n\n- (3,0)\n- (0,0)\\rightarrow (1,0)\\rightarrow (2,0)\\rightarrow (2,1)\\rightarrow (3,1)\\rightarrow (3,2)\\rightarrow (4,2)\\rightarrow (4,3)\n- (0,1)\\rightarrow (0,2)\n\nThere are 192 possible paths.\n\nSample Input 2\n\n10 12 4 6 8 11\n\nSample Output 2\n\n4519189\n\nSample Input 3\n\n192 25 0 2 0 9\n\nSample Output 3\n\n675935675\r\n\nDo not forget to print the number of paths modulo 998244353.", "platform": "atcoder", "question_id": "arc192_e", "contest_id": "arc192", "contest_date": "2025-02-09T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"4 3 1 2 2 3\", \"output\": \"192\", \"testtype\": \"stdin\"}, {\"input\": \"10 12 4 6 8 11\", \"output\": \"4519189\", \"testtype\": \"stdin\"}, {\"input\": \"192 25 0 2 0 9\", \"output\": \"675935675\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given integers W,H,L,R,D,U.\nA town of Kyoto is on the two-dimensional plane.\nIn the town, there is exactly one block at each lattice point (x,y) that satisfies all of the following conditions. There are no blocks at any other points.\n\n- 0\\leq x\\leq W\n- 0\\leq y\\leq H\n- x<L or R<x or y<D or U<y\n\nSnuke traveled through the town as follows.\n\n- First, he chooses one block and stands there.\n- Then, he performs the following operation any number of times (possibly zero):\n- Move one unit in the positive direction of the x-axis or the positive direction of the y-axis. However, the point after moving must also have a block.\n\n\n\nPrint the number, modulo 998244353, of possible paths that Snuke could have taken.\n\nInput\n\nThe input is given from Standard Input in the following format:\nW H L R D U\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 0\\leq L\\leq R\\leq W\\leq 10^6\n- 0\\leq D\\leq U\\leq H\\leq 10^6\n- There is at least one block.\n- All input values are integers.\n\nSample Input 1\n\n4 3 1 2 2 3\n\nSample Output 1\n\n192\r\n\nThe following are examples of possible paths. Here, a path is represented by listing the lattice points visited in order.\n\n- (3,0)\n- (0,0)\\rightarrow (1,0)\\rightarrow (2,0)\\rightarrow (2,1)\\rightarrow (3,1)\\rightarrow (3,2)\\rightarrow (4,2)\\rightarrow (4,3)\n- (0,1)\\rightarrow (0,2)\n\nThere are 192 possible paths.\n\nSample Input 2\n\n10 12 4 6 8 11\n\nSample Output 2\n\n4519189\n\nSample Input 3\n\n192 25 0 2 0 9\n\nSample Output 3\n\n675935675\r\n\nDo not forget to print the number of paths modulo 998244353.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Strictly Increasing?", "question_content": "You are given a positive integer N and a sequence of positive integers A = (A_1,A_2,\\dots,A_N) of length N.\nDetermine whether A is strictly increasing, that is, whether A_i < A_{i+1} holds for every integer i with 1 \\leq i < N.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\dots A_N\n\nOutput\n\nIf A is strictly increasing, print Yes; otherwise, print No.\nThe judge is case-insensitive. For example, if the correct answer is Yes, any of yes, YES, and yEs will be accepted.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- 1 \\leq A_i \\leq 1000 \\ (1 \\leq i \\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3\n1 2 5\n\nSample Output 1\n\nYes\n\nA_1 < A_2 and A_2 < A_3, so A is strictly increasing.\n\nSample Input 2\n\n3\n3 9 5\n\nSample Output 2\n\nNo\n\nA_1 < A_2, but A_2 < A_3 does not hold, so A is not strictly increasing.\n\nSample Input 3\n\n10\n1 1 2 3 5 8 13 21 34 55\n\nSample Output 3\n\nNo\n\nA_1 < A_2 does not hold, so A is not strictly increasing.", "platform": "atcoder", "question_id": "abc395_a", "contest_id": "abc395", "contest_date": "2025-03-01T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"3\\n1 2 5\", \"output\": \"Yes\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n3 9 5\", \"output\": \"No\", \"testtype\": \"stdin\"}, {\"input\": \"10\\n1 1 2 3 5 8 13 21 34 55\", \"output\": \"No\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a positive integer N and a sequence of positive integers A = (A_1,A_2,\\dots,A_N) of length N.\nDetermine whether A is strictly increasing, that is, whether A_i < A_{i+1} holds for every integer i with 1 \\leq i < N.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\dots A_N\n\nOutput\n\nIf A is strictly increasing, print Yes; otherwise, print No.\nThe judge is case-insensitive. For example, if the correct answer is Yes, any of yes, YES, and yEs will be accepted.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- 1 \\leq A_i \\leq 1000 \\ (1 \\leq i \\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3\n1 2 5\n\nSample Output 1\n\nYes\n\nA_1 < A_2 and A_2 < A_3, so A is strictly increasing.\n\nSample Input 2\n\n3\n3 9 5\n\nSample Output 2\n\nNo\n\nA_1 < A_2, but A_2 < A_3 does not hold, so A is not strictly increasing.\n\nSample Input 3\n\n10\n1 1 2 3 5 8 13 21 34 55\n\nSample Output 3\n\nNo\n\nA_1 < A_2 does not hold, so A is not strictly increasing.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "minimum-string-length-after-removing-substrings", "question_content": "You are given a string s consisting only of uppercase English letters.\nYou can apply some operations to this string where, in one operation, you can remove any occurrence of one of the substrings \"AB\" or \"CD\" from s.\nReturn the minimum possible length of the resulting string that you can obtain.\nNote that the string concatenates after removing the substring and could produce new \"AB\" or \"CD\" substrings.\n \nExample 1:\n\nInput: s = \"ABFCACDB\"\nOutput: 2\nExplanation: We can do the following operations:\n- Remove the substring \"ABFCACDB\", so s = \"FCACDB\".\n- Remove the substring \"FCACDB\", so s = \"FCAB\".\n- Remove the substring \"FCAB\", so s = \"FC\".\nSo the resulting length of the string is 2.\nIt can be shown that it is the minimum length that we can obtain.\nExample 2:\n\nInput: s = \"ACBBD\"\nOutput: 5\nExplanation: We cannot do any operations on the string so the length remains the same.\n\n \nConstraints:\n\n1 <= s.length <= 100\ns consists only of uppercase English letters.", "platform": "leetcode", "question_id": "2800", "contest_id": "weekly-contest-346", "contest_date": "2023-05-21T00:00:00", "starter_code": "class Solution:\n    def minLength(self, s: str) -> int:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"\\\"ABFCACDB\\\"\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"\\\"ACBBD\\\"\", \"output\": \"5\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"minLength\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string s consisting only of uppercase English letters.\nYou can apply some operations to this string where, in one operation, you can remove any occurrence of one of the substrings \"AB\" or \"CD\" from s.\nReturn the minimum possible length of the resulting string that you can obtain.\nNote that the string concatenates after removing the substring and could produce new \"AB\" or \"CD\" substrings.\n \nExample 1:\n\nInput: s = \"ABFCACDB\"\nOutput: 2\nExplanation: We can do the following operations:\n- Remove the substring \"ABFCACDB\", so s = \"FCACDB\".\n- Remove the substring \"FCACDB\", so s = \"FCAB\".\n- Remove the substring \"FCAB\", so s = \"FC\".\nSo the resulting length of the string is 2.\nIt can be shown that it is the minimum length that we can obtain.\nExample 2:\n\nInput: s = \"ACBBD\"\nOutput: 5\nExplanation: We cannot do any operations on the string so the length remains the same.\n\n \nConstraints:\n\n1 <= s.length <= 100\ns consists only of uppercase English letters.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def minLength(self, s: str) -> int:\n        \n```\n\n"}
{"question_title": "Ax + By < C", "question_content": "You are given three length-N sequences of positive integers: A=(A_1,A_2,\\ldots,A_N), B=(B_1,B_2,\\ldots,B_N), and C=(C_1,C_2,\\ldots,C_N).  \nFind the number of pairs of positive integers (x, y) that satisfy the following condition:  \n\n- A_i \\times x + B_i \\times y < C_i for all 1 \\leq i \\leq N.  \n\nIt can be proved that the number of such pairs of positive integers satisfying the condition is finite.  \nYou are given T test cases, each of which should be solved.\n\nInput\n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i refers to the i-th test case.\nT  \r\n\\mathrm{case}_1  \r\n\\mathrm{case}_2  \r\n\\vdots  \r\n\\mathrm{case}_T  \r\n\nEach test case is given in the following format:\nN  \r\nA_1 B_1 C_1  \r\nA_2 B_2 C_2  \r\n\\vdots  \r\nA_N B_N C_N\n\nOutput\n\nPrint T lines. The i-th line (1 \\leq i \\leq T) should contain the answer for \\mathrm{case}_i.\n\nConstraints\n\n\n- 1 \\leq T \\leq 2 \\times 10^5 \n- 1 \\leq N \\leq 2 \\times 10^5 \n- 1 \\leq A_i, B_i, C_i \\leq 10^9 \n- The sum of N over all test cases is at most 2 \\times 10^5.  \n- All input values are integers.\n\nSample Input 1\n\n2\r\n2\r\n1 1 4\r\n1 2 5\r\n1\r\n1 1 2\n\nSample Output 1\n\n2\r\n0\r\n\nIn the first test case, there are two valid pairs of integers: (x, y) = (1, 1), (2,1). Thus, the first line should contain 2.  \nIn the second test case, there are no valid pairs of integers. Thus, the second line should contain 0.\n\nSample Input 2\n\n3\r\n7\r\n138 16011 918976\r\n5478 7748 499926\r\n5234 17727 748589\r\n1157 10511 643136\r\n31200 3005 721285\r\n28839 14469 798851\r\n1933 5378 864127\r\n9\r\n17775 1665 386430\r\n37001 863 922418\r\n9756 4182 746671\r\n12379 9106 807578\r\n3984 4049 640539\r\n25333 9869 780810\r\n20372 7000 688738\r\n16107 11974 827227\r\n10779 10531 770510\r\n5\r\n4916 14132 460944\r\n11856 45422 610561\r\n56014 18216 825793\r\n10363 6220 945356\r\n37418 33866 851593\n\nSample Output 2\n\n660\r\n995\r\n140", "platform": "atcoder", "question_id": "abc372_g", "contest_id": "abc372", "contest_date": "2024-09-21T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"2\\n2\\n1 1 4\\n1 2 5\\n1\\n1 1 2\\n\", \"output\": \"2\\n0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n7\\n138 16011 918976\\n5478 7748 499926\\n5234 17727 748589\\n1157 10511 643136\\n31200 3005 721285\\n28839 14469 798851\\n1933 5378 864127\\n9\\n17775 1665 386430\\n37001 863 922418\\n9756 4182 746671\\n12379 9106 807578\\n3984 4049 640539\\n25333 9869 780810\\n20372 7000 688738\\n16107 11974 827227\\n10779 10531 770510\\n5\\n4916 14132 460944\\n11856 45422 610561\\n56014 18216 825793\\n10363 6220 945356\\n37418 33866 851593\\n\", \"output\": \"660\\n995\\n140\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given three length-N sequences of positive integers: A=(A_1,A_2,\\ldots,A_N), B=(B_1,B_2,\\ldots,B_N), and C=(C_1,C_2,\\ldots,C_N).  \nFind the number of pairs of positive integers (x, y) that satisfy the following condition:  \n\n- A_i \\times x + B_i \\times y < C_i for all 1 \\leq i \\leq N.  \n\nIt can be proved that the number of such pairs of positive integers satisfying the condition is finite.  \nYou are given T test cases, each of which should be solved.\n\nInput\n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i refers to the i-th test case.\nT  \r\n\\mathrm{case}_1  \r\n\\mathrm{case}_2  \r\n\\vdots  \r\n\\mathrm{case}_T  \r\n\nEach test case is given in the following format:\nN  \r\nA_1 B_1 C_1  \r\nA_2 B_2 C_2  \r\n\\vdots  \r\nA_N B_N C_N\n\nOutput\n\nPrint T lines. The i-th line (1 \\leq i \\leq T) should contain the answer for \\mathrm{case}_i.\n\nConstraints\n\n\n- 1 \\leq T \\leq 2 \\times 10^5 \n- 1 \\leq N \\leq 2 \\times 10^5 \n- 1 \\leq A_i, B_i, C_i \\leq 10^9 \n- The sum of N over all test cases is at most 2 \\times 10^5.  \n- All input values are integers.\n\nSample Input 1\n\n2\r\n2\r\n1 1 4\r\n1 2 5\r\n1\r\n1 1 2\n\nSample Output 1\n\n2\r\n0\r\n\nIn the first test case, there are two valid pairs of integers: (x, y) = (1, 1), (2,1). Thus, the first line should contain 2.  \nIn the second test case, there are no valid pairs of integers. Thus, the second line should contain 0.\n\nSample Input 2\n\n3\r\n7\r\n138 16011 918976\r\n5478 7748 499926\r\n5234 17727 748589\r\n1157 10511 643136\r\n31200 3005 721285\r\n28839 14469 798851\r\n1933 5378 864127\r\n9\r\n17775 1665 386430\r\n37001 863 922418\r\n9756 4182 746671\r\n12379 9106 807578\r\n3984 4049 640539\r\n25333 9869 780810\r\n20372 7000 688738\r\n16107 11974 827227\r\n10779 10531 770510\r\n5\r\n4916 14132 460944\r\n11856 45422 610561\r\n56014 18216 825793\r\n10363 6220 945356\r\n37418 33866 851593\n\nSample Output 2\n\n660\r\n995\r\n140\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "check-balanced-string", "question_content": "You are given a string num consisting of only digits. A string of digits is called balanced if the sum of the digits at even indices is equal to the sum of digits at odd indices.\nReturn true if num is balanced, otherwise return false.\n \nExample 1:\n\nInput: num = \"1234\"\nOutput: false\nExplanation:\n\nThe sum of digits at even indices is 1 + 3 == 4, and the sum of digits at odd indices is 2 + 4 == 6.\nSince 4 is not equal to 6, num is not balanced.\n\n\nExample 2:\n\nInput: num = \"24123\"\nOutput: true\nExplanation:\n\nThe sum of digits at even indices is 2 + 1 + 3 == 6, and the sum of digits at odd indices is 4 + 2 == 6.\nSince both are equal the num is balanced.\n\n\n \nConstraints:\n\n2 <= num.length <= 100\nnum consists of digits only", "platform": "leetcode", "question_id": "3636", "contest_id": "weekly-contest-422", "contest_date": "2024-11-02T19:30:00", "starter_code": "class Solution:\n    def isBalanced(self, num: str) -> bool:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"\\\"1234\\\"\", \"output\": \"false\", \"testtype\": \"functional\"}, {\"input\": \"\\\"24123\\\"\", \"output\": \"true\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"isBalanced\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string num consisting of only digits. A string of digits is called balanced if the sum of the digits at even indices is equal to the sum of digits at odd indices.\nReturn true if num is balanced, otherwise return false.\n \nExample 1:\n\nInput: num = \"1234\"\nOutput: false\nExplanation:\n\nThe sum of digits at even indices is 1 + 3 == 4, and the sum of digits at odd indices is 2 + 4 == 6.\nSince 4 is not equal to 6, num is not balanced.\n\n\nExample 2:\n\nInput: num = \"24123\"\nOutput: true\nExplanation:\n\nThe sum of digits at even indices is 2 + 1 + 3 == 6, and the sum of digits at odd indices is 4 + 2 == 6.\nSince both are equal the num is balanced.\n\n\n \nConstraints:\n\n2 <= num.length <= 100\nnum consists of digits only\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def isBalanced(self, num: str) -> bool:\n        \n```\n\n"}
{"question_title": "Takahashi Gets Lost", "question_content": "There is a grid with H rows and W columns.\nEach cell of the grid is land or sea, which is represented by H strings S_1, S_2, \\ldots, S_H of length W. Let (i, j) denote the cell at the i-th row from the top and j-th column from the left, and (i, j) is land if the j-th character of S_i is ., and (i, j) is sea if the character is #.\nThe constraints guarantee that all cells on the perimeter of the grid (that is, the cells (i, j) that satisfy at least one of i = 1, i = H, j = 1, j = W) are sea.\nTakahashi's spaceship has crash-landed on a cell in the grid. Afterward, he moved N times on the grid following the instructions represented by a string T of length N consisting of L, R, U, and D. For i = 1, 2, \\ldots, N, the i-th character of T describes the i-th move as follows:\n\n- L indicates a move of one cell to the left. That is, if he is at (i, j) before the move, he will be at (i, j-1) after the move.\n- R indicates a move of one cell to the right. That is, if he is at (i, j) before the move, he will be at (i, j+1) after the move.\n- U indicates a move of one cell up. That is, if he is at (i, j) before the move, he will be at (i-1, j) after the move.\n- D indicates a move of one cell down. That is, if he is at (i, j) before the move, he will be at (i+1, j) after the move.\n\nIt is known that all cells along his path (including the cell where he crash-landed and the cell he is currently on) are not sea. Print the number of cells that could be his current position.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W N\nT\nS_1\nS_2\n\\vdots\nS_H\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- H, W, and N are integers.\n- 3 \\leq H, W \\leq 500\n- 1 \\leq N \\leq 500\n- T is a string of length N consisting of L, R, U, and D.\n- S_i is a string of length W consisting of . and #.\n- There is at least one cell that could be Takahashi's current position.\n- All cells on the perimeter of the grid are sea.\n\nSample Input 1\n\n6 7 5\nLULDR\n#######\n#...#.#\n##...##\n#.#...#\n#...#.#\n#######\n\nSample Output 1\n\n2\n\nThe following two cases are possible, so there are two cells that could be Takahashi's current position: (3, 4) and (4, 5).\n\n- He crash-landed on cell (3, 5) and moved (3, 5) \\rightarrow (3, 4) \\rightarrow (2, 4) \\rightarrow (2, 3) \\rightarrow (3, 3) \\rightarrow (3, 4).\n- He crash-landed on cell (4, 6) and moved (4, 6) \\rightarrow (4, 5) \\rightarrow (3, 5) \\rightarrow (3, 4) \\rightarrow (4, 4) \\rightarrow (4, 5).\n\nSample Input 2\n\n13 16 9\nULURDLURD\n################\n##..##.#..####.#\n###.#..#.....#.#\n#..##..#####.###\n#...#..#......##\n###.##.#..#....#\n##.#####....##.#\n###.###.#.#.#..#\n######.....##..#\n#...#.#.######.#\n##..###..#..#.##\n#...#.#.#...#..#\n################\n\nSample Output 2\n\n6", "platform": "atcoder", "question_id": "abc341_c", "contest_id": "abc341", "contest_date": "2024-02-17T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"13 16 9\\nULURDLURD\\n################\\n##..##.#..####.#\\n###.#..#.....#.#\\n#..##..#####.###\\n#...#..#......##\\n###.##.#..#....#\\n##.#####....##.#\\n###.###.#.#.#..#\\n######.....##..#\\n#...#.#.######.#\\n##..###..#..#.##\\n#...#.#.#...#..#\\n################\\n\", \"output\": \"6\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a grid with H rows and W columns.\nEach cell of the grid is land or sea, which is represented by H strings S_1, S_2, \\ldots, S_H of length W. Let (i, j) denote the cell at the i-th row from the top and j-th column from the left, and (i, j) is land if the j-th character of S_i is ., and (i, j) is sea if the character is #.\nThe constraints guarantee that all cells on the perimeter of the grid (that is, the cells (i, j) that satisfy at least one of i = 1, i = H, j = 1, j = W) are sea.\nTakahashi's spaceship has crash-landed on a cell in the grid. Afterward, he moved N times on the grid following the instructions represented by a string T of length N consisting of L, R, U, and D. For i = 1, 2, \\ldots, N, the i-th character of T describes the i-th move as follows:\n\n- L indicates a move of one cell to the left. That is, if he is at (i, j) before the move, he will be at (i, j-1) after the move.\n- R indicates a move of one cell to the right. That is, if he is at (i, j) before the move, he will be at (i, j+1) after the move.\n- U indicates a move of one cell up. That is, if he is at (i, j) before the move, he will be at (i-1, j) after the move.\n- D indicates a move of one cell down. That is, if he is at (i, j) before the move, he will be at (i+1, j) after the move.\n\nIt is known that all cells along his path (including the cell where he crash-landed and the cell he is currently on) are not sea. Print the number of cells that could be his current position.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W N\nT\nS_1\nS_2\n\\vdots\nS_H\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- H, W, and N are integers.\n- 3 \\leq H, W \\leq 500\n- 1 \\leq N \\leq 500\n- T is a string of length N consisting of L, R, U, and D.\n- S_i is a string of length W consisting of . and #.\n- There is at least one cell that could be Takahashi's current position.\n- All cells on the perimeter of the grid are sea.\n\nSample Input 1\n\n6 7 5\nLULDR\n#######\n#...#.#\n##...##\n#.#...#\n#...#.#\n#######\n\nSample Output 1\n\n2\n\nThe following two cases are possible, so there are two cells that could be Takahashi's current position: (3, 4) and (4, 5).\n\n- He crash-landed on cell (3, 5) and moved (3, 5) \\rightarrow (3, 4) \\rightarrow (2, 4) \\rightarrow (2, 3) \\rightarrow (3, 3) \\rightarrow (3, 4).\n- He crash-landed on cell (4, 6) and moved (4, 6) \\rightarrow (4, 5) \\rightarrow (3, 5) \\rightarrow (3, 4) \\rightarrow (4, 4) \\rightarrow (4, 5).\n\nSample Input 2\n\n13 16 9\nULURDLURD\n################\n##..##.#..####.#\n###.#..#.....#.#\n#..##..#####.###\n#...#..#......##\n###.##.#..#....#\n##.#####....##.#\n###.###.#.#.#..#\n######.....##..#\n#...#.#.######.#\n##..###..#..#.##\n#...#.#.#...#..#\n################\n\nSample Output 2\n\n6\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Good Tuple Problem", "question_content": "A pair of sequences of length M consisting of positive integers at most N, (S, T) = ((S_1, S_2, \\dots, S_M), (T_1, T_2, \\dots, T_M)), is said to be a good pair of sequences when (S, T) satisfies the following condition.\n\n- There exists a sequence X = (X_1, X_2, \\dots, X_N) of length N consisting of 0 and 1 that satisfies the following condition:\n- X_{S_i} \\neq X_{T_i} for each i=1, 2, \\dots, M.\n\n\n\nYou are given a pair of sequences of length M consisting of positive integers at most N: (A, B) = ((A_1, A_2, \\dots, A_M), (B_1, B_2, \\dots, B_M)). If (A, B) is a good pair of sequences, print Yes; otherwise, print No.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\dots A_M\r\nB_1 B_2 \\dots B_M\n\nOutput\n\nIf (A, B) is a good pair of sequences, print Yes; otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq N, M \\leq 2 \\times 10^5\n- 1 \\leq A_i, B_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n3 2\r\n1 2\r\n2 3\n\nSample Output 1\n\nYes\r\n\nIf we set X=(0,1,0), then X is a sequence of length N consisting of 0 and 1 that satisfies X_{A_1} \\neq X_{B_1} and X_{A_2} \\neq X_{B_2}.\r\nThus, (A, B) satisfies the condition of being a good pair of sequences.\n\nSample Input 2\n\n3 3\r\n1 2 3\r\n2 3 1\n\nSample Output 2\n\nNo\r\n\nNo sequence X satisfies the condition, so (A, B) is not a good pair of sequences.\n\nSample Input 3\n\n10 1\r\n1\r\n1\n\nSample Output 3\n\nNo\n\nSample Input 4\n\n7 8\r\n1 6 2 7 5 4 2 2\r\n3 2 7 2 1 2 3 3\n\nSample Output 4\n\nYes", "platform": "atcoder", "question_id": "abc327_d", "contest_id": "abc327", "contest_date": "2023-11-04T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"3 2\\n1 2\\n2 3\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\n1 2 3\\n2 3 1\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 1\\n1\\n1\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}, {\"input\": \"7 8\\n1 6 2 7 5 4 2 2\\n3 2 7 2 1 2 3 3\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nA pair of sequences of length M consisting of positive integers at most N, (S, T) = ((S_1, S_2, \\dots, S_M), (T_1, T_2, \\dots, T_M)), is said to be a good pair of sequences when (S, T) satisfies the following condition.\n\n- There exists a sequence X = (X_1, X_2, \\dots, X_N) of length N consisting of 0 and 1 that satisfies the following condition:\n- X_{S_i} \\neq X_{T_i} for each i=1, 2, \\dots, M.\n\n\n\nYou are given a pair of sequences of length M consisting of positive integers at most N: (A, B) = ((A_1, A_2, \\dots, A_M), (B_1, B_2, \\dots, B_M)). If (A, B) is a good pair of sequences, print Yes; otherwise, print No.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\dots A_M\r\nB_1 B_2 \\dots B_M\n\nOutput\n\nIf (A, B) is a good pair of sequences, print Yes; otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq N, M \\leq 2 \\times 10^5\n- 1 \\leq A_i, B_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n3 2\r\n1 2\r\n2 3\n\nSample Output 1\n\nYes\r\n\nIf we set X=(0,1,0), then X is a sequence of length N consisting of 0 and 1 that satisfies X_{A_1} \\neq X_{B_1} and X_{A_2} \\neq X_{B_2}.\r\nThus, (A, B) satisfies the condition of being a good pair of sequences.\n\nSample Input 2\n\n3 3\r\n1 2 3\r\n2 3 1\n\nSample Output 2\n\nNo\r\n\nNo sequence X satisfies the condition, so (A, B) is not a good pair of sequences.\n\nSample Input 3\n\n10 1\r\n1\r\n1\n\nSample Output 3\n\nNo\n\nSample Input 4\n\n7 8\r\n1 6 2 7 5 4 2 2\r\n3 2 7 2 1 2 3 3\n\nSample Output 4\n\nYes\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "The bottom of the ninth", "question_content": "Team Takahashi and Team Aoki are playing a baseball game, with Team Takahashi batting first.\nCurrently, the game has finished through the top of the ninth inning, and the bottom of the ninth is about to begin.\nTeam Takahashi scored A_i runs in the top of the i-th inning (1\\leq i\\leq 9), and Team Aoki scored B_j runs in the bottom of the j-th inning (1\\leq j\\leq 8).\nAt the end of the top of the ninth, Team Takahashi's score is not less than Team Aoki's score.\nDetermine the minimum number of runs Team Aoki needs to score in the bottom of the ninth to win the game.\nHere, if the game is tied at the end of the bottom of the ninth, it results in a draw. Therefore, for Team Aoki to win, they must score strictly more runs than Team Takahashi by the end of the bottom of the ninth.\nTeam Takahashi's score at any point is the total runs scored in the tops of the innings up to that point, and Team Aoki's score is the total runs scored in the bottoms of the innings.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA_1 A_2 A_3 A_4 A_5 A_6 A_7 A_8 A_9\nB_1 B_2 B_3 B_4 B_5 B_6 B_7 B_8\n\nOutput\n\nPrint the minimum number of runs Team Aoki needs to score in the bottom of the ninth inning to win.\n\nConstraints\n\n\n- 0\\leq A_i, B_j\\leq 99\n- A_1 + A_2 + A_3 + A_4 + A_5 + A_6 + A_7 + A_8 + A_9 \\geq B_1 + B_2 + B_3 + B_4 + B_5 + B_6 + B_7 + B_8\n- All input values are integers.\n\nSample Input 1\n\n0 1 0 1 2 2 0 0 1\n1 1 0 0 0 0 1 0\n\nSample Output 1\n\n5\n\nAt the end of the top of the ninth inning, Team Takahashi has scored seven runs, and Team Aoki has scored three runs.\nTherefore, if Team Aoki scores five runs in the bottom of the ninth, the scores will be 7-8, allowing them to win.\nNote that scoring four runs would result in a draw and not a victory.\n\nSample Input 2\n\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n\nSample Output 2\n\n1", "platform": "atcoder", "question_id": "abc351_a", "contest_id": "abc351", "contest_date": "2024-04-27T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"0 1 0 1 2 2 0 0 1\\n1 1 0 0 0 0 1 0\\n\", \"output\": \"5\\n\", \"testtype\": \"stdin\"}, {\"input\": \"0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTeam Takahashi and Team Aoki are playing a baseball game, with Team Takahashi batting first.\nCurrently, the game has finished through the top of the ninth inning, and the bottom of the ninth is about to begin.\nTeam Takahashi scored A_i runs in the top of the i-th inning (1\\leq i\\leq 9), and Team Aoki scored B_j runs in the bottom of the j-th inning (1\\leq j\\leq 8).\nAt the end of the top of the ninth, Team Takahashi's score is not less than Team Aoki's score.\nDetermine the minimum number of runs Team Aoki needs to score in the bottom of the ninth to win the game.\nHere, if the game is tied at the end of the bottom of the ninth, it results in a draw. Therefore, for Team Aoki to win, they must score strictly more runs than Team Takahashi by the end of the bottom of the ninth.\nTeam Takahashi's score at any point is the total runs scored in the tops of the innings up to that point, and Team Aoki's score is the total runs scored in the bottoms of the innings.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA_1 A_2 A_3 A_4 A_5 A_6 A_7 A_8 A_9\nB_1 B_2 B_3 B_4 B_5 B_6 B_7 B_8\n\nOutput\n\nPrint the minimum number of runs Team Aoki needs to score in the bottom of the ninth inning to win.\n\nConstraints\n\n\n- 0\\leq A_i, B_j\\leq 99\n- A_1 + A_2 + A_3 + A_4 + A_5 + A_6 + A_7 + A_8 + A_9 \\geq B_1 + B_2 + B_3 + B_4 + B_5 + B_6 + B_7 + B_8\n- All input values are integers.\n\nSample Input 1\n\n0 1 0 1 2 2 0 0 1\n1 1 0 0 0 0 1 0\n\nSample Output 1\n\n5\n\nAt the end of the top of the ninth inning, Team Takahashi has scored seven runs, and Team Aoki has scored three runs.\nTherefore, if Team Aoki scores five runs in the bottom of the ninth, the scores will be 7-8, allowing them to win.\nNote that scoring four runs would result in a draw and not a victory.\n\nSample Input 2\n\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n\nSample Output 2\n\n1\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Bonfire", "question_content": "There is an infinitely large two-dimensional grid, with a campfire at coordinate (0,0).\nAt time t=0, smoke exists only at cell (0,0).\nYou are given a length-N string S consisting of N, W, S, E. At times t=1,2,\\dots,N, the following happen in order:\n\n- Wind blows, and all the smoke present at that time moves as follows:\n- If the t-th character of S is N, smoke in cell (r,c) moves to cell (r-1,c).\n- If it is W, smoke in cell (r,c) moves to cell (r,c-1).\n- If it is S, smoke in cell (r,c) moves to cell (r+1,c).\n- If it is E, smoke in cell (r,c) moves to cell (r,c+1).\n\n\n- If there is no smoke in cell (0,0), new smoke is generated at cell (0,0).\n\nTakahashi is standing at cell (R,C).\nFor each integer 1 \\le t \\le N, determine if smoke exists at cell (R,C) at time t+0.5, and print the response according to the required format.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN R C\nS\n\nOutput\n\nPrint an N-character string consisting of 0 and 1.\nThe t-th character (1 \\le t \\le N) should be:\n\n- 1 if smoke exists at cell (R,C) at time t+0.5, and\n- 0 otherwise.\n\nConstraints\n\n\n- N is an integer between 1 and 200000, inclusive.\n- S is a length N string consisting of N, W, S, E.\n- R and C are integers between -N and N, inclusive.\n- (R,C) \\neq (0,0)\n\nSample Input 1\n\n6 -2 1\nNNEEWS\n\nSample Output 1\n\n001010\n\nAt times 1.5,2.5,4.5,6.5, there is no smoke at cell (-2,1). At times 3.5,5.5, there is smoke at cell (-2,1).\nHence, output 001010.\nIn the figures below, taking cell (0,0) with the campfire as a reference, cell (r,c) is drawn:\n\n- -r cells up if r < 0,\n- r cells down if r \\ge 0,\n- -c cells left if c < 0,\n- c cells right if c \\ge 0.\n\nThe grid at time 0.5 looks like:\n\nThe grid at time 1.5 looks like:\n\nThe grid at time 2.5 looks like:\n\nThe grid at time 3.5 looks like:\n\nThe grid at time 4.5 looks like:\n\nThe grid at time 5.5 looks like:\n\nThe grid at time 6.5 looks like:\n\nSample Input 2\n\n10 1 2\nNEESESWEES\n\nSample Output 2\n\n0001101011\n\nSample Input 3\n\n20 -1 -2\nWWNNWSWEWNSWWENSNWWN\n\nSample Output 3\n\n00100111111000101111", "platform": "atcoder", "question_id": "abc398_d", "contest_id": "abc398", "contest_date": "2025-03-22T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"6 -2 1\\nNNEEWS\", \"output\": \"001010\", \"testtype\": \"stdin\"}, {\"input\": \"10 1 2\\nNEESESWEES\", \"output\": \"0001101011\", \"testtype\": \"stdin\"}, {\"input\": \"20 -1 -2\\nWWNNWSWEWNSWWENSNWWN\", \"output\": \"00100111111000101111\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is an infinitely large two-dimensional grid, with a campfire at coordinate (0,0).\nAt time t=0, smoke exists only at cell (0,0).\nYou are given a length-N string S consisting of N, W, S, E. At times t=1,2,\\dots,N, the following happen in order:\n\n- Wind blows, and all the smoke present at that time moves as follows:\n- If the t-th character of S is N, smoke in cell (r,c) moves to cell (r-1,c).\n- If it is W, smoke in cell (r,c) moves to cell (r,c-1).\n- If it is S, smoke in cell (r,c) moves to cell (r+1,c).\n- If it is E, smoke in cell (r,c) moves to cell (r,c+1).\n\n\n- If there is no smoke in cell (0,0), new smoke is generated at cell (0,0).\n\nTakahashi is standing at cell (R,C).\nFor each integer 1 \\le t \\le N, determine if smoke exists at cell (R,C) at time t+0.5, and print the response according to the required format.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN R C\nS\n\nOutput\n\nPrint an N-character string consisting of 0 and 1.\nThe t-th character (1 \\le t \\le N) should be:\n\n- 1 if smoke exists at cell (R,C) at time t+0.5, and\n- 0 otherwise.\n\nConstraints\n\n\n- N is an integer between 1 and 200000, inclusive.\n- S is a length N string consisting of N, W, S, E.\n- R and C are integers between -N and N, inclusive.\n- (R,C) \\neq (0,0)\n\nSample Input 1\n\n6 -2 1\nNNEEWS\n\nSample Output 1\n\n001010\n\nAt times 1.5,2.5,4.5,6.5, there is no smoke at cell (-2,1). At times 3.5,5.5, there is smoke at cell (-2,1).\nHence, output 001010.\nIn the figures below, taking cell (0,0) with the campfire as a reference, cell (r,c) is drawn:\n\n- -r cells up if r < 0,\n- r cells down if r \\ge 0,\n- -c cells left if c < 0,\n- c cells right if c \\ge 0.\n\nThe grid at time 0.5 looks like:\n\nThe grid at time 1.5 looks like:\n\nThe grid at time 2.5 looks like:\n\nThe grid at time 3.5 looks like:\n\nThe grid at time 4.5 looks like:\n\nThe grid at time 5.5 looks like:\n\nThe grid at time 6.5 looks like:\n\nSample Input 2\n\n10 1 2\nNEESESWEES\n\nSample Output 2\n\n0001101011\n\nSample Input 3\n\n20 -1 -2\nWWNNWSWEWNSWWENSNWWN\n\nSample Output 3\n\n00100111111000101111\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Attack", "question_content": "There is an enemy with stamina A.  Every time you attack the enemy, its stamina reduces by B.\nAt least how many times do you need to attack the enemy to make its stamina 0 or less?\n\nInput\n\nThe input is given from Standard Input in the following format:\nA B\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\le A,B \\le 10^{18}\n- A and B are integers.\n\nSample Input 1\n\n7 3\n\nSample Output 1\n\n3\r\n\nAttacking three times make the enemy's stamina -2.\nAttacking only twice makes the stamina 1, so you need to attack it three times.\n\nSample Input 2\n\n123456789123456789 987654321\n\nSample Output 2\n\n124999999\n\nSample Input 3\n\n999999999999999998 2\n\nSample Output 3\n\n499999999999999999", "platform": "atcoder", "question_id": "abc302_a", "contest_id": "abc302", "contest_date": "2023-05-20T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"7 3\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"123456789123456789 987654321\\n\", \"output\": \"124999999\\n\", \"testtype\": \"stdin\"}, {\"input\": \"999999999999999998 2\\n\", \"output\": \"499999999999999999\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is an enemy with stamina A.  Every time you attack the enemy, its stamina reduces by B.\nAt least how many times do you need to attack the enemy to make its stamina 0 or less?\n\nInput\n\nThe input is given from Standard Input in the following format:\nA B\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\le A,B \\le 10^{18}\n- A and B are integers.\n\nSample Input 1\n\n7 3\n\nSample Output 1\n\n3\r\n\nAttacking three times make the enemy's stamina -2.\nAttacking only twice makes the stamina 1, so you need to attack it three times.\n\nSample Input 2\n\n123456789123456789 987654321\n\nSample Output 2\n\n124999999\n\nSample Input 3\n\n999999999999999998 2\n\nSample Output 3\n\n499999999999999999\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "ab", "question_content": "You are given a string S of length N consisting of lowercase English letters.\r\nIf there are any adjacent occurrences of a and b in S, print Yes; otherwise, print No. (The order of a and b does not matter.)\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS\n\nOutput\n\nIf there are any adjacent occurrences of a and b in S, print Yes; otherwise, print No.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- S is a string of length N consisting of lowercase English letters.\n\nSample Input 1\n\n3\r\nabc\n\nSample Output 1\n\nYes\r\n\nThe string abc has a as the first character and b as the second character, which are adjacent. Thus, print Yes.\n\nSample Input 2\n\n2\r\nba\n\nSample Output 2\n\nYes\r\n\nThe string ba has a as the second character and b as the first character, which are adjacent. (Note that the order of a and b does not matter.)\n\nSample Input 3\n\n7\r\natcoder\n\nSample Output 3\n\nNo", "platform": "atcoder", "question_id": "abc327_a", "contest_id": "abc327", "contest_date": "2023-11-04T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"3\\nabc\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2\\nba\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"7\\natcoder\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string S of length N consisting of lowercase English letters.\r\nIf there are any adjacent occurrences of a and b in S, print Yes; otherwise, print No. (The order of a and b does not matter.)\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS\n\nOutput\n\nIf there are any adjacent occurrences of a and b in S, print Yes; otherwise, print No.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- S is a string of length N consisting of lowercase English letters.\n\nSample Input 1\n\n3\r\nabc\n\nSample Output 1\n\nYes\r\n\nThe string abc has a as the first character and b as the second character, which are adjacent. Thus, print Yes.\n\nSample Input 2\n\n2\r\nba\n\nSample Output 2\n\nYes\r\n\nThe string ba has a as the second character and b as the first character, which are adjacent. (Note that the order of a and b does not matter.)\n\nSample Input 3\n\n7\r\natcoder\n\nSample Output 3\n\nNo\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "find-the-largest-almost-missing-integer", "question_content": "You are given an integer array nums and an integer k.\nAn integer x is almost missing from nums if x appears in exactly one subarray of size k within nums.\nReturn the largest almost missing integer from nums. If no such integer exists, return -1.\nA subarray is a contiguous sequence of elements within an array.\n \nExample 1:\n\nInput: nums = [3,9,2,1,7], k = 3\nOutput: 7\nExplanation:\n\n1 appears in 2 subarrays of size 3: [9, 2, 1] and [2, 1, 7].\n2 appears in 3 subarrays of size 3: [3, 9, 2], [9, 2, 1], [2, 1, 7].\n3 appears in 1 subarray of size 3: [3, 9, 2].\n7 appears in 1 subarray of size 3: [2, 1, 7].\n9 appears in 2 subarrays of size 3: [3, 9, 2], and [9, 2, 1].\n\nWe return 7 since it is the largest integer that appears in exactly one subarray of size k.\n\nExample 2:\n\nInput: nums = [3,9,7,2,1,7], k = 4\nOutput: 3\nExplanation:\n\n1 appears in 2 subarrays of size 4: [9, 7, 2, 1], [7, 2, 1, 7].\n2 appears in 3 subarrays of size 4: [3, 9, 7, 2], [9, 7, 2, 1], [7, 2, 1, 7].\n3 appears in 1 subarray of size 4: [3, 9, 7, 2].\n7 appears in 3 subarrays of size 4: [3, 9, 7, 2], [9, 7, 2, 1], [7, 2, 1, 7].\n9 appears in 2 subarrays of size 4: [3, 9, 7, 2], [9, 7, 2, 1].\n\nWe return 3 since it is the largest and only integer that appears in exactly one subarray of size k.\n\nExample 3:\n\nInput: nums = [0,0], k = 1\nOutput: -1\nExplanation:\nThere is no integer that appears in only one subarray of size 1.\n\n \nConstraints:\n\n1 <= nums.length <= 50\n0 <= nums[i] <= 50\n1 <= k <= nums.length", "platform": "leetcode", "question_id": "3705", "contest_id": "weekly-contest-439", "contest_date": "2025-03-01T18:30:00", "starter_code": "class Solution:\n    def largestInteger(self, nums: List[int], k: int) -> int:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"[3, 9, 2, 1, 7]\\n3\", \"output\": \"7\", \"testtype\": \"functional\"}, {\"input\": \"[3, 9, 7, 2, 1, 7]\\n4\", \"output\": \"3\", \"testtype\": \"functional\"}, {\"input\": \"[0, 0]\\n1\", \"output\": \"-1\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"largestInteger\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an integer array nums and an integer k.\nAn integer x is almost missing from nums if x appears in exactly one subarray of size k within nums.\nReturn the largest almost missing integer from nums. If no such integer exists, return -1.\nA subarray is a contiguous sequence of elements within an array.\n \nExample 1:\n\nInput: nums = [3,9,2,1,7], k = 3\nOutput: 7\nExplanation:\n\n1 appears in 2 subarrays of size 3: [9, 2, 1] and [2, 1, 7].\n2 appears in 3 subarrays of size 3: [3, 9, 2], [9, 2, 1], [2, 1, 7].\n3 appears in 1 subarray of size 3: [3, 9, 2].\n7 appears in 1 subarray of size 3: [2, 1, 7].\n9 appears in 2 subarrays of size 3: [3, 9, 2], and [9, 2, 1].\n\nWe return 7 since it is the largest integer that appears in exactly one subarray of size k.\n\nExample 2:\n\nInput: nums = [3,9,7,2,1,7], k = 4\nOutput: 3\nExplanation:\n\n1 appears in 2 subarrays of size 4: [9, 7, 2, 1], [7, 2, 1, 7].\n2 appears in 3 subarrays of size 4: [3, 9, 7, 2], [9, 7, 2, 1], [7, 2, 1, 7].\n3 appears in 1 subarray of size 4: [3, 9, 7, 2].\n7 appears in 3 subarrays of size 4: [3, 9, 7, 2], [9, 7, 2, 1], [7, 2, 1, 7].\n9 appears in 2 subarrays of size 4: [3, 9, 7, 2], [9, 7, 2, 1].\n\nWe return 3 since it is the largest and only integer that appears in exactly one subarray of size k.\n\nExample 3:\n\nInput: nums = [0,0], k = 1\nOutput: -1\nExplanation:\nThere is no integer that appears in only one subarray of size 1.\n\n \nConstraints:\n\n1 <= nums.length <= 50\n0 <= nums[i] <= 50\n1 <= k <= nums.length\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def largestInteger(self, nums: List[int], k: int) -> int:\n        \n```\n\n"}
{"question_title": "Not Too Hard", "question_content": "There is a programming contest with N problems. For each i = 1, 2, \\ldots, N, the score for the i-th problem is S_i.\nPrint the total score for all problems with a score of X or less.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN X\r\nS_1 S_2 \\ldots S_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- All input values are integers.\n- 4 \\leq N \\leq 8\n- 100 \\leq S_i \\leq 675\n- 100 \\leq X \\leq 675\n\nSample Input 1\n\n6 200\r\n100 675 201 200 199 328\n\nSample Output 1\n\n499\r\n\nThree problems have a score of 200 or less: the first, fourth, and fifth, for a total score of S_1 + S_4 + S_5 = 100 + 200 + 199 = 499.\n\nSample Input 2\n\n8 675\r\n675 675 675 675 675 675 675 675\n\nSample Output 2\n\n5400\n\nSample Input 3\n\n8 674\r\n675 675 675 675 675 675 675 675\n\nSample Output 3\n\n0", "platform": "atcoder", "question_id": "abc328_a", "contest_id": "abc328", "contest_date": "2023-11-11T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"6 200\\n100 675 201 200 199 328\\n\", \"output\": \"499\\n\", \"testtype\": \"stdin\"}, {\"input\": \"8 675\\n675 675 675 675 675 675 675 675\\n\", \"output\": \"5400\\n\", \"testtype\": \"stdin\"}, {\"input\": \"8 674\\n675 675 675 675 675 675 675 675\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a programming contest with N problems. For each i = 1, 2, \\ldots, N, the score for the i-th problem is S_i.\nPrint the total score for all problems with a score of X or less.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN X\r\nS_1 S_2 \\ldots S_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- All input values are integers.\n- 4 \\leq N \\leq 8\n- 100 \\leq S_i \\leq 675\n- 100 \\leq X \\leq 675\n\nSample Input 1\n\n6 200\r\n100 675 201 200 199 328\n\nSample Output 1\n\n499\r\n\nThree problems have a score of 200 or less: the first, fourth, and fifth, for a total score of S_1 + S_4 + S_5 = 100 + 200 + 199 = 499.\n\nSample Input 2\n\n8 675\r\n675 675 675 675 675 675 675 675\n\nSample Output 2\n\n5400\n\nSample Input 3\n\n8 674\r\n675 675 675 675 675 675 675 675\n\nSample Output 3\n\n0\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "C. Raspberries", "question_content": "You are given an array of integers $a_1, a_2, \\ldots, a_n$ and a number $k$ ($2 \\leq k \\leq 5$). In one operation, you can do the following:\n\n\n-  Choose an index $1 \\leq i \\leq n$,\n-  Set $a_i = a_i + 1$.Find the minimum number of operations needed to make the product of all the numbers in the array $a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n$ divisible by $k$.\n\nInput\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) — the number of test cases. Then follows the description of the test cases.\n\nThe first line of each test case contains two integers $n$ and $k$ ($2 \\leq n \\leq 10^5$, $2 \\leq k \\leq 5$) — the size of the array $a$ and the number $k$.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\nOutput\n\nFor each test case, output the minimum number of operations needed to make the product of all the numbers in the array divisible by $k$.Sample Input 1:\n15\n\n2 5\n\n7 3\n\n3 3\n\n7 4 1\n\n5 2\n\n9 7 7 3 9\n\n5 5\n\n5 4 1 2 3\n\n7 4\n\n9 5 1 5 9 5 1\n\n3 4\n\n6 3 6\n\n3 4\n\n6 1 5\n\n3 4\n\n1 5 9\n\n4 4\n\n1 4 1 1\n\n3 4\n\n3 5 3\n\n4 5\n\n8 9 9 3\n\n2 5\n\n1 6\n\n2 5\n\n10 10\n\n4 5\n\n1 6 1 1\n\n2 5\n\n7 7\n\n\n\nSample Output 1:\n\n2\n2\n1\n0\n2\n0\n1\n2\n0\n1\n1\n4\n0\n4\n3\n\n\nNote\n\nIn the first test case, we need to choose the index $i = 2$ twice. After that, the array will be $a = [7, 5]$. The product of all the numbers in the array is $35$.\n\nIn the fourth test case, the product of the numbers in the array is $120$, which is already divisible by $5$, so no operations are needed.\n\nIn the eighth test case, we can perform two operations by choosing $i = 2$ and $i = 3$ in any order. After that, the array will be $a = [1, 6, 10]$. The product of the numbers in the array is $60$.", "platform": "codeforces", "question_id": "1883_C", "contest_id": "1883", "contest_date": "2023-09-22T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"output\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an array of integers $a_1, a_2, \\ldots, a_n$ and a number $k$ ($2 \\leq k \\leq 5$). In one operation, you can do the following:\n\n\n-  Choose an index $1 \\leq i \\leq n$,\n-  Set $a_i = a_i + 1$.Find the minimum number of operations needed to make the product of all the numbers in the array $a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n$ divisible by $k$.\n\nInput\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) — the number of test cases. Then follows the description of the test cases.\n\nThe first line of each test case contains two integers $n$ and $k$ ($2 \\leq n \\leq 10^5$, $2 \\leq k \\leq 5$) — the size of the array $a$ and the number $k$.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\nOutput\n\nFor each test case, output the minimum number of operations needed to make the product of all the numbers in the array divisible by $k$.Sample Input 1:\n15\n\n2 5\n\n7 3\n\n3 3\n\n7 4 1\n\n5 2\n\n9 7 7 3 9\n\n5 5\n\n5 4 1 2 3\n\n7 4\n\n9 5 1 5 9 5 1\n\n3 4\n\n6 3 6\n\n3 4\n\n6 1 5\n\n3 4\n\n1 5 9\n\n4 4\n\n1 4 1 1\n\n3 4\n\n3 5 3\n\n4 5\n\n8 9 9 3\n\n2 5\n\n1 6\n\n2 5\n\n10 10\n\n4 5\n\n1 6 1 1\n\n2 5\n\n7 7\n\n\n\nSample Output 1:\n\n2\n2\n1\n0\n2\n0\n1\n2\n0\n1\n1\n4\n0\n4\n3\n\n\nNote\n\nIn the first test case, we need to choose the index $i = 2$ twice. After that, the array will be $a = [7, 5]$. The product of all the numbers in the array is $35$.\n\nIn the fourth test case, the product of the numbers in the array is $120$, which is already divisible by $5$, so no operations are needed.\n\nIn the eighth test case, we can perform two operations by choosing $i = 2$ and $i = 3$ in any order. After that, the array will be $a = [1, 6, 10]$. The product of the numbers in the array is $60$.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "find-the-encrypted-string", "question_content": "You are given a string s and an integer k. Encrypt the string using the following algorithm:\n\nFor each character c in s, replace c with the k^th character after c in the string (in a cyclic manner).\n\nReturn the encrypted string.\n \nExample 1:\n\nInput: s = \"dart\", k = 3\nOutput: \"tdar\"\nExplanation:\n\nFor i = 0, the 3^rd character after 'd' is 't'.\nFor i = 1, the 3^rd character after 'a' is 'd'.\nFor i = 2, the 3^rd character after 'r' is 'a'.\nFor i = 3, the 3^rd character after 't' is 'r'.\n\n\nExample 2:\n\nInput: s = \"aaa\", k = 1\nOutput: \"aaa\"\nExplanation:\nAs all the characters are the same, the encrypted string will also be the same.\n\n \nConstraints:\n\n1 <= s.length <= 100\n1 <= k <= 10^4\ns consists only of lowercase English letters.", "platform": "leetcode", "question_id": "3468", "contest_id": "weekly-contest-405", "contest_date": "2024-07-06T00:00:00", "starter_code": "class Solution:\n    def getEncryptedString(self, s: str, k: int) -> str:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"\\\"dart\\\"\\n3\", \"output\": \"\\\"tdar\\\"\", \"testtype\": \"functional\"}, {\"input\": \"\\\"aaa\\\"\\n1\", \"output\": \"\\\"aaa\\\"\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"getEncryptedString\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string s and an integer k. Encrypt the string using the following algorithm:\n\nFor each character c in s, replace c with the k^th character after c in the string (in a cyclic manner).\n\nReturn the encrypted string.\n \nExample 1:\n\nInput: s = \"dart\", k = 3\nOutput: \"tdar\"\nExplanation:\n\nFor i = 0, the 3^rd character after 'd' is 't'.\nFor i = 1, the 3^rd character after 'a' is 'd'.\nFor i = 2, the 3^rd character after 'r' is 'a'.\nFor i = 3, the 3^rd character after 't' is 'r'.\n\n\nExample 2:\n\nInput: s = \"aaa\", k = 1\nOutput: \"aaa\"\nExplanation:\nAs all the characters are the same, the encrypted string will also be the same.\n\n \nConstraints:\n\n1 <= s.length <= 100\n1 <= k <= 10^4\ns consists only of lowercase English letters.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def getEncryptedString(self, s: str, k: int) -> str:\n        \n```\n\n"}
{"question_title": "Loong and Takahashi", "question_content": "There is a grid with N rows and N columns, where N is an odd number at most 45.\nLet (i,j) denote the cell at the i-th row from the top and j-th column from the left.\nIn this grid, you will place Takahashi and a dragon consisting of N^2-1 parts numbered 1 to N^2-1 in such a way that satisfies the following conditions:\n\n- Takahashi must be placed at the center of the grid, that is, in cell (\\frac{N+1}{2},\\frac{N+1}{2}).\n- Except for the cell where Takahashi is, exactly one dragon part must be placed in each cell.\n- For every integer x satisfying 2 \\leq x \\leq N^2-1, the dragon part x must be placed in a cell adjacent by an edge to the cell containing part x-1.\n- Cells (i,j) and (k,l) are said to be adjacent by an edge if and only if |i-k|+|j-l|=1.\n\n\n\nPrint one way to arrange the parts to satisfy the conditions. It is guaranteed that there is at least one arrangement that satisfies the conditions.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint N lines.\r\nThe i-th line should contain X_{i,1},\\ldots,X_{i,N} separated by spaces, where X_{i,j} is T when placing Takahashi in cell (i,j) and x when placing part x there.\n\nConstraints\n\n\n- 3 \\leq N \\leq 45\n- N is odd.\n\nSample Input 1\n\n5\n\nSample Output 1\n\n1 2 3 4 5\r\n16 17 18 19 6\r\n15 24 T 20 7\r\n14 23 22 21 8\r\n13 12 11 10 9\r\n\nThe following output also satisfies all the conditions and is correct.\n9 10 11 14 15\r\n8 7 12 13 16\r\n5 6 T 18 17\r\n4 3 24 19 20 \r\n1 2 23 22 21\r\n\nOn the other hand, the following outputs are incorrect for the reasons given.\nTakahashi is not at the center.\n1 2 3 4 5\r\n10 9 8 7 6\r\n11 12 13 14 15\r\n20 19 18 17 16\r\n21 22 23 24 T\r\n\nThe cells containing parts 23 and 24 are not adjacent by an edge.\n1 2 3 4 5\r\n10 9 8 7 6\r\n11 12 24 22 23\r\n14 13 T 21 20\r\n15 16 17 18 19", "platform": "atcoder", "question_id": "abc335_d", "contest_id": "abc335", "contest_date": "2024-01-06T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"5\\n\", \"output\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is a grid with N rows and N columns, where N is an odd number at most 45.\nLet (i,j) denote the cell at the i-th row from the top and j-th column from the left.\nIn this grid, you will place Takahashi and a dragon consisting of N^2-1 parts numbered 1 to N^2-1 in such a way that satisfies the following conditions:\n\n- Takahashi must be placed at the center of the grid, that is, in cell (\\frac{N+1}{2},\\frac{N+1}{2}).\n- Except for the cell where Takahashi is, exactly one dragon part must be placed in each cell.\n- For every integer x satisfying 2 \\leq x \\leq N^2-1, the dragon part x must be placed in a cell adjacent by an edge to the cell containing part x-1.\n- Cells (i,j) and (k,l) are said to be adjacent by an edge if and only if |i-k|+|j-l|=1.\n\n\n\nPrint one way to arrange the parts to satisfy the conditions. It is guaranteed that there is at least one arrangement that satisfies the conditions.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint N lines.\r\nThe i-th line should contain X_{i,1},\\ldots,X_{i,N} separated by spaces, where X_{i,j} is T when placing Takahashi in cell (i,j) and x when placing part x there.\n\nConstraints\n\n\n- 3 \\leq N \\leq 45\n- N is odd.\n\nSample Input 1\n\n5\n\nSample Output 1\n\n1 2 3 4 5\r\n16 17 18 19 6\r\n15 24 T 20 7\r\n14 23 22 21 8\r\n13 12 11 10 9\r\n\nThe following output also satisfies all the conditions and is correct.\n9 10 11 14 15\r\n8 7 12 13 16\r\n5 6 T 18 17\r\n4 3 24 19 20 \r\n1 2 23 22 21\r\n\nOn the other hand, the following outputs are incorrect for the reasons given.\nTakahashi is not at the center.\n1 2 3 4 5\r\n10 9 8 7 6\r\n11 12 13 14 15\r\n20 19 18 17 16\r\n21 22 23 24 T\r\n\nThe cells containing parts 23 and 24 are not adjacent by an edge.\n1 2 3 4 5\r\n10 9 8 7 6\r\n11 12 24 22 23\r\n14 13 T 21 20\r\n15 16 17 18 19\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "count-the-number-of-winning-sequences", "question_content": "Alice and Bob are playing a fantasy battle game consisting of n rounds where they summon one of three magical creatures each round: a Fire Dragon, a Water Serpent, or an Earth Golem. In each round, players simultaneously summon their creature and are awarded points as follows:\n\nIf one player summons a Fire Dragon and the other summons an Earth Golem, the player who summoned the Fire Dragon is awarded a point.\nIf one player summons a Water Serpent and the other summons a Fire Dragon, the player who summoned the Water Serpent is awarded a point.\nIf one player summons an Earth Golem and the other summons a Water Serpent, the player who summoned the Earth Golem is awarded a point.\nIf both players summon the same creature, no player is awarded a point.\n\nYou are given a string s consisting of n characters 'F', 'W', and 'E', representing the sequence of creatures Alice will summon in each round:\n\nIf s[i] == 'F', Alice summons a Fire Dragon.\nIf s[i] == 'W', Alice summons a Water Serpent.\nIf s[i] == 'E', Alice summons an Earth Golem.\n\nBob’s sequence of moves is unknown, but it is guaranteed that Bob will never summon the same creature in two consecutive rounds. Bob beats Alice if the total number of points awarded to Bob after n rounds is strictly greater than the points awarded to Alice.\nReturn the number of distinct sequences Bob can use to beat Alice.\nSince the answer may be very large, return it modulo 10^9 + 7.\n \nExample 1:\n\nInput: s = \"FFF\"\nOutput: 3\nExplanation:\nBob can beat Alice by making one of the following sequences of moves: \"WFW\", \"FWF\", or \"WEW\". Note that other winning sequences like \"WWE\" or \"EWW\" are invalid since Bob cannot make the same move twice in a row.\n\nExample 2:\n\nInput: s = \"FWEFW\"\nOutput: 18\nExplanation:\nBob can beat Alice by making one of the following sequences of moves: \"FWFWF\", \"FWFWE\", \"FWEFE\", \"FWEWE\", \"FEFWF\", \"FEFWE\", \"FEFEW\", \"FEWFE\", \"WFEFE\", \"WFEWE\", \"WEFWF\", \"WEFWE\", \"WEFEF\", \"WEFEW\", \"WEWFW\", \"WEWFE\", \"EWFWE\", or \"EWEWE\".\n\n \nConstraints:\n\n1 <= s.length <= 1000\ns[i] is one of 'F', 'W', or 'E'.", "platform": "leetcode", "question_id": "3588", "contest_id": "weekly-contest-419", "contest_date": "2024-10-12T19:30:00", "starter_code": "class Solution:\n    def countWinningSequences(self, s: str) -> int:\n        ", "difficulty": "hard", "public_test_cases": "[{\"input\": \"\\\"FFF\\\"\", \"output\": \"3\", \"testtype\": \"functional\"}, {\"input\": \"\\\"FWEFW\\\"\", \"output\": \"18\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"countWinningSequences\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nAlice and Bob are playing a fantasy battle game consisting of n rounds where they summon one of three magical creatures each round: a Fire Dragon, a Water Serpent, or an Earth Golem. In each round, players simultaneously summon their creature and are awarded points as follows:\n\nIf one player summons a Fire Dragon and the other summons an Earth Golem, the player who summoned the Fire Dragon is awarded a point.\nIf one player summons a Water Serpent and the other summons a Fire Dragon, the player who summoned the Water Serpent is awarded a point.\nIf one player summons an Earth Golem and the other summons a Water Serpent, the player who summoned the Earth Golem is awarded a point.\nIf both players summon the same creature, no player is awarded a point.\n\nYou are given a string s consisting of n characters 'F', 'W', and 'E', representing the sequence of creatures Alice will summon in each round:\n\nIf s[i] == 'F', Alice summons a Fire Dragon.\nIf s[i] == 'W', Alice summons a Water Serpent.\nIf s[i] == 'E', Alice summons an Earth Golem.\n\nBob’s sequence of moves is unknown, but it is guaranteed that Bob will never summon the same creature in two consecutive rounds. Bob beats Alice if the total number of points awarded to Bob after n rounds is strictly greater than the points awarded to Alice.\nReturn the number of distinct sequences Bob can use to beat Alice.\nSince the answer may be very large, return it modulo 10^9 + 7.\n \nExample 1:\n\nInput: s = \"FFF\"\nOutput: 3\nExplanation:\nBob can beat Alice by making one of the following sequences of moves: \"WFW\", \"FWF\", or \"WEW\". Note that other winning sequences like \"WWE\" or \"EWW\" are invalid since Bob cannot make the same move twice in a row.\n\nExample 2:\n\nInput: s = \"FWEFW\"\nOutput: 18\nExplanation:\nBob can beat Alice by making one of the following sequences of moves: \"FWFWF\", \"FWFWE\", \"FWEFE\", \"FWEWE\", \"FEFWF\", \"FEFWE\", \"FEFEW\", \"FEWFE\", \"WFEFE\", \"WFEWE\", \"WEFWF\", \"WEFWE\", \"WEFEF\", \"WEFEW\", \"WEWFW\", \"WEWFE\", \"EWFWE\", or \"EWEWE\".\n\n \nConstraints:\n\n1 <= s.length <= 1000\ns[i] is one of 'F', 'W', or 'E'.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def countWinningSequences(self, s: str) -> int:\n        \n```\n\n"}
{"question_title": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "question_content": "You are given two strings word1 and word2.\nA string x is called valid if x can be rearranged to have word2 as a prefix.\nReturn the total number of valid substrings of word1.\n \nExample 1:\n\nInput: word1 = \"bcca\", word2 = \"abc\"\nOutput: 1\nExplanation:\nThe only valid substring is \"bcca\" which can be rearranged to \"abcc\" having \"abc\" as a prefix.\n\nExample 2:\n\nInput: word1 = \"abcabc\", word2 = \"abc\"\nOutput: 10\nExplanation:\nAll the substrings except substrings of size 1 and size 2 are valid.\n\nExample 3:\n\nInput: word1 = \"abcabc\", word2 = \"aaabc\"\nOutput: 0\n\n \nConstraints:\n\n1 <= word1.length <= 10^5\n1 <= word2.length <= 10^4\nword1 and word2 consist only of lowercase English letters.", "platform": "leetcode", "question_id": "3573", "contest_id": "weekly-contest-416", "contest_date": "2024-09-21T19:30:00", "starter_code": "class Solution:\n    def validSubstringCount(self, word1: str, word2: str) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"\\\"bcca\\\"\\n\\\"abc\\\"\", \"output\": \"1\", \"testtype\": \"functional\"}, {\"input\": \"\\\"abcabc\\\"\\n\\\"abc\\\"\", \"output\": \"10\", \"testtype\": \"functional\"}, {\"input\": \"\\\"abcabc\\\"\\n\\\"aaabc\\\"\", \"output\": \"0\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"validSubstringCount\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given two strings word1 and word2.\nA string x is called valid if x can be rearranged to have word2 as a prefix.\nReturn the total number of valid substrings of word1.\n \nExample 1:\n\nInput: word1 = \"bcca\", word2 = \"abc\"\nOutput: 1\nExplanation:\nThe only valid substring is \"bcca\" which can be rearranged to \"abcc\" having \"abc\" as a prefix.\n\nExample 2:\n\nInput: word1 = \"abcabc\", word2 = \"abc\"\nOutput: 10\nExplanation:\nAll the substrings except substrings of size 1 and size 2 are valid.\n\nExample 3:\n\nInput: word1 = \"abcabc\", word2 = \"aaabc\"\nOutput: 0\n\n \nConstraints:\n\n1 <= word1.length <= 10^5\n1 <= word2.length <= 10^4\nword1 and word2 consist only of lowercase English letters.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def validSubstringCount(self, word1: str, word2: str) -> int:\n        \n```\n\n"}
{"question_title": "closest-equal-element-queries", "question_content": "You are given a circular array nums and an array queries.\nFor each query i, you have to find the following:\n\nThe minimum distance between the element at index queries[i] and any other index j in the circular array, where nums[j] == nums[queries[i]]. If no such index exists, the answer for that query should be -1.\n\nReturn an array answer of the same size as queries, where answer[i] represents the result for query i.\n \nExample 1:\n\nInput: nums = [1,3,1,4,1,3,2], queries = [0,3,5]\nOutput: [2,-1,3]\nExplanation:\n\nQuery 0: The element at queries[0] = 0 is nums[0] = 1. The nearest index with the same value is 2, and the distance between them is 2.\nQuery 1: The element at queries[1] = 3 is nums[3] = 4. No other index contains 4, so the result is -1.\nQuery 2: The element at queries[2] = 5 is nums[5] = 3. The nearest index with the same value is 1, and the distance between them is 3 (following the circular path: 5 -> 6 -> 0 -> 1).\n\n\nExample 2:\n\nInput: nums = [1,2,3,4], queries = [0,1,2,3]\nOutput: [-1,-1,-1,-1]\nExplanation:\nEach value in nums is unique, so no index shares the same value as the queried element. This results in -1 for all queries.\n\n \nConstraints:\n\n1 <= queries.length <= nums.length <= 10^5\n1 <= nums[i] <= 10^6\n0 <= queries[i] < nums.length", "platform": "leetcode", "question_id": "3750", "contest_id": "weekly-contest-441", "contest_date": "2025-03-15T19:30:00", "starter_code": "class Solution:\n    def solveQueries(self, nums: List[int], queries: List[int]) -> List[int]:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"[1, 3, 1, 4, 1, 3, 2]\\n[0, 3, 5]\", \"output\": \"[2, -1, 3]\", \"testtype\": \"functional\"}, {\"input\": \"[1, 2, 3, 4]\\n[0, 1, 2, 3]\", \"output\": \"[-1, -1, -1, -1]\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"solveQueries\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a circular array nums and an array queries.\nFor each query i, you have to find the following:\n\nThe minimum distance between the element at index queries[i] and any other index j in the circular array, where nums[j] == nums[queries[i]]. If no such index exists, the answer for that query should be -1.\n\nReturn an array answer of the same size as queries, where answer[i] represents the result for query i.\n \nExample 1:\n\nInput: nums = [1,3,1,4,1,3,2], queries = [0,3,5]\nOutput: [2,-1,3]\nExplanation:\n\nQuery 0: The element at queries[0] = 0 is nums[0] = 1. The nearest index with the same value is 2, and the distance between them is 2.\nQuery 1: The element at queries[1] = 3 is nums[3] = 4. No other index contains 4, so the result is -1.\nQuery 2: The element at queries[2] = 5 is nums[5] = 3. The nearest index with the same value is 1, and the distance between them is 3 (following the circular path: 5 -> 6 -> 0 -> 1).\n\n\nExample 2:\n\nInput: nums = [1,2,3,4], queries = [0,1,2,3]\nOutput: [-1,-1,-1,-1]\nExplanation:\nEach value in nums is unique, so no index shares the same value as the queried element. This results in -1 for all queries.\n\n \nConstraints:\n\n1 <= queries.length <= nums.length <= 10^5\n1 <= nums[i] <= 10^6\n0 <= queries[i] < nums.length\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def solveQueries(self, nums: List[int], queries: List[int]) -> List[int]:\n        \n```\n\n"}
{"question_title": "1122 Substring", "question_content": "A sequence X = (X_1, X_2, \\ldots) of positive integers (possibly empty) is called a 1122 sequence if and only if it satisfies all of the following three conditions: (The definition of a 1122 sequence is the same as in Problem F.)\n\n- \\lvert X \\rvert is even. Here, \\lvert X \\rvert denotes the length of X.\n- For each integer i satisfying 1\\leq i\\leq \\frac{|X|}{2}, X_{2i-1} and X_{2i} are equal.\n- Each positive integer appears in X either not at all or exactly twice. That is, every positive integer contained in X appears exactly twice in X.\n\nGiven a sequence A = (A_1, A_2, \\ldots, A_N) of length N consisting of positive integers, print the maximum length of a (contiguous) subarray of A that is a 1122 sequence.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\ldots A_N\n\nOutput\n\nPrint the maximum length of a (contiguous) subarray of A that is a 1122 sequence.\n\nConstraints\n\n\n- 1\\leq N \\leq 2 \\times 10^5\n- 1\\leq A_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n8\n2 3 1 1 2 2 1 1\n\nSample Output 1\n\n4\n\nFor example, taking the subarray from the 3-rd to 6-th elements of A, we get (1, 1, 2, 2), which is a 1122 sequence of length 4.\nThere is no longer (contiguous) subarray that satisfies the conditions for a 1122 sequence, so the answer is 4.\n\nSample Input 2\n\n3\n1 2 2\n\nSample Output 2\n\n2\n\nSample Input 3\n\n1\n1\n\nSample Output 3\n\n0\n\nNote that a sequence of length 0 also satisfies the conditions for a 1122 sequence.", "platform": "atcoder", "question_id": "abc381_d", "contest_id": "abc381", "contest_date": "2024-11-22T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"8\\n2 3 1 1 2 2 1 1\", \"output\": \"4\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n1 2 2\", \"output\": \"2\", \"testtype\": \"stdin\"}, {\"input\": \"1\\n1\", \"output\": \"0\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nA sequence X = (X_1, X_2, \\ldots) of positive integers (possibly empty) is called a 1122 sequence if and only if it satisfies all of the following three conditions: (The definition of a 1122 sequence is the same as in Problem F.)\n\n- \\lvert X \\rvert is even. Here, \\lvert X \\rvert denotes the length of X.\n- For each integer i satisfying 1\\leq i\\leq \\frac{|X|}{2}, X_{2i-1} and X_{2i} are equal.\n- Each positive integer appears in X either not at all or exactly twice. That is, every positive integer contained in X appears exactly twice in X.\n\nGiven a sequence A = (A_1, A_2, \\ldots, A_N) of length N consisting of positive integers, print the maximum length of a (contiguous) subarray of A that is a 1122 sequence.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\ldots A_N\n\nOutput\n\nPrint the maximum length of a (contiguous) subarray of A that is a 1122 sequence.\n\nConstraints\n\n\n- 1\\leq N \\leq 2 \\times 10^5\n- 1\\leq A_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n8\n2 3 1 1 2 2 1 1\n\nSample Output 1\n\n4\n\nFor example, taking the subarray from the 3-rd to 6-th elements of A, we get (1, 1, 2, 2), which is a 1122 sequence of length 4.\nThere is no longer (contiguous) subarray that satisfies the conditions for a 1122 sequence, so the answer is 4.\n\nSample Input 2\n\n3\n1 2 2\n\nSample Output 2\n\n2\n\nSample Input 3\n\n1\n1\n\nSample Output 3\n\n0\n\nNote that a sequence of length 0 also satisfies the conditions for a 1122 sequence.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Chmax Rush!", "question_content": "There is an integer sequence S of length N. Initially, all elements of S are 0.\nYou are also given two integer sequences of length Q: P=(P_1,P_2,\\dots,P_Q) and V=(V_1,V_2,\\dots,V_Q).\nSnuke wants to perform Q operations on the sequence S in order. The i-th operation is as follows:\n\n- Perform one of the following:\n- Replace each of the elements S_1, S_2, \\dots, S_{P_i} with V_i. However, before this operation, if there is an element among S_1, S_2, \\dots, S_{P_i} that is strictly greater than V_i, Snuke will start crying.\n- Replace each of the elements S_{P_i}, S_{P_i+1}, \\dots, S_N with V_i. However, before this operation, if there is an element among S_{P_i}, S_{P_i+1}, \\dots, S_N that is strictly greater than V_i, Snuke will start crying.\n\n\n\nFind the number of sequences of Q operations where Snuke can perform all operations without crying, modulo 998244353.\nTwo sequences of operations are distinguished if and only if there is 1 \\leq i \\leq Q such that the choice for the i-th operation is different.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN Q\nP_1 V_1\nP_2 V_2\n\\vdots\nP_Q V_Q\n\nOutput\n\nPrint the answer as an integer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 5000\n- 1 \\leq Q \\leq 5000\n- 1 \\leq P_i \\leq N\n- 1 \\leq V_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n8 3\n1 8\n8 1\n2 1\n\nSample Output 1\n\n1\n\nSnuke can perform the three operations without crying as follows:\n\n- Replace S_1 with 8.\n- Replace S_8 with 1.\n- Replace S_2, S_3, \\dots, S_8 with 1.\n\nNo other sequences of operations satisfy the conditions, so the answer is 1. For example, if he replaces S_1, S_2, \\dots, S_8 with 8 in the first operation, he will cry in the second operation regardless of the choice.\n\nSample Input 2\n\n8 3\n8 1\n1 8\n1 2\n\nSample Output 2\n\n0\n\nNo matter how he performs the first two operations, he will cry in the third operation.\n\nSample Input 3\n\n241 82\n190 3207371\n229 3639088\n61 4428925\n84 17258698\n34 42692503\n207 59753183\n180 67198566\n78 99285033\n60 102449991\n234 122146510\n111 126959145\n141 152331579\n78 159855439\n11 169658471\n22 189991287\n37 204602946\n73 209329065\n72 215363269\n152 236450854\n175 237822921\n22 261431608\n144 252550201\n54 268889550\n238 276997357\n69 313065279\n226 330144323\n6 335788783\n126 345410019\n220 348318997\n166 365778763\n142 382251905\n200 406191336\n234 392702679\n83 409660987\n183 410908761\n142 445707116\n205 470279207\n230 486436406\n156 494269002\n113 495687706\n200 500005738\n162 505246499\n201 548652987\n86 449551554\n62 459527873\n32 574001635\n230 601073337\n175 610244315\n174 613857555\n181 637452273\n158 637866397\n148 648101378\n172 646898076\n144 682578257\n239 703460335\n192 713255331\n28 727075136\n196 730768166\n111 751850547\n90 762445737\n204 762552166\n72 773170159\n240 803415865\n32 798873367\n195 814999380\n72 842641864\n125 851815348\n116 858041919\n200 869948671\n195 873324903\n5 877767414\n105 877710280\n150 877719360\n9 884707717\n230 880263190\n88 967344715\n49 977643789\n167 979463984\n70 981400941\n114 991068035\n94 991951735\n141 995762200\n\nSample Output 3\n\n682155965\n\nRemember to take the count modulo 998244353.", "platform": "atcoder", "question_id": "arc182_a", "contest_id": "arc182", "contest_date": "2024-08-11T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"8 3\\n1 8\\n8 1\\n2 1\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"8 3\\n8 1\\n1 8\\n1 2\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"241 82\\n190 3207371\\n229 3639088\\n61 4428925\\n84 17258698\\n34 42692503\\n207 59753183\\n180 67198566\\n78 99285033\\n60 102449991\\n234 122146510\\n111 126959145\\n141 152331579\\n78 159855439\\n11 169658471\\n22 189991287\\n37 204602946\\n73 209329065\\n72 215363269\\n152 236450854\\n175 237822921\\n22 261431608\\n144 252550201\\n54 268889550\\n238 276997357\\n69 313065279\\n226 330144323\\n6 335788783\\n126 345410019\\n220 348318997\\n166 365778763\\n142 382251905\\n200 406191336\\n234 392702679\\n83 409660987\\n183 410908761\\n142 445707116\\n205 470279207\\n230 486436406\\n156 494269002\\n113 495687706\\n200 500005738\\n162 505246499\\n201 548652987\\n86 449551554\\n62 459527873\\n32 574001635\\n230 601073337\\n175 610244315\\n174 613857555\\n181 637452273\\n158 637866397\\n148 648101378\\n172 646898076\\n144 682578257\\n239 703460335\\n192 713255331\\n28 727075136\\n196 730768166\\n111 751850547\\n90 762445737\\n204 762552166\\n72 773170159\\n240 803415865\\n32 798873367\\n195 814999380\\n72 842641864\\n125 851815348\\n116 858041919\\n200 869948671\\n195 873324903\\n5 877767414\\n105 877710280\\n150 877719360\\n9 884707717\\n230 880263190\\n88 967344715\\n49 977643789\\n167 979463984\\n70 981400941\\n114 991068035\\n94 991951735\\n141 995762200\\n\", \"output\": \"682155965\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere is an integer sequence S of length N. Initially, all elements of S are 0.\nYou are also given two integer sequences of length Q: P=(P_1,P_2,\\dots,P_Q) and V=(V_1,V_2,\\dots,V_Q).\nSnuke wants to perform Q operations on the sequence S in order. The i-th operation is as follows:\n\n- Perform one of the following:\n- Replace each of the elements S_1, S_2, \\dots, S_{P_i} with V_i. However, before this operation, if there is an element among S_1, S_2, \\dots, S_{P_i} that is strictly greater than V_i, Snuke will start crying.\n- Replace each of the elements S_{P_i}, S_{P_i+1}, \\dots, S_N with V_i. However, before this operation, if there is an element among S_{P_i}, S_{P_i+1}, \\dots, S_N that is strictly greater than V_i, Snuke will start crying.\n\n\n\nFind the number of sequences of Q operations where Snuke can perform all operations without crying, modulo 998244353.\nTwo sequences of operations are distinguished if and only if there is 1 \\leq i \\leq Q such that the choice for the i-th operation is different.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN Q\nP_1 V_1\nP_2 V_2\n\\vdots\nP_Q V_Q\n\nOutput\n\nPrint the answer as an integer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 5000\n- 1 \\leq Q \\leq 5000\n- 1 \\leq P_i \\leq N\n- 1 \\leq V_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n8 3\n1 8\n8 1\n2 1\n\nSample Output 1\n\n1\n\nSnuke can perform the three operations without crying as follows:\n\n- Replace S_1 with 8.\n- Replace S_8 with 1.\n- Replace S_2, S_3, \\dots, S_8 with 1.\n\nNo other sequences of operations satisfy the conditions, so the answer is 1. For example, if he replaces S_1, S_2, \\dots, S_8 with 8 in the first operation, he will cry in the second operation regardless of the choice.\n\nSample Input 2\n\n8 3\n8 1\n1 8\n1 2\n\nSample Output 2\n\n0\n\nNo matter how he performs the first two operations, he will cry in the third operation.\n\nSample Input 3\n\n241 82\n190 3207371\n229 3639088\n61 4428925\n84 17258698\n34 42692503\n207 59753183\n180 67198566\n78 99285033\n60 102449991\n234 122146510\n111 126959145\n141 152331579\n78 159855439\n11 169658471\n22 189991287\n37 204602946\n73 209329065\n72 215363269\n152 236450854\n175 237822921\n22 261431608\n144 252550201\n54 268889550\n238 276997357\n69 313065279\n226 330144323\n6 335788783\n126 345410019\n220 348318997\n166 365778763\n142 382251905\n200 406191336\n234 392702679\n83 409660987\n183 410908761\n142 445707116\n205 470279207\n230 486436406\n156 494269002\n113 495687706\n200 500005738\n162 505246499\n201 548652987\n86 449551554\n62 459527873\n32 574001635\n230 601073337\n175 610244315\n174 613857555\n181 637452273\n158 637866397\n148 648101378\n172 646898076\n144 682578257\n239 703460335\n192 713255331\n28 727075136\n196 730768166\n111 751850547\n90 762445737\n204 762552166\n72 773170159\n240 803415865\n32 798873367\n195 814999380\n72 842641864\n125 851815348\n116 858041919\n200 869948671\n195 873324903\n5 877767414\n105 877710280\n150 877719360\n9 884707717\n230 880263190\n88 967344715\n49 977643789\n167 979463984\n70 981400941\n114 991068035\n94 991951735\n141 995762200\n\nSample Output 3\n\n682155965\n\nRemember to take the count modulo 998244353.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "2UP3DOWN", "question_content": "Takahashi is in a building with 100 floors.\nHe uses the stairs for moving up two floors or less or moving down three floors or less, and uses the elevator otherwise.\nDoes he use the stairs to move from floor X to floor Y?\n\nInput\n\nThe input is given from Standard Input in the following format:\nX Y\n\nOutput\n\nIf Takahashi uses the stairs for the move, print Yes; if he uses the elevator, print No.\n\nConstraints\n\n\n- 1 \\leq X,Y \\leq 100\n- X \\neq Y\n- All input values are integers.\n\nSample Input 1\n\n1 4\n\nSample Output 1\n\nNo\n\nThe move from floor 1 to floor 4 involves going up three floors, so Takahashi uses the elevator.\n\nSample Input 2\n\n99 96\n\nSample Output 2\n\nYes\n\nThe move from floor 99 to floor 96 involves going down three floors, so Takahashi uses the stairs.\n\nSample Input 3\n\n100 1\n\nSample Output 3\n\nNo", "platform": "atcoder", "question_id": "abc326_a", "contest_id": "abc326", "contest_date": "2023-10-28T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"1 4\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}, {\"input\": \"99 96\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"100 1\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTakahashi is in a building with 100 floors.\nHe uses the stairs for moving up two floors or less or moving down three floors or less, and uses the elevator otherwise.\nDoes he use the stairs to move from floor X to floor Y?\n\nInput\n\nThe input is given from Standard Input in the following format:\nX Y\n\nOutput\n\nIf Takahashi uses the stairs for the move, print Yes; if he uses the elevator, print No.\n\nConstraints\n\n\n- 1 \\leq X,Y \\leq 100\n- X \\neq Y\n- All input values are integers.\n\nSample Input 1\n\n1 4\n\nSample Output 1\n\nNo\n\nThe move from floor 1 to floor 4 involves going up three floors, so Takahashi uses the elevator.\n\nSample Input 2\n\n99 96\n\nSample Output 2\n\nYes\n\nThe move from floor 99 to floor 96 involves going down three floors, so Takahashi uses the stairs.\n\nSample Input 3\n\n100 1\n\nSample Output 3\n\nNo\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Uniform Sum", "question_content": "There are two sequences A=(A_1,\\dots,A_N) and B=(B_1,\\dots,B_N). You can perform the following three types of operations any number of times in any order:\n\n- Choose an index i such that A_i = -1, and replace A_i with any non-negative integer.\n- Choose an index i such that B_i = -1, and replace B_i with any non-negative integer.\n- Rearrange the elements of sequence A in any order.\n\nDetermine whether it is possible, after these operations, for all elements of A and B to be non-negative and satisfy A_1 + B_1 = A_2 + B_2 = \\dots = A_N + B_N.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_N\n\nOutput\n\nIf it is possible, after the operations, for all elements of A and B to be non-negative and satisfy A_1 + B_1 = A_2 + B_2 = \\dots = A_N + B_N, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2000\n- -1 \\leq A_i \\leq 10^9\n- -1 \\leq B_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4\n2 0 -1 3\n3 -1 4 2\n\nSample Output 1\n\nYes\n\nConsider the following operations:\n\n- Replace A_3 with 1.\n- Replace B_2 with 1.\n- Rearrange A to (1,3,0,2).\n\nAfter these operations, A = (1,3,0,2) and B = (3,1,4,2): all elements of A and B are non-negative, and A_1+B_1 = A_2+B_2 = A_3+B_3 = A_4+B_4 = 4 is satisfied.\n\nSample Input 2\n\n3\n1 2 3\n1 2 4\n\nSample Output 2\n\nNo\n\nNo matter how you perform the operations, it is impossible to satisfy A_1+B_1 = A_2+B_2 = A_3+B_3.\n\nSample Input 3\n\n3\n1 2 -1\n1 2 4\n\nSample Output 3\n\nNo", "platform": "atcoder", "question_id": "arc195_b", "contest_id": "arc195", "contest_date": "2025-03-23T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"4\\n2 0 -1 3\\n3 -1 4 2\", \"output\": \"Yes\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n1 2 3\\n1 2 4\", \"output\": \"No\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n1 2 -1\\n1 2 4\", \"output\": \"No\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are two sequences A=(A_1,\\dots,A_N) and B=(B_1,\\dots,B_N). You can perform the following three types of operations any number of times in any order:\n\n- Choose an index i such that A_i = -1, and replace A_i with any non-negative integer.\n- Choose an index i such that B_i = -1, and replace B_i with any non-negative integer.\n- Rearrange the elements of sequence A in any order.\n\nDetermine whether it is possible, after these operations, for all elements of A and B to be non-negative and satisfy A_1 + B_1 = A_2 + B_2 = \\dots = A_N + B_N.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_N\n\nOutput\n\nIf it is possible, after the operations, for all elements of A and B to be non-negative and satisfy A_1 + B_1 = A_2 + B_2 = \\dots = A_N + B_N, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2000\n- -1 \\leq A_i \\leq 10^9\n- -1 \\leq B_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4\n2 0 -1 3\n3 -1 4 2\n\nSample Output 1\n\nYes\n\nConsider the following operations:\n\n- Replace A_3 with 1.\n- Replace B_2 with 1.\n- Rearrange A to (1,3,0,2).\n\nAfter these operations, A = (1,3,0,2) and B = (3,1,4,2): all elements of A and B are non-negative, and A_1+B_1 = A_2+B_2 = A_3+B_3 = A_4+B_4 = 4 is satisfied.\n\nSample Input 2\n\n3\n1 2 3\n1 2 4\n\nSample Output 2\n\nNo\n\nNo matter how you perform the operations, it is impossible to satisfy A_1+B_1 = A_2+B_2 = A_3+B_3.\n\nSample Input 3\n\n3\n1 2 -1\n1 2 4\n\nSample Output 3\n\nNo\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "B. Chemistry", "question_content": "You are given a string $s$ of length $n$, consisting of lowercase Latin letters, and an integer $k$.\n\nYou need to check if it is possible to remove exactly $k$ characters from the string $s$ in such a way that the remaining characters can be rearranged to form a palindrome. Note that you can reorder the remaining characters in any way.\n\nA palindrome is a string that reads the same forwards and backwards. For example, the strings \"z\", \"aaa\", \"aba\", \"abccba\" are palindromes, while the strings \"codeforces\", \"reality\", \"ab\" are not.\n\nInput\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) — the number of the test cases. This is followed by their description.\n\nThe first line of each test case contains two integers $n$ and $k$ ($0 \\leq k < n \\leq 10^5$) — the length of the string $s$ and the number of characters to be deleted.\n\nThe second line of each test case contains a string $s$ of length $n$, consisting of lowercase Latin letters.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\nOutput\n\nFor each test case, output \"YES\" if it is possible to remove exactly $k$ characters from the string $s$ in such a way that the remaining characters can be rearranged to form a palindrome, and \"NO\" otherwise.\n\nYou can output the answer in any case (uppercase or lowercase). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive answers.Sample Input 1:\n14\n\n1 0\n\na\n\n2 0\n\nab\n\n2 1\n\nba\n\n3 1\n\nabb\n\n3 2\n\nabc\n\n6 2\n\nbacacd\n\n6 2\n\nfagbza\n\n6 2\n\nzwaafa\n\n7 2\n\ntaagaak\n\n14 3\n\nttrraakkttoorr\n\n5 3\n\ndebdb\n\n5 4\n\necadc\n\n5 3\n\ndebca\n\n5 3\n\nabaac\n\n\n\nSample Output 1:\n\nYES\nNO\nYES\nYES\nYES\nYES\nNO\nNO\nYES\nYES\nYES\nYES\nNO\nYES\n\n\nNote\n\nIn the first test case, nothing can be removed, and the string \"a\" is a palindrome.\n\nIn the second test case, nothing can be removed, but the strings \"ab\" and \"ba\" are not palindromes.\n\nIn the third test case, any character can be removed, and the resulting string will be a palindrome.\n\nIn the fourth test case, one occurrence of the character \"a\" can be removed, resulting in the string \"bb\", which is a palindrome.\n\nIn the sixth test case, one occurrence of the characters \"b\" and \"d\" can be removed, resulting in the string \"acac\", which can be rearranged to the string \"acca\".\n\nIn the ninth test case, one occurrence of the characters \"t\" and \"k\" can be removed, resulting in the string \"aagaa\", which is a palindrome.", "platform": "codeforces", "question_id": "1883_B", "contest_id": "1883", "contest_date": "2023-09-22T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"output\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given a string $s$ of length $n$, consisting of lowercase Latin letters, and an integer $k$.\n\nYou need to check if it is possible to remove exactly $k$ characters from the string $s$ in such a way that the remaining characters can be rearranged to form a palindrome. Note that you can reorder the remaining characters in any way.\n\nA palindrome is a string that reads the same forwards and backwards. For example, the strings \"z\", \"aaa\", \"aba\", \"abccba\" are palindromes, while the strings \"codeforces\", \"reality\", \"ab\" are not.\n\nInput\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) — the number of the test cases. This is followed by their description.\n\nThe first line of each test case contains two integers $n$ and $k$ ($0 \\leq k < n \\leq 10^5$) — the length of the string $s$ and the number of characters to be deleted.\n\nThe second line of each test case contains a string $s$ of length $n$, consisting of lowercase Latin letters.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\nOutput\n\nFor each test case, output \"YES\" if it is possible to remove exactly $k$ characters from the string $s$ in such a way that the remaining characters can be rearranged to form a palindrome, and \"NO\" otherwise.\n\nYou can output the answer in any case (uppercase or lowercase). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive answers.Sample Input 1:\n14\n\n1 0\n\na\n\n2 0\n\nab\n\n2 1\n\nba\n\n3 1\n\nabb\n\n3 2\n\nabc\n\n6 2\n\nbacacd\n\n6 2\n\nfagbza\n\n6 2\n\nzwaafa\n\n7 2\n\ntaagaak\n\n14 3\n\nttrraakkttoorr\n\n5 3\n\ndebdb\n\n5 4\n\necadc\n\n5 3\n\ndebca\n\n5 3\n\nabaac\n\n\n\nSample Output 1:\n\nYES\nNO\nYES\nYES\nYES\nYES\nNO\nNO\nYES\nYES\nYES\nYES\nNO\nYES\n\n\nNote\n\nIn the first test case, nothing can be removed, and the string \"a\" is a palindrome.\n\nIn the second test case, nothing can be removed, but the strings \"ab\" and \"ba\" are not palindromes.\n\nIn the third test case, any character can be removed, and the resulting string will be a palindrome.\n\nIn the fourth test case, one occurrence of the character \"a\" can be removed, resulting in the string \"bb\", which is a palindrome.\n\nIn the sixth test case, one occurrence of the characters \"b\" and \"d\" can be removed, resulting in the string \"acac\", which can be rearranged to the string \"acca\".\n\nIn the ninth test case, one occurrence of the characters \"t\" and \"k\" can be removed, resulting in the string \"aagaa\", which is a palindrome.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Thermometer", "question_content": "Takahashi measured his body temperature and found it to be X {}^\\circC.\nBody temperature is classified into the following:\n\n- Higher than or equal to 38.0 {}^\\circC: “High fever”\n- Higher than or equal to 37.5 {}^\\circC and lower than 38.0 {}^\\circC: “Fever”\n- Lower than 37.5 {}^\\circC: “Normal”\n\nWhich classification does Takahashi's body temperature fall into? Present the answer as an integer according to the Output section.\n\nInput\n\nThe input is given from Standard Input in the following format:\nX\n\nOutput\n\nPrint an integer specified below corresponding to Takahashi's body temperature classification.\n\n- High fever: 1\n- Fever: 2\n- Normal: 3\n\nConstraints\n\n\n- 30 \\leq X \\leq 50\n- X is given to one decimal place.\n\nSample Input 1\n\n40.0\n\nSample Output 1\n\n1\r\n\nHis body temperature is 40.0 {}^\\circC, which is classified as a high fever. Thus, print 1.\n\nSample Input 2\n\n37.7\n\nSample Output 2\n\n2\r\n\nHis body temperature is 37.7 {}^\\circC, which is classified as a fever. Thus, print 2.\n\nSample Input 3\n\n36.6\n\nSample Output 3\n\n3\r\n\nHis body temperature is 36.6 {}^\\circC, which is classified as a normal temperature. Thus, print 3.", "platform": "atcoder", "question_id": "abc397_a", "contest_id": "abc397", "contest_date": "2025-03-15T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"40.0\", \"output\": \"1\", \"testtype\": \"stdin\"}, {\"input\": \"37.7\", \"output\": \"2\", \"testtype\": \"stdin\"}, {\"input\": \"36.6\", \"output\": \"3\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTakahashi measured his body temperature and found it to be X {}^\\circC.\nBody temperature is classified into the following:\n\n- Higher than or equal to 38.0 {}^\\circC: “High fever”\n- Higher than or equal to 37.5 {}^\\circC and lower than 38.0 {}^\\circC: “Fever”\n- Lower than 37.5 {}^\\circC: “Normal”\n\nWhich classification does Takahashi's body temperature fall into? Present the answer as an integer according to the Output section.\n\nInput\n\nThe input is given from Standard Input in the following format:\nX\n\nOutput\n\nPrint an integer specified below corresponding to Takahashi's body temperature classification.\n\n- High fever: 1\n- Fever: 2\n- Normal: 3\n\nConstraints\n\n\n- 30 \\leq X \\leq 50\n- X is given to one decimal place.\n\nSample Input 1\n\n40.0\n\nSample Output 1\n\n1\r\n\nHis body temperature is 40.0 {}^\\circC, which is classified as a high fever. Thus, print 1.\n\nSample Input 2\n\n37.7\n\nSample Output 2\n\n2\r\n\nHis body temperature is 37.7 {}^\\circC, which is classified as a fever. Thus, print 2.\n\nSample Input 3\n\n36.6\n\nSample Output 3\n\n3\r\n\nHis body temperature is 36.6 {}^\\circC, which is classified as a normal temperature. Thus, print 3.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Separated Lunch", "question_content": "As KEYENCE headquarters have more and more workers, they decided to divide the departments in the headquarters into two groups and stagger their lunch breaks.\nKEYENCE headquarters have N departments, and the number of people in the i-th department (1\\leq i\\leq N) is K_i.\nWhen assigning each department to Group A or Group B, having each group take lunch breaks at the same time, and ensuring that the lunch break times of Group A and Group B do not overlap, find the minimum possible value of the maximum number of people taking a lunch break at the same time.\r\nIn other words, find the minimum possible value of the larger of the following: the total number of people in departments assigned to Group A, and the total number of people in departments assigned to Group B.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nK_1 K_2 \\ldots K_N\n\nOutput\n\nPrint the minimum possible value of the maximum number of people taking a lunch break at the same time.\n\nConstraints\n\n\n- 2 \\leq N \\leq 20\n- 1 \\leq K_i \\leq 10^8\n- All input values are integers.\n\nSample Input 1\n\n5\r\n2 3 5 10 12\n\nSample Output 1\n\n17\r\n\nWhen assigning departments 1, 2, and 5 to Group A, and departments 3 and 4 to Group B, Group A has a total of 2+3+12=17 people, and Group B has a total of 5+10=15 people. Thus, the maximum number of people taking a lunch break at the same time is 17.\nIt is impossible to assign the departments so that both groups have 16 or fewer people, so print 17.\n\nSample Input 2\n\n2\r\n1 1\n\nSample Output 2\n\n1\r\n\nMultiple departments may have the same number of people.\n\nSample Input 3\n\n6\r\n22 25 26 45 22 31\n\nSample Output 3\n\n89\r\n\nFor example, when assigning departments 1, 4, and 5 to Group A, and departments 2, 3, and 6 to Group B, the maximum number of people taking a lunch break at the same time is 89.", "platform": "atcoder", "question_id": "abc374_c", "contest_id": "abc374", "contest_date": "2024-10-05T00:00:00", "starter_code": "", "difficulty": "medium", "public_test_cases": "[{\"input\": \"5\\n2 3 5 10 12\\n\", \"output\": \"17\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2\\n1 1\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6\\n22 25 26 45 22 31\\n\", \"output\": \"89\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nAs KEYENCE headquarters have more and more workers, they decided to divide the departments in the headquarters into two groups and stagger their lunch breaks.\nKEYENCE headquarters have N departments, and the number of people in the i-th department (1\\leq i\\leq N) is K_i.\nWhen assigning each department to Group A or Group B, having each group take lunch breaks at the same time, and ensuring that the lunch break times of Group A and Group B do not overlap, find the minimum possible value of the maximum number of people taking a lunch break at the same time.\r\nIn other words, find the minimum possible value of the larger of the following: the total number of people in departments assigned to Group A, and the total number of people in departments assigned to Group B.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nK_1 K_2 \\ldots K_N\n\nOutput\n\nPrint the minimum possible value of the maximum number of people taking a lunch break at the same time.\n\nConstraints\n\n\n- 2 \\leq N \\leq 20\n- 1 \\leq K_i \\leq 10^8\n- All input values are integers.\n\nSample Input 1\n\n5\r\n2 3 5 10 12\n\nSample Output 1\n\n17\r\n\nWhen assigning departments 1, 2, and 5 to Group A, and departments 3 and 4 to Group B, Group A has a total of 2+3+12=17 people, and Group B has a total of 5+10=15 people. Thus, the maximum number of people taking a lunch break at the same time is 17.\nIt is impossible to assign the departments so that both groups have 16 or fewer people, so print 17.\n\nSample Input 2\n\n2\r\n1 1\n\nSample Output 2\n\n1\r\n\nMultiple departments may have the same number of people.\n\nSample Input 3\n\n6\r\n22 25 26 45 22 31\n\nSample Output 3\n\n89\r\n\nFor example, when assigning departments 1, 4, and 5 to Group A, and departments 2, 3, and 6 to Group B, the maximum number of people taking a lunch break at the same time is 89.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Xor Sigma Problem", "question_content": "You are given an integer sequence A=(A_1,\\ldots,A_N) of length N. Find the value of the following expression:\n\\displaystyle \\sum_{i=1}^{N-1}\\sum_{j=i+1}^N (A_i \\oplus A_{i+1}\\oplus \\ldots \\oplus A_j).\n\nNotes on bitwise XOR\r\nThe bitwise XOR of non-negative integers A and B, denoted as A \\oplus B, is defined as follows:\r\n- In the binary representation of A \\oplus B, the digit at the 2^k (k \\geq 0) position is 1 if and only if exactly one of the digits at the 2^k position in the binary representations of A and B is 1; otherwise, it is 0.\r\nFor example, 3 \\oplus 5 = 6 (in binary: 011 \\oplus 101 = 110).\r\nIn general, the bitwise XOR of k integers p_1, \\dots, p_k is defined as (\\cdots ((p_1 \\oplus p_2) \\oplus p_3) \\oplus \\cdots \\oplus p_k).  It can be proved that this is independent of the order of p_1, \\dots, p_k.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN \r\nA_1 A_2 \\ldots A_{N}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq A_i \\leq 10^8\n- All input values are integers.\n\nSample Input 1\n\n3\r\n1 3 2\n\nSample Output 1\n\n3\r\n\nA_1 \\oplus A_2 = 2, A_1 \\oplus A_2 \\oplus A_3 = 0, and A_2 \\oplus A_3 = 1, so the answer is 2 + 0 + 1 = 3.\n\nSample Input 2\n\n7\r\n2 5 6 5 2 1 7\n\nSample Output 2\n\n83", "platform": "atcoder", "question_id": "abc365_e", "contest_id": "abc365", "contest_date": "2024-08-03T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3\\n1 3 2\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"7\\n2 5 6 5 2 1 7\\n\", \"output\": \"83\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an integer sequence A=(A_1,\\ldots,A_N) of length N. Find the value of the following expression:\n\\displaystyle \\sum_{i=1}^{N-1}\\sum_{j=i+1}^N (A_i \\oplus A_{i+1}\\oplus \\ldots \\oplus A_j).\n\nNotes on bitwise XOR\r\nThe bitwise XOR of non-negative integers A and B, denoted as A \\oplus B, is defined as follows:\r\n- In the binary representation of A \\oplus B, the digit at the 2^k (k \\geq 0) position is 1 if and only if exactly one of the digits at the 2^k position in the binary representations of A and B is 1; otherwise, it is 0.\r\nFor example, 3 \\oplus 5 = 6 (in binary: 011 \\oplus 101 = 110).\r\nIn general, the bitwise XOR of k integers p_1, \\dots, p_k is defined as (\\cdots ((p_1 \\oplus p_2) \\oplus p_3) \\oplus \\cdots \\oplus p_k).  It can be proved that this is independent of the order of p_1, \\dots, p_k.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN \r\nA_1 A_2 \\ldots A_{N}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq A_i \\leq 10^8\n- All input values are integers.\n\nSample Input 1\n\n3\r\n1 3 2\n\nSample Output 1\n\n3\r\n\nA_1 \\oplus A_2 = 2, A_1 \\oplus A_2 \\oplus A_3 = 0, and A_2 \\oplus A_3 = 1, so the answer is 2 + 0 + 1 = 3.\n\nSample Input 2\n\n7\r\n2 5 6 5 2 1 7\n\nSample Output 2\n\n83\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Good Graph", "question_content": "You are given an undirected graph G with N vertices and M edges.\r\nFor i = 1, 2, \\ldots, M, the i-th edge is an undirected edge connecting vertices u_i and v_i.\nA graph with N vertices is called good if the following condition holds for all i = 1, 2, \\ldots, K:\n\n- there is no path connecting vertices x_i and y_i in G.\n\nThe given graph G is good.\nYou are given Q independent questions. Answer all of them.\r\nFor i = 1, 2, \\ldots, Q, the i-th question is as follows.\n\n- Is the graph G^{(i)} obtained by adding an undirected edge connecting vertices p_i and q_i to the given graph G good?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nu_1 v_1\r\nu_2 v_2\r\n\\vdots\r\nu_M v_M\r\nK\r\nx_1 y_1\r\nx_2 y_2\r\n\\vdots\r\nx_K y_K\r\nQ\r\np_1 q_1\r\np_2 q_2\r\n\\vdots\r\np_Q q_Q\n\nOutput\n\nPrint Q lines.\r\nFor i = 1, 2, \\ldots, Q, the i-th line should contain the answer to the i-th question: Yes if the graph G^{(i)} is good, and No otherwise.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- 0 \\leq M \\leq 2 \\times10^5\n- 1 \\leq u_i, v_i \\leq N\n- 1 \\leq K \\leq 2 \\times 10^5\n- 1 \\leq x_i, y_i \\leq N\n- x_i \\neq y_i\n- i \\neq j \\implies \\lbrace x_i, y_i \\rbrace \\neq \\lbrace x_j, y_j \\rbrace\n- For all i = 1, 2, \\ldots, K, there is no path connecting vertices x_i and y_i.\n- 1 \\leq Q \\leq 2 \\times 10^5\n- 1 \\leq p_i, q_i \\leq N\n- p_i \\neq q_i\n- All input values are integers.\n\nSample Input 1\n\n6 6\r\n1 2\r\n2 3\r\n2 3\r\n3 1\r\n5 4\r\n5 5\r\n3\r\n1 5\r\n2 6\r\n4 3\r\n4\r\n2 5\r\n2 6\r\n5 6\r\n5 4\n\nSample Output 1\n\nNo\r\nNo\r\nYes\r\nYes\r\n\n\n- For the first question, the graph G^{(1)} is not good because it has a path 1 \\rightarrow 2 \\rightarrow 5 connecting vertices x_1 = 1 and y_1 = 5. Therefore, print No.\n- For the second question, the graph G^{(2)} is not good because it has a path 2 \\rightarrow 6 connecting vertices x_2 = 2 and y_2 = 6. Therefore, print No.\n- For the third question, the graph G^{(3)} is good. Therefore, print Yes.\n- For the fourth question, the graph G^{(4)} is good. Therefore, print Yes.\n\nAs seen in this sample input, note that the given graph G may have self-loops or multi-edges.", "platform": "atcoder", "question_id": "abc304_e", "contest_id": "abc304", "contest_date": "2023-06-03T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"output\": \"No\\nNo\\nYes\\nYes\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an undirected graph G with N vertices and M edges.\r\nFor i = 1, 2, \\ldots, M, the i-th edge is an undirected edge connecting vertices u_i and v_i.\nA graph with N vertices is called good if the following condition holds for all i = 1, 2, \\ldots, K:\n\n- there is no path connecting vertices x_i and y_i in G.\n\nThe given graph G is good.\nYou are given Q independent questions. Answer all of them.\r\nFor i = 1, 2, \\ldots, Q, the i-th question is as follows.\n\n- Is the graph G^{(i)} obtained by adding an undirected edge connecting vertices p_i and q_i to the given graph G good?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nu_1 v_1\r\nu_2 v_2\r\n\\vdots\r\nu_M v_M\r\nK\r\nx_1 y_1\r\nx_2 y_2\r\n\\vdots\r\nx_K y_K\r\nQ\r\np_1 q_1\r\np_2 q_2\r\n\\vdots\r\np_Q q_Q\n\nOutput\n\nPrint Q lines.\r\nFor i = 1, 2, \\ldots, Q, the i-th line should contain the answer to the i-th question: Yes if the graph G^{(i)} is good, and No otherwise.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- 0 \\leq M \\leq 2 \\times10^5\n- 1 \\leq u_i, v_i \\leq N\n- 1 \\leq K \\leq 2 \\times 10^5\n- 1 \\leq x_i, y_i \\leq N\n- x_i \\neq y_i\n- i \\neq j \\implies \\lbrace x_i, y_i \\rbrace \\neq \\lbrace x_j, y_j \\rbrace\n- For all i = 1, 2, \\ldots, K, there is no path connecting vertices x_i and y_i.\n- 1 \\leq Q \\leq 2 \\times 10^5\n- 1 \\leq p_i, q_i \\leq N\n- p_i \\neq q_i\n- All input values are integers.\n\nSample Input 1\n\n6 6\r\n1 2\r\n2 3\r\n2 3\r\n3 1\r\n5 4\r\n5 5\r\n3\r\n1 5\r\n2 6\r\n4 3\r\n4\r\n2 5\r\n2 6\r\n5 6\r\n5 4\n\nSample Output 1\n\nNo\r\nNo\r\nYes\r\nYes\r\n\n\n- For the first question, the graph G^{(1)} is not good because it has a path 1 \\rightarrow 2 \\rightarrow 5 connecting vertices x_1 = 1 and y_1 = 5. Therefore, print No.\n- For the second question, the graph G^{(2)} is not good because it has a path 2 \\rightarrow 6 connecting vertices x_2 = 2 and y_2 = 6. Therefore, print No.\n- For the third question, the graph G^{(3)} is good. Therefore, print Yes.\n- For the fourth question, the graph G^{(4)} is good. Therefore, print Yes.\n\nAs seen in this sample input, note that the given graph G may have self-loops or multi-edges.\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "Takahashi Quest", "question_content": "Takahashi will embark on an adventure.\nDuring the adventure, N events will occur.\r\nThe i-th event (1\\leq i\\leq N) is represented by a pair of integers (t _ i,x _ i) (1\\leq t _ i\\leq 2,1\\leq x _ i\\leq N) and is as follows:\n\n- If t _ i=1, he finds one potion of type x _ i. He can choose to pick it up or discard it.\n- If t _ i=2, he encounters one monster of type x _ i. If he has a potion of type x _ i, he can use one to defeat the monster. If he does not defeat it, he will be defeated.\n\nDetermine whether he can defeat all the monsters without being defeated.\nIf he cannot defeat all the monsters, print -1.\nOtherwise, let K be the maximum number of potions he has at some point during the adventure.\r\nLet K _ {\\min} be the minimum value of K across all strategies where he will not be defeated.\r\nPrint the value of K _ {\\min} and the actions of Takahashi that achieve K _ {\\min}.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nt _ 1 x _ 1\r\nt _ 2 x _ 2\r\n\\vdots\r\nt _ N x _ N\n\nOutput\n\nIf Takahashi cannot defeat all the monsters, print -1.\r\nIf he can, print the value of K _ {\\min} in the first line, and in the second line, for each i such that t _ i=1 in ascending order, print 1 if he picks up the potion found at the i-th event, and 0 otherwise, separated by spaces.\r\nIf multiple sequences of actions achieve K _ {\\min} and allow him to finish the adventure without being defeated, you may print any of them.\n\nConstraints\n\n\n- 1\\leq N\\leq2\\times10^5\n- 1\\leq t _ i\\leq2\\ (1\\leq i\\leq N)\n- 1\\leq x _ i\\leq N\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n13\r\n1 2\r\n1 3\r\n1 1\r\n1 3\r\n1 2\r\n2 3\r\n1 3\r\n1 3\r\n2 3\r\n1 3\r\n2 2\r\n2 3\r\n2 1\n\nSample Output 1\n\n3\r\n1 1 1 0 0 1 0 1\r\n\nThe sample output corresponds to the following actions:\n\n- Find potions of types 2,3,1 in this order. Pick up all of them.\n- Find potions of types 3,2 in this order. Do not pick up any of them.\n- Encounter a type-3 monster. Use one type-3 potion to defeat it.\n- Find a type-3 potion. Pick it up.\n- Find a type-3 potion. Do not pick it up.\n- Encounter a type-3 monster. Use one type-3 potion to defeat it.\n- Find a type-3 potion. Pick it up.\n- Encounter a type-2 monster. Use one type-2 potion to defeat it.\n- Encounter a type-3 monster. Use one type-3 potion to defeat it.\n- Encounter a type-1 monster. Use one type-1 potion to defeat it.\n\nIn this sequence of actions, the value of K is 3.\nThere is no way to avoid defeat with K\\leq 2, so the sought value of K _ {\\min} is 3.\r\nThere are multiple sequences of actions that satisfy K=3 and allow him to avoid defeat; you may print any of them.\n\nSample Input 2\n\n4\r\n2 3\r\n1 4\r\n2 1\r\n1 2\n\nSample Output 2\n\n-1\r\n\nHe will inevitably be defeated by the first monster he encounters.\n\nSample Input 3\n\n30\r\n1 25\r\n1 2\r\n1 10\r\n1 18\r\n2 18\r\n1 11\r\n2 11\r\n1 21\r\n1 6\r\n2 2\r\n2 10\r\n1 11\r\n1 24\r\n1 11\r\n1 3\r\n1 2\r\n1 18\r\n2 25\r\n1 8\r\n1 10\r\n1 11\r\n2 18\r\n2 10\r\n1 10\r\n2 2\r\n1 24\r\n1 10\r\n2 10\r\n1 25\r\n2 6\n\nSample Output 3\n\n4\r\n1 1 1 1 1 0 1 0 0 0 0 1 1 0 1 0 1 0 0 0", "platform": "atcoder", "question_id": "abc333_e", "contest_id": "abc333", "contest_date": "2023-12-16T00:00:00", "starter_code": "", "difficulty": "hard", "public_test_cases": "[{\"input\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"output\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n2 3\\n1 4\\n2 1\\n1 2\\n\", \"output\": \"-1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"30\\n1 25\\n1 2\\n1 10\\n1 18\\n2 18\\n1 11\\n2 11\\n1 21\\n1 6\\n2 2\\n2 10\\n1 11\\n1 24\\n1 11\\n1 3\\n1 2\\n1 18\\n2 25\\n1 8\\n1 10\\n1 11\\n2 18\\n2 10\\n1 10\\n2 2\\n1 24\\n1 10\\n2 10\\n1 25\\n2 6\\n\", \"output\": \"4\\n1 1 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nTakahashi will embark on an adventure.\nDuring the adventure, N events will occur.\r\nThe i-th event (1\\leq i\\leq N) is represented by a pair of integers (t _ i,x _ i) (1\\leq t _ i\\leq 2,1\\leq x _ i\\leq N) and is as follows:\n\n- If t _ i=1, he finds one potion of type x _ i. He can choose to pick it up or discard it.\n- If t _ i=2, he encounters one monster of type x _ i. If he has a potion of type x _ i, he can use one to defeat the monster. If he does not defeat it, he will be defeated.\n\nDetermine whether he can defeat all the monsters without being defeated.\nIf he cannot defeat all the monsters, print -1.\nOtherwise, let K be the maximum number of potions he has at some point during the adventure.\r\nLet K _ {\\min} be the minimum value of K across all strategies where he will not be defeated.\r\nPrint the value of K _ {\\min} and the actions of Takahashi that achieve K _ {\\min}.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nt _ 1 x _ 1\r\nt _ 2 x _ 2\r\n\\vdots\r\nt _ N x _ N\n\nOutput\n\nIf Takahashi cannot defeat all the monsters, print -1.\r\nIf he can, print the value of K _ {\\min} in the first line, and in the second line, for each i such that t _ i=1 in ascending order, print 1 if he picks up the potion found at the i-th event, and 0 otherwise, separated by spaces.\r\nIf multiple sequences of actions achieve K _ {\\min} and allow him to finish the adventure without being defeated, you may print any of them.\n\nConstraints\n\n\n- 1\\leq N\\leq2\\times10^5\n- 1\\leq t _ i\\leq2\\ (1\\leq i\\leq N)\n- 1\\leq x _ i\\leq N\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n13\r\n1 2\r\n1 3\r\n1 1\r\n1 3\r\n1 2\r\n2 3\r\n1 3\r\n1 3\r\n2 3\r\n1 3\r\n2 2\r\n2 3\r\n2 1\n\nSample Output 1\n\n3\r\n1 1 1 0 0 1 0 1\r\n\nThe sample output corresponds to the following actions:\n\n- Find potions of types 2,3,1 in this order. Pick up all of them.\n- Find potions of types 3,2 in this order. Do not pick up any of them.\n- Encounter a type-3 monster. Use one type-3 potion to defeat it.\n- Find a type-3 potion. Pick it up.\n- Find a type-3 potion. Do not pick it up.\n- Encounter a type-3 monster. Use one type-3 potion to defeat it.\n- Find a type-3 potion. Pick it up.\n- Encounter a type-2 monster. Use one type-2 potion to defeat it.\n- Encounter a type-3 monster. Use one type-3 potion to defeat it.\n- Encounter a type-1 monster. Use one type-1 potion to defeat it.\n\nIn this sequence of actions, the value of K is 3.\nThere is no way to avoid defeat with K\\leq 2, so the sought value of K _ {\\min} is 3.\r\nThere are multiple sequences of actions that satisfy K=3 and allow him to avoid defeat; you may print any of them.\n\nSample Input 2\n\n4\r\n2 3\r\n1 4\r\n2 1\r\n1 2\n\nSample Output 2\n\n-1\r\n\nHe will inevitably be defeated by the first monster he encounters.\n\nSample Input 3\n\n30\r\n1 25\r\n1 2\r\n1 10\r\n1 18\r\n2 18\r\n1 11\r\n2 11\r\n1 21\r\n1 6\r\n2 2\r\n2 10\r\n1 11\r\n1 24\r\n1 11\r\n1 3\r\n1 2\r\n1 18\r\n2 25\r\n1 8\r\n1 10\r\n1 11\r\n2 18\r\n2 10\r\n1 10\r\n2 2\r\n1 24\r\n1 10\r\n2 10\r\n1 25\r\n2 6\n\nSample Output 3\n\n4\r\n1 1 1 1 1 0 1 0 0 0 0 1 1 0 1 0 1 0 0 0\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "minimize-the-maximum-edge-weight-of-graph", "question_content": "You are given two integers, n and threshold, as well as a directed weighted graph of n nodes numbered from 0 to n - 1. The graph is represented by a 2D integer array edges, where edges[i] = [A_i, B_i, W_i] indicates that there is an edge going from node A_i to node B_i with weight W_i.\nYou have to remove some edges from this graph (possibly none), so that it satisfies the following conditions:\n\nNode 0 must be reachable from all other nodes.\nThe maximum edge weight in the resulting graph is minimized.\nEach node has at most threshold outgoing edges.\n\nReturn the minimum possible value of the maximum edge weight after removing the necessary edges. If it is impossible for all conditions to be satisfied, return -1.\n \nExample 1:\n\nInput: n = 5, edges = [[1,0,1],[2,0,2],[3,0,1],[4,3,1],[2,1,1]], threshold = 2\nOutput: 1\nExplanation:\n\nRemove the edge 2 -> 0. The maximum weight among the remaining edges is 1.\n\nExample 2:\n\nInput: n = 5, edges = [[0,1,1],[0,2,2],[0,3,1],[0,4,1],[1,2,1],[1,4,1]], threshold = 1\nOutput: -1\nExplanation: \nIt is impossible to reach node 0 from node 2.\n\nExample 3:\n\nInput: n = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[3,4,2],[4,0,1]], threshold = 1\nOutput: 2\nExplanation: \n\nRemove the edges 1 -> 3 and 1 -> 4. The maximum weight among the remaining edges is 2.\n\nExample 4:\n\nInput: n = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[4,0,1]], threshold = 1\nOutput: -1\n\n \nConstraints:\n\n2 <= n <= 10^5\n1 <= threshold <= n - 1\n1 <= edges.length <= min(10^5, n * (n - 1) / 2).\nedges[i].length == 3\n0 <= A_i, B_i < n\nA_i != B_i\n1 <= W_i <= 10^6\nThere may be multiple edges between a pair of nodes, but they must have unique weights.", "platform": "leetcode", "question_id": "3720", "contest_id": "weekly-contest-432", "contest_date": "2025-01-11T18:30:00", "starter_code": "class Solution:\n    def minMaxWeight(self, n: int, edges: List[List[int]], threshold: int) -> int:\n        ", "difficulty": "medium", "public_test_cases": "[{\"input\": \"5\\n[[1, 0, 1], [2, 0, 2], [3, 0, 1], [4, 3, 1], [2, 1, 1]]\\n2\", \"output\": \"1\", \"testtype\": \"functional\"}, {\"input\": \"5\\n[[0, 1, 1], [0, 2, 2], [0, 3, 1], [0, 4, 1], [1, 2, 1], [1, 4, 1]]\\n1\", \"output\": \"-1\", \"testtype\": \"functional\"}, {\"input\": \"5\\n[[1, 2, 1], [1, 3, 3], [1, 4, 5], [2, 3, 2], [3, 4, 2], [4, 0, 1]]\\n1\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"5\\n[[1, 2, 1], [1, 3, 3], [1, 4, 5], [2, 3, 2], [4, 0, 1]]\\n1\", \"output\": \"-1\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"minMaxWeight\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given two integers, n and threshold, as well as a directed weighted graph of n nodes numbered from 0 to n - 1. The graph is represented by a 2D integer array edges, where edges[i] = [A_i, B_i, W_i] indicates that there is an edge going from node A_i to node B_i with weight W_i.\nYou have to remove some edges from this graph (possibly none), so that it satisfies the following conditions:\n\nNode 0 must be reachable from all other nodes.\nThe maximum edge weight in the resulting graph is minimized.\nEach node has at most threshold outgoing edges.\n\nReturn the minimum possible value of the maximum edge weight after removing the necessary edges. If it is impossible for all conditions to be satisfied, return -1.\n \nExample 1:\n\nInput: n = 5, edges = [[1,0,1],[2,0,2],[3,0,1],[4,3,1],[2,1,1]], threshold = 2\nOutput: 1\nExplanation:\n\nRemove the edge 2 -> 0. The maximum weight among the remaining edges is 1.\n\nExample 2:\n\nInput: n = 5, edges = [[0,1,1],[0,2,2],[0,3,1],[0,4,1],[1,2,1],[1,4,1]], threshold = 1\nOutput: -1\nExplanation: \nIt is impossible to reach node 0 from node 2.\n\nExample 3:\n\nInput: n = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[3,4,2],[4,0,1]], threshold = 1\nOutput: 2\nExplanation: \n\nRemove the edges 1 -> 3 and 1 -> 4. The maximum weight among the remaining edges is 2.\n\nExample 4:\n\nInput: n = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[4,0,1]], threshold = 1\nOutput: -1\n\n \nConstraints:\n\n2 <= n <= 10^5\n1 <= threshold <= n - 1\n1 <= edges.length <= min(10^5, n * (n - 1) / 2).\nedges[i].length == 3\n0 <= A_i, B_i < n\nA_i != B_i\n1 <= W_i <= 10^6\nThere may be multiple edges between a pair of nodes, but they must have unique weights.\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def minMaxWeight(self, n: int, edges: List[List[int]], threshold: int) -> int:\n        \n```\n\n"}
{"question_title": "First Player", "question_content": "There are N people numbered 1, 2, \\ldots, N, sitting in this clockwise order around a round table.\r\nIn particular, person 1 is sitting next to person N in the clockwise direction.\nFor each i = 1, 2, \\ldots, N, person i has a name S_i and an age A_i.\r\nHere, no two people have the same name or the same age.\nStarting from the youngest person, print the names of all N people in the order of their seating positions in clockwise order.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS_1 A_1\r\nS_2 A_2\r\n\\vdots\r\nS_N A_N\n\nOutput\n\nPrint N lines.\r\nFor each i = 1, 2, \\ldots, N, the i-th line should contain the name of the person sitting in the i-th position clockwise from the youngest person.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- N is an integer.\n- S_i is a string of length between 1 and 10, consisting of lowercase English letters.\n- i \\neq j \\implies S_i \\neq S_j\n- 0 \\leq A_i \\leq 10^9\n- A_i is an integer.\n- i \\neq j \\implies A_i \\neq A_j\n\nSample Input 1\n\n5\r\nalice 31\r\nbob 41\r\ncarol 5\r\ndave 92\r\nellen 65\n\nSample Output 1\n\ncarol\r\ndave\r\nellen\r\nalice\r\nbob\r\n\nThe youngest person is person 3. Therefore, starting from person 3, print the names in the clockwise order of their seating positions: person 3, person 4, person 5, person 1, and person 2.\n\nSample Input 2\n\n2\r\ntakahashi 1000000000\r\naoki 999999999\n\nSample Output 2\n\naoki\r\ntakahashi", "platform": "atcoder", "question_id": "abc304_a", "contest_id": "abc304", "contest_date": "2023-06-03T00:00:00", "starter_code": "", "difficulty": "easy", "public_test_cases": "[{\"input\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"output\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2\\ntakahashi 1000000000\\naoki 999999999\\n\", \"output\": \"aoki\\ntakahashi\\n\", \"testtype\": \"stdin\"}]", "metadata": "{}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nThere are N people numbered 1, 2, \\ldots, N, sitting in this clockwise order around a round table.\r\nIn particular, person 1 is sitting next to person N in the clockwise direction.\nFor each i = 1, 2, \\ldots, N, person i has a name S_i and an age A_i.\r\nHere, no two people have the same name or the same age.\nStarting from the youngest person, print the names of all N people in the order of their seating positions in clockwise order.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS_1 A_1\r\nS_2 A_2\r\n\\vdots\r\nS_N A_N\n\nOutput\n\nPrint N lines.\r\nFor each i = 1, 2, \\ldots, N, the i-th line should contain the name of the person sitting in the i-th position clockwise from the youngest person.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- N is an integer.\n- S_i is a string of length between 1 and 10, consisting of lowercase English letters.\n- i \\neq j \\implies S_i \\neq S_j\n- 0 \\leq A_i \\leq 10^9\n- A_i is an integer.\n- i \\neq j \\implies A_i \\neq A_j\n\nSample Input 1\n\n5\r\nalice 31\r\nbob 41\r\ncarol 5\r\ndave 92\r\nellen 65\n\nSample Output 1\n\ncarol\r\ndave\r\nellen\r\nalice\r\nbob\r\n\nThe youngest person is person 3. Therefore, starting from person 3, print the names in the clockwise order of their seating positions: person 3, person 4, person 5, person 1, and person 2.\n\nSample Input 2\n\n2\r\ntakahashi 1000000000\r\naoki 999999999\n\nSample Output 2\n\naoki\r\ntakahashi\n\nRead the inputs from stdin solve the problem and write the answer to stdout (do not directly test on the sample inputs). Enclose your code within delimiters as follows. Ensure that when the python program runs, it reads the inputs, runs the algorithm and writes output to STDOUT.\n\n```python\n# YOUR CODE HERE\n```\n\n"}
{"question_title": "unique-3-digit-even-numbers", "question_content": "You are given an array of digits called digits. Your task is to determine the number of distinct three-digit even numbers that can be formed using these digits.\nNote: Each copy of a digit can only be used once per number, and there may not be leading zeros.\n \nExample 1:\n\nInput: digits = [1,2,3,4]\nOutput: 12\nExplanation: The 12 distinct 3-digit even numbers that can be formed are 124, 132, 134, 142, 214, 234, 312, 314, 324, 342, 412, and 432. Note that 222 cannot be formed because there is only 1 copy of the digit 2.\n\nExample 2:\n\nInput: digits = [0,2,2]\nOutput: 2\nExplanation: The only 3-digit even numbers that can be formed are 202 and 220. Note that the digit 2 can be used twice because it appears twice in the array.\n\nExample 3:\n\nInput: digits = [6,6,6]\nOutput: 1\nExplanation: Only 666 can be formed.\n\nExample 4:\n\nInput: digits = [1,3,5]\nOutput: 0\nExplanation: No even 3-digit numbers can be formed.\n\n \nConstraints:\n\n3 <= digits.length <= 10\n0 <= digits[i] <= 9", "platform": "leetcode", "question_id": "3799", "contest_id": "biweekly-contest-152", "contest_date": "2025-03-15T07:30:00", "starter_code": "class Solution:\n    def totalNumbers(self, digits: List[int]) -> int:\n        ", "difficulty": "easy", "public_test_cases": "[{\"input\": \"[1, 2, 3, 4]\", \"output\": \"12\", \"testtype\": \"functional\"}, {\"input\": \"[0, 2, 2]\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"[6, 6, 6]\", \"output\": \"1\", \"testtype\": \"functional\"}, {\"input\": \"[1, 3, 5]\", \"output\": \"0\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"totalNumbers\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given an array of digits called digits. Your task is to determine the number of distinct three-digit even numbers that can be formed using these digits.\nNote: Each copy of a digit can only be used once per number, and there may not be leading zeros.\n \nExample 1:\n\nInput: digits = [1,2,3,4]\nOutput: 12\nExplanation: The 12 distinct 3-digit even numbers that can be formed are 124, 132, 134, 142, 214, 234, 312, 314, 324, 342, 412, and 432. Note that 222 cannot be formed because there is only 1 copy of the digit 2.\n\nExample 2:\n\nInput: digits = [0,2,2]\nOutput: 2\nExplanation: The only 3-digit even numbers that can be formed are 202 and 220. Note that the digit 2 can be used twice because it appears twice in the array.\n\nExample 3:\n\nInput: digits = [6,6,6]\nOutput: 1\nExplanation: Only 666 can be formed.\n\nExample 4:\n\nInput: digits = [1,3,5]\nOutput: 0\nExplanation: No even 3-digit numbers can be formed.\n\n \nConstraints:\n\n3 <= digits.length <= 10\n0 <= digits[i] <= 9\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def totalNumbers(self, digits: List[int]) -> int:\n        \n```\n\n"}
{"question_title": "find-the-count-of-good-integers", "question_content": "You are given two positive integers n and k.\nAn integer x is called k-palindromic if:\n\nx is a palindrome.\nx is divisible by k.\n\nAn integer is called good if its digits can be rearranged to form a k-palindromic integer. For example, for k = 2, 2020 can be rearranged to form the k-palindromic integer 2002, whereas 1010 cannot be rearranged to form a k-palindromic integer.\nReturn the count of good integers containing n digits.\nNote that any integer must not have leading zeros, neither before nor after rearrangement. For example, 1010 cannot be rearranged to form 101.\n \nExample 1:\n\nInput: n = 3, k = 5\nOutput: 27\nExplanation:\nSome of the good integers are:\n\n551 because it can be rearranged to form 515.\n525 because it is already k-palindromic.\n\n\nExample 2:\n\nInput: n = 1, k = 4\nOutput: 2\nExplanation:\nThe two good integers are 4 and 8.\n\nExample 3:\n\nInput: n = 5, k = 6\nOutput: 2468\n\n \nConstraints:\n\n1 <= n <= 10\n1 <= k <= 9", "platform": "leetcode", "question_id": "3548", "contest_id": "biweekly-contest-138", "contest_date": "2024-08-31T07:30:00", "starter_code": "class Solution:\n    def countGoodIntegers(self, n: int, k: int) -> int:\n        ", "difficulty": "hard", "public_test_cases": "[{\"input\": \"3\\n5\", \"output\": \"27\", \"testtype\": \"functional\"}, {\"input\": \"1\\n4\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"5\\n6\", \"output\": \"2468\", \"testtype\": \"functional\"}]", "metadata": "{\"func_name\": \"countGoodIntegers\"}", "system": "You are an expert Python programmer. You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests.", "question": "You will be given a question (problem specification) and will generate a correct Python program that matches the specification and passes all tests. You will NOT return anything except for the program.\n\nQuestion:\nYou are given two positive integers n and k.\nAn integer x is called k-palindromic if:\n\nx is a palindrome.\nx is divisible by k.\n\nAn integer is called good if its digits can be rearranged to form a k-palindromic integer. For example, for k = 2, 2020 can be rearranged to form the k-palindromic integer 2002, whereas 1010 cannot be rearranged to form a k-palindromic integer.\nReturn the count of good integers containing n digits.\nNote that any integer must not have leading zeros, neither before nor after rearrangement. For example, 1010 cannot be rearranged to form 101.\n \nExample 1:\n\nInput: n = 3, k = 5\nOutput: 27\nExplanation:\nSome of the good integers are:\n\n551 because it can be rearranged to form 515.\n525 because it is already k-palindromic.\n\n\nExample 2:\n\nInput: n = 1, k = 4\nOutput: 2\nExplanation:\nThe two good integers are 4 and 8.\n\nExample 3:\n\nInput: n = 5, k = 6\nOutput: 2468\n\n \nConstraints:\n\n1 <= n <= 10\n1 <= k <= 9\n\nYou will use the following starter code to write the solution to the problem and enclose your code within delimiters.\n```python\nclass Solution:\n    def countGoodIntegers(self, n: int, k: int) -> int:\n        \n```\n\n"}
